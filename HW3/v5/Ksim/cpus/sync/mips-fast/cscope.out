cscope 15 $HOME/cs422/HW3/v3a/Ksim/cpus/sync/mips-fast               0000238851
	@decode.cc

1 
	~"decode.h
"

3 
	gDecode
::
	$Decode
 (
Mùc
 *
mc
)

5 
_mc
 = 
mc
;

6 
	}
}

8 
	gDecode
::~
	$Decode
 (Ë{
	}
}

11 
Decode
::
	$MaöLo›
 ()

27 
AWAIT_P_PHI0
;

28 
pùe_ªg_t
* 
fd
 = 
√w
Öipe_reg_t;

29 *
fd
 = *
_mc
->
_fd
;

30 
ös_c›y
 = 
fd
->
_ös
;

32 
pùe_ªg_t
* 
de
 = 
√w
Öipe_reg_t;

33 
_mc
->
	`Dec
(
fd
, 
de
);

35 
Boﬁ
 
°Æl
 = 
FALSE
;

36 
Boﬁ
 
isNewSysˇŒ
 = 
FALSE
;

37 
_mc
->
_°ÆlFëch
 = 
FALSE
;

41 
Boﬁ
 
§c
[2];

42 
Boﬁ
 
hi_lo
[2];

43 
Boﬁ
 
subªg
;

44 
Boﬁ
 
Âr
;

46 
Boﬁ
 
	`is_by∑ss
() {

47  
§c
[0] | src[1] | 
hi_lo
[0] | hi_lo[1] | 
subªg
 | 
Âr
;

49 } 
ex_ex
;

50 
ex_ex
.
§c
[0] =Éx_ex.§c[1] =Éx_ex.
hi_lo
[0] =Éx_ex.hi_lo[1] =Éx_ex.
subªg
 =Éx_ex.
Âr
 = 
FALSE
;

52 i‡(
_mc
->
_isSysˇŒ
 =
TRUE
) {

54 
°Æl
 = 
TRUE
;

55 } i‡(
de
->
_isIŒegÆOp
) {

57 
AWAIT_P_PHI1
;

58 
_mc
->
_de
->
_isIŒegÆOp
 = 
TRUE
;

60 } i‡(
de
->
_isSysˇŒ
) {

62 
°Æl
 = 
TRUE
;

63 
isNewSysˇŒ
 = 
TRUE
;

64 
_mc
->
_isSysˇŒ
 = 
TRUE
;

66 
i
 = 0; i < 2; i++) {

67 
v
 = 
de
->
_§c_ªg
[
i
];

68 i‡(
v
) {

69 i‡(
v
 =
HI
) {

70 i‡(
_mc
->
_hi_lo_waô
[0] == 2) {

71 
ex_ex
.
hi_lo
[0] = 
TRUE
;

72 } i‡(
_mc
->
_hi_lo_waô
[0] > 0Ë
°Æl
 = 
TRUE
;

73 } i‡(
v
 =
LO
) {

74 i‡(
_mc
->
_hi_lo_waô
[1] == 2) {

75 
ex_ex
.
hi_lo
[1] = 
TRUE
;

76 } i‡(
_mc
->
_hi_lo_waô
[1] > 0Ë
°Æl
 = 
TRUE
;

78 i‡(
_mc
->
_g¥_waô
[
v
] > 0) {

79 i‡(
_mc
->
_g¥_waô
[
v
] == 2) {

80 
ex_ex
.
§c
[
i
] = 
TRUE
;

81 } 
°Æl
 |
TRUE
;

87 i‡(
de
->
_§c_subªg
 && 
_mc
->
_g¥_waô
[de->_src_subreg] > 0) {

88 i‡(
_mc
->
_g¥_waô
[
de
->
_§c_subªg
] == 2) {

89 
ex_ex
.
subªg
 = 
TRUE
;

90 } 
°Æl
 |
TRUE
;

93 i‡(
de
->
_has_Êﬂt_§c
) {

94 
v
 = 
_mc
->
_Âr_waô
[
de
->
_§c_‰eg
 >> 1];

95 i‡(
v
 == 2) {

96 
ex_ex
.
Âr
 = 
TRUE
;

97 } i‡(
v
 > 0Ë
°Æl
 |
TRUE
;

105 i‡(
ex_ex
.
	`is_by∑ss
(Ë=
TRUE
) {

107 i‡(
de
->
_memC⁄åﬁ
 && !de->
_wrôeREG
Ë
°Æl
 = 
TRUE
;

109 i‡(
_mc
->
_de
->
_memC⁄åﬁ
 && _mc->_de->
_wrôeREG
Ë
°Æl
 = 
TRUE
;

112 
i
 = 0; i < 32; i++) {

113 i‡(
_mc
->
_g¥_waô
[
i
]) _mc->_gpr_wait[i]--;

116 
i
 = 0; i < 16; i++) {

117 i‡(
_mc
->
_Âr_waô
[
i
]) _mc->_fpr_wait[i]--;

120 
i
 = 0; i < 2; i++) {

121 i‡(
_mc
->
_hi_lo_waô
[
i
]) _mc->_hi_lo_wait[i]--;

124 i‡(
°Æl
) {

125 
_mc
->
_°ÆlFëch
 = 
TRUE
;

128 
dñëe
 
de
;

130 
AWAIT_P_PHI1
;

131 i‡(!
°Æl
) {

133 
_mc
->
	`Dec
(
fd
, _mc->
_de
);

135 i‡(
ex_ex
.
§c
[0]) {

136 
_mc
->
_de
->
_decodedSRC1
 = _mc->
_ex_ex
.
lo
;

138 i‡(
_mc
->
_de
->
_btgt_by∑ss
Ë_mc->_de->
_btgt
 = _mc->
_ex_ex
.
lo
;

140 i‡(
ex_ex
.
§c
[1]Ë
_mc
->
_de
->
_decodedSRC2
 = _mc->
_ex_ex
.
lo
;

141 i‡(
ex_ex
.
subªg
Ë
_mc
->
_de
->
_subªgO≥ønd
 = _mc->
_ex_ex
.
lo
;

142 i‡(
ex_ex
.
hi_lo
[0]Ë
_mc
->
_de
->
_decodedSRC1
 = _mc->
_ex_ex
.
hi
;

143 i‡(
ex_ex
.
hi_lo
[1]Ë
_mc
->
_de
->
_decodedSRC1
 = _mc->
_ex_ex
.
lo
;

144 i‡(
ex_ex
.
Âr
Ë
_mc
->
_de
->
_decodedSRC1
 = _mc->
_ex_ex
.
lo
;

146 
	#SET_MAX
(
de°
, 
§c
Ëi‡(§¯> de°Ëde° = 
	)
src

147 i‡(
_mc
->
_de
->
_wrôeREG
 && _mc->_de->
_decodedDST
) {

148 
	`SET_MAX
(
_mc
->
_g¥_waô
[_mc->
_de
->
_decodedDST
], _mc->_de->
_d°Æl
);

150 i‡(
_mc
->
_de
->
_hiWP‹t
 || _mc->_de->
_loWP‹t
) {

151 i‡(
_mc
->
_de
->
_hiWP‹t
)

152 
	`SET_MAX
(
_mc
->
_hi_lo_waô
[0], _mc->
_de
->
_d°Æl
);

153 i‡(
_mc
->
_de
->
_loWP‹t
)

154 
	`SET_MAX
(
_mc
->
_hi_lo_waô
[1], _mc->
_de
->
_d°Æl
);

156 i‡(
_mc
->
_de
->
_wrôeFREG
)

157 
	`SET_MAX
(
_mc
->
_Âr_waô
[_mc->
_de
->
_decodedDST
 >> 1], _mc->_de->
_d°Æl
);

158 } i‡(
isNewSysˇŒ
) {

159 
_mc
->
_„tch_pc
 -= 4;

160 
_mc
->
	`Dec
(
fd
, _mc->
_de
);

161 
fd
->
_ös
 = 0;

162 
_mc
->
_de
->
_is_bubbÀ
 = 
TRUE
;

164 
_mc
->
_fd
->
_ös
 = 0;

165 } i‡(
_mc
->
_isSysˇŒ
) {

166 
fd
->
_ös
 = 0;

167 
_mc
->
	`Dec
(
fd
, _mc->
_de
);

168 
_mc
->
_de
->
_is_bubbÀ
 = 
TRUE
;

170 
_mc
->
_fd
->
_ös
 = 0;

172 
fd
->
_ös
 = 0;

173 
_mc
->
	`Dec
(
fd
, _mc->
_de
);

174 
_mc
->
_de
->
_is_bubbÀ
 = 
TRUE
;

177 
dñëe
 
fd
;

178 #ifde‡
MIPC_DEBUG


179 
	`Ârötf
(
_mc
->
_debugLog
, "<%Œu> Decoded in†%#x\n", 
SIM_TIME
, 
ös_c›y
);

	@decode.h

1 #i‚de‡
__DECODE_H__


2 
	#__DECODE_H__


	)

4 
	~"mùs.h
"

6 
˛ass
 
	gMùc
;

8 ˛as†
	cDecode
 : 
public
 
SimObje˘
 {

9 
public
:

10 
Decode
 (
Mùc
*);

11 ~
Decode
 ();

13 
	mFAKE_SIM_TEMPLATE
;

15 
Mùc
 *
	m_mc
;

	@exec_helper.cc

1 
	~<m©h.h
>

2 
	~"mùs.h
"

3 
	~"›codes.h
"

4 
	~<as£π.h
>

5 
	~"≠p_sysˇŒ.h
"

7 
	#MAGIC_EXEC
 0xdódbìf

	)

16 
	gMùc
::
	$Dec
 (
pùe_ªg_t
* 
fd
,Öùe_ªg_t* 
de
)

18 
MùsIn¢
 
i
;

19 sig√d 
a1
, 
a2
;

20 
¨1
, 
¨2
, 
s1
, 
s2
, 
r1
, 
r2
, 
t1
, 
t2
;

21 
LL
 
addr
;

22 
vÆ
;

23 
LL
 
vÆue
, 
mask
;

24 
ß
,
j
;

25 
W‹d
 
dummy
;

27 
de
->
_isIŒegÆOp
 = 
FALSE
;

28 
de
->
_ös
 = 0;

29 
de
->
_isSysˇŒ
 = 
FALSE
;

30 
de
->
_d°Æl
 = 0;

31 
de
->
_has_Êﬂt_§c
 = 0;

32 
de
->
_is_bubbÀ
 = 
FALSE
;

33 
de
->
_btgt_by∑ss
 = 
FALSE
;

34 
de
->
_vÆid
 = 
TRUE
;

35 
de
->
_§c_subªg
 = 0;

43 
de
->
_d°Æl
 = 2;

44 
de
->
_§c_ªg
[0] = 0;

45 
de
->
_§c_ªg
[1] = 0;

46 
de
->
_§c_‰eg
 = 0;

47 
de
->
_has_Êﬂt_§c
 = 0;

48 
de
->
_ös
 = 
fd
->_ins;

49 
de
->
_pc
 = 
fd
->_pc;

51 
i
.
d©a
 = 
fd
->
_ös
;

53 
	#SIGN_EXTEND_BYTE
(
x
Ëdÿ{ x <<24; x >>24; } 0)

	)

54 
	#SIGN_EXTEND_IMM
(
x
Ëdÿ{ x <<16; x >>16; } 0)

	)

56 
i
.
ªg
.
›
) {

59 
de
->
_decodedSRC1
 = 
_g¥
[
i
.
ªg
.
rs
];

60 
de
->
_decodedSRC2
 = 
_g¥
[
i
.
ªg
.
π
];

61 
de
->
_decodedDST
 = 
i
.
ªg
.
rd
;

62 
de
->
_wrôeREG
 = 
TRUE
;

63 
de
->
_wrôeFREG
 = 
FALSE
;

64 
de
->
_hiWP‹t
 = 
FALSE
;

65 
de
->
_loWP‹t
 = 
FALSE
;

66 
de
->
_memC⁄åﬁ
 = 
FALSE
;

71 
de
->
_§c_ªg
[0] = 
i
.
ªg
.
rs
;

72 
de
->
_§c_ªg
[1] = 
i
.
ªg
.
π
;

74 
i
.
ªg
.
func
) {

77 
de
->
_›C⁄åﬁ
 = 
func_add_addu
;

81 
de
->
_›C⁄åﬁ
 = 
func_™d
;

85 
de
->
_›C⁄åﬁ
 = 
func_n‹
;

89 
de
->
_›C⁄åﬁ
 = 
func_‹
;

93 
de
->
_›C⁄åﬁ
 = 
func_¶l
;

94 
de
->
_decodedShi·Amt
 = 
i
.
ªg
.
ß
;

95 
de
->
_§c_ªg
[0] = 0;

99 
de
->
_›C⁄åﬁ
 = 
func_¶lv
;

103 
de
->
_›C⁄åﬁ
 = 
func_¶t
;

107 
de
->
_›C⁄åﬁ
 = 
func_¶tu
;

111 
de
->
_›C⁄åﬁ
 = 
func_§a
;

112 
de
->
_decodedShi·Amt
 = 
i
.
ªg
.
ß
;

113 
de
->
_§c_ªg
[0] = 0;

117 
de
->
_›C⁄åﬁ
 = 
func_§av
;

121 
de
->
_›C⁄åﬁ
 = 
func_§l
;

122 
de
->
_decodedShi·Amt
 = 
i
.
ªg
.
ß
;

123 
de
->
_§c_ªg
[1] = 0;

127 
de
->
_›C⁄åﬁ
 = 
func_§lv
;

133 
de
->
_›C⁄åﬁ
 = 
func_sub_subu
;

137 
de
->
_›C⁄åﬁ
 = 
func_x‹
;

141 
de
->
_›C⁄åﬁ
 = 
func_div
;

142 
de
->
_hiWP‹t
 = 
TRUE
;

143 
de
->
_loWP‹t
 = 
TRUE
;

144 
de
->
_wrôeREG
 = 
FALSE
;

145 
de
->
_wrôeFREG
 = 
FALSE
;

149 
de
->
_›C⁄åﬁ
 = 
func_divu
;

150 
de
->
_hiWP‹t
 = 
TRUE
;

151 
de
->
_loWP‹t
 = 
TRUE
;

152 
de
->
_wrôeREG
 = 
FALSE
;

153 
de
->
_wrôeFREG
 = 
FALSE
;

157 
de
->
_›C⁄åﬁ
 = 
func_mfhi
;

158 
de
->
_decodedSRC1
 = 
_hi
;

159 
de
->
_§c_ªg
[0] = 
HI
;

160 
de
->
_§c_ªg
[1] = 0;

164 
de
->
_›C⁄åﬁ
 = 
func_mÊo
;

165 
de
->
_decodedSRC1
 = 
_lo
;

166 
de
->
_§c_ªg
[0] = 
LO
;

167 
de
->
_§c_ªg
[1] = 0;

171 
de
->
_›C⁄åﬁ
 = 
func_mthi
;

172 
de
->
_hiWP‹t
 = 
TRUE
;

173 
de
->
_wrôeREG
 = 
FALSE
;

174 
de
->
_wrôeFREG
 = 
FALSE
;

175 
de
->
_§c_ªg
[0] = 
i
.
ªg
.
rs
;

176 
de
->
_§c_ªg
[1] = 0;

180 
de
->
_›C⁄åﬁ
 = 
func_méo
;

181 
de
->
_loWP‹t
 = 
TRUE
;

182 
de
->
_wrôeREG
 = 
FALSE
;

183 
de
->
_wrôeFREG
 = 
FALSE
;

184 
de
->
_§c_ªg
[0] = 
i
.
ªg
.
rs
;

185 
de
->
_§c_ªg
[1] = 0;

189 
de
->
_›C⁄åﬁ
 = 
func_mu…
;

190 
de
->
_hiWP‹t
 = 
TRUE
;

191 
de
->
_loWP‹t
 = 
TRUE
;

192 
de
->
_wrôeREG
 = 
FALSE
;

193 
de
->
_wrôeFREG
 = 
FALSE
;

197 
de
->
_›C⁄åﬁ
 = 
func_mu…u
;

198 
de
->
_hiWP‹t
 = 
TRUE
;

199 
de
->
_loWP‹t
 = 
TRUE
;

200 
de
->
_wrôeREG
 = 
FALSE
;

201 
de
->
_wrôeFREG
 = 
FALSE
;

205 
de
->
_›C⁄åﬁ
 = 
func_jÆr
;

206 
de
->
_btgt
 = de->
_decodedSRC1
;

207 
de
->
_bd¶Ÿ
 = 1;

208 
de
->
_btgt_by∑ss
 = 
TRUE
;

209 
de
->
_§c_ªg
[1] = 0;

213 
de
->
_›C⁄åﬁ
 = 
func_jr
;

214 
de
->
_wrôeREG
 = 
FALSE
;

215 
de
->
_wrôeFREG
 = 
FALSE
;

216 
de
->
_btgt
 = de->
_decodedSRC1
;

217 
de
->
_bd¶Ÿ
 = 1;

218 
de
->
_btgt_by∑ss
 = 
TRUE
;

219 
de
->
_§c_ªg
[1] = 0;

223 
de
->
_›C⁄åﬁ
 = 
func_awaô_bªak
;

224 
de
->
_wrôeREG
 = 
FALSE
;

225 
de
->
_wrôeFREG
 = 
FALSE
;

229 
de
->
_›C⁄åﬁ
 = 
func_sysˇŒ
;

230 
de
->
_wrôeREG
 = 
FALSE
;

231 
de
->
_wrôeFREG
 = 
FALSE
;

232 
de
->
_isSysˇŒ
 = 
TRUE
;

233 
de
->
_d°Æl
 = 3;

237 
de
->
_isIŒegÆOp
 = 
TRUE
;

238 
de
->
_wrôeREG
 = 
FALSE
;

239 
de
->
_wrôeFREG
 = 
FALSE
;

247 
de
->
_›C⁄åﬁ
 = 
func_addi_addiu
;

248 
de
->
_decodedSRC1
 = 
_g¥
[
i
.
imm
.
rs
];

249 
de
->
_decodedSRC2
 = 
i
.
imm
.imm;

250 
de
->
_decodedDST
 = 
i
.
imm
.
π
;

251 
de
->
_wrôeREG
 = 
TRUE
;

252 
de
->
_wrôeFREG
 = 
FALSE
;

253 
de
->
_hiWP‹t
 = 
FALSE
;

254 
de
->
_loWP‹t
 = 
FALSE
;

255 
de
->
_memC⁄åﬁ
 = 
FALSE
;

256 
de
->
_§c_ªg
[0] = 
i
.
imm
.
rs
;

260 
de
->
_›C⁄åﬁ
 = 
func_™di
;

261 
de
->
_decodedSRC1
 = 
_g¥
[
i
.
imm
.
rs
];

262 
de
->
_decodedSRC2
 = 
i
.
imm
.imm;

263 
de
->
_decodedDST
 = 
i
.
imm
.
π
;

264 
de
->
_wrôeREG
 = 
TRUE
;

265 
de
->
_wrôeFREG
 = 
FALSE
;

266 
de
->
_hiWP‹t
 = 
FALSE
;

267 
de
->
_loWP‹t
 = 
FALSE
;

268 
de
->
_memC⁄åﬁ
 = 
FALSE
;

269 
de
->
_§c_ªg
[0] = 
i
.
imm
.
rs
;

273 
de
->
_›C⁄åﬁ
 = 
func_lui
;

274 
de
->
_decodedSRC2
 = 
i
.
imm
.imm;

275 
de
->
_decodedDST
 = 
i
.
imm
.
π
;

276 
de
->
_wrôeREG
 = 
TRUE
;

277 
de
->
_wrôeFREG
 = 
FALSE
;

278 
de
->
_hiWP‹t
 = 
FALSE
;

279 
de
->
_loWP‹t
 = 
FALSE
;

280 
de
->
_memC⁄åﬁ
 = 
FALSE
;

284 
de
->
_›C⁄åﬁ
 = 
func_‹i
;

285 
de
->
_decodedSRC1
 = 
_g¥
[
i
.
imm
.
rs
];

286 
de
->
_decodedSRC2
 = 
i
.
imm
.imm;

287 
de
->
_decodedDST
 = 
i
.
imm
.
π
;

288 
de
->
_wrôeREG
 = 
TRUE
;

289 
de
->
_wrôeFREG
 = 
FALSE
;

290 
de
->
_hiWP‹t
 = 
FALSE
;

291 
de
->
_loWP‹t
 = 
FALSE
;

292 
de
->
_memC⁄åﬁ
 = 
FALSE
;

293 
de
->
_§c_ªg
[0] = 
i
.
imm
.
rs
;

297 
de
->
_›C⁄åﬁ
 = 
func_¶ti
;

298 
de
->
_decodedSRC1
 = 
_g¥
[
i
.
imm
.
rs
];

299 
de
->
_decodedSRC2
 = 
i
.
imm
.imm;

300 
de
->
_decodedDST
 = 
i
.
imm
.
π
;

301 
de
->
_wrôeREG
 = 
TRUE
;

302 
de
->
_wrôeFREG
 = 
FALSE
;

303 
de
->
_hiWP‹t
 = 
FALSE
;

304 
de
->
_loWP‹t
 = 
FALSE
;

305 
de
->
_memC⁄åﬁ
 = 
FALSE
;

306 
de
->
_§c_ªg
[0] = 
i
.
imm
.
rs
;

310 
de
->
_›C⁄åﬁ
 = 
func_¶tiu
;

311 
de
->
_decodedSRC1
 = 
_g¥
[
i
.
imm
.
rs
];

312 
de
->
_decodedSRC2
 = 
i
.
imm
.imm;

313 
de
->
_decodedDST
 = 
i
.
imm
.
π
;

314 
de
->
_wrôeREG
 = 
TRUE
;

315 
de
->
_wrôeFREG
 = 
FALSE
;

316 
de
->
_hiWP‹t
 = 
FALSE
;

317 
de
->
_loWP‹t
 = 
FALSE
;

318 
de
->
_memC⁄åﬁ
 = 
FALSE
;

319 
de
->
_§c_ªg
[0] = 
i
.
imm
.
rs
;

323 
de
->
_›C⁄åﬁ
 = 
func_x‹i
;

324 
de
->
_decodedSRC1
 = 
_g¥
[
i
.
imm
.
rs
];

325 
de
->
_decodedSRC2
 = 
i
.
imm
.imm;

326 
de
->
_decodedDST
 = 
i
.
imm
.
π
;

327 
de
->
_wrôeREG
 = 
TRUE
;

328 
de
->
_wrôeFREG
 = 
FALSE
;

329 
de
->
_hiWP‹t
 = 
FALSE
;

330 
de
->
_loWP‹t
 = 
FALSE
;

331 
de
->
_memC⁄åﬁ
 = 
FALSE
;

332 
de
->
_§c_ªg
[0] = 
i
.
imm
.
rs
;

336 
de
->
_›C⁄åﬁ
 = 
func_beq
;

337 
de
->
_decodedSRC1
 = 
_g¥
[
i
.
imm
.
rs
];

338 
de
->
_decodedSRC2
 = 
_g¥
[
i
.
imm
.
π
];

339 
de
->
_bønchOff£t
 = 
i
.
imm
.imm;

340 
de
->
_wrôeREG
 = 
FALSE
;

341 
de
->
_wrôeFREG
 = 
FALSE
;

342 
de
->
_hiWP‹t
 = 
FALSE
;

343 
de
->
_loWP‹t
 = 
FALSE
;

344 
de
->
_memC⁄åﬁ
 = 
FALSE
;

345 
de
->
_bønchOff£t
 <<16; de->_bønchOff£à>>14; de->
_bd¶Ÿ
 = 1; de->
_btgt
 = ()((sig√d)
fd
->
_pc
+de->_branchOffset+4);

346 
de
->
_§c_ªg
[0] = 
i
.
imm
.
rs
;

347 
de
->
_§c_ªg
[1] = 
i
.
imm
.
π
;

352 
de
->
_decodedSRC1
 = 
_g¥
[
i
.
imm
.
rs
];

353 
de
->
_bønchOff£t
 = 
i
.
imm
.imm;

354 
de
->
_wrôeREG
 = 
FALSE
;

355 
de
->
_wrôeFREG
 = 
FALSE
;

356 
de
->
_hiWP‹t
 = 
FALSE
;

357 
de
->
_loWP‹t
 = 
FALSE
;

358 
de
->
_memC⁄åﬁ
 = 
FALSE
;

360 
i
.
ªg
.
π
) {

362 
de
->
_›C⁄åﬁ
 = 
func_bgez
;

363 
de
->
_bønchOff£t
 <<16; de->_bønchOff£à>>14; de->
_bd¶Ÿ
 = 1; de->
_btgt
 = ()((sig√d)
fd
->
_pc
+de->_branchOffset+4);

364 
de
->
_§c_ªg
[0] = 
i
.
imm
.
rs
;

368 
de
->
_›C⁄åﬁ
 = 
func_bgezÆ
;

369 
de
->
_decodedDST
 = 31;

370 
de
->
_wrôeREG
 = 
TRUE
;

371 
de
->
_bønchOff£t
 <<16; de->_bønchOff£à>>14; de->
_bd¶Ÿ
 = 1; de->
_btgt
 = ()((sig√d)
fd
->
_pc
+de->_branchOffset+4);

372 
de
->
_§c_ªg
[0] = 
i
.
imm
.
rs
;

376 
de
->
_›C⁄åﬁ
 = 
func_b…zÆ
;

377 
de
->
_decodedDST
 = 31;

378 
de
->
_wrôeREG
 = 
TRUE
;

379 
de
->
_bønchOff£t
 <<16; de->_bønchOff£à>>14; de->
_bd¶Ÿ
 = 1; de->
_btgt
 = ()((sig√d)
fd
->
_pc
+de->_branchOffset+4);

380 
de
->
_§c_ªg
[0] = 
i
.
imm
.
rs
;

384 
de
->
_›C⁄åﬁ
 = 
func_b…z
;

385 
de
->
_bønchOff£t
 <<16; de->_bønchOff£à>>14; de->
_bd¶Ÿ
 = 1; de->
_btgt
 = ()((sig√d)
fd
->
_pc
+de->_branchOffset+4);

386 
de
->
_§c_ªg
[0] = 
i
.
imm
.
rs
;

390 
de
->
_isIŒegÆOp
 = 
TRUE
;

396 
de
->
_›C⁄åﬁ
 = 
func_bgtz
;

397 
de
->
_decodedSRC1
 = 
_g¥
[
i
.
imm
.
rs
];

398 
de
->
_bønchOff£t
 = 
i
.
imm
.imm;

399 
de
->
_wrôeREG
 = 
FALSE
;

400 
de
->
_wrôeFREG
 = 
FALSE
;

401 
de
->
_hiWP‹t
 = 
FALSE
;

402 
de
->
_loWP‹t
 = 
FALSE
;

403 
de
->
_memC⁄åﬁ
 = 
FALSE
;

404 
de
->
_bønchOff£t
 <<16; de->_bønchOff£à>>14; de->
_bd¶Ÿ
 = 1; de->
_btgt
 = ()((sig√d)
fd
->
_pc
+de->_branchOffset+4);

405 
de
->
_§c_ªg
[0] = 
i
.
imm
.
rs
;

409 
de
->
_›C⁄åﬁ
 = 
func_bÀz
;

410 
de
->
_decodedSRC1
 = 
_g¥
[
i
.
imm
.
rs
];

411 
de
->
_bønchOff£t
 = 
i
.
imm
.imm;

412 
de
->
_wrôeREG
 = 
FALSE
;

413 
de
->
_wrôeFREG
 = 
FALSE
;

414 
de
->
_hiWP‹t
 = 
FALSE
;

415 
de
->
_loWP‹t
 = 
FALSE
;

416 
de
->
_memC⁄åﬁ
 = 
FALSE
;

417 
de
->
_bønchOff£t
 <<16; de->_bønchOff£à>>14; de->
_bd¶Ÿ
 = 1; de->
_btgt
 = ()((sig√d)
fd
->
_pc
+de->_branchOffset+4);

418 
de
->
_§c_ªg
[0] = 
i
.
imm
.
rs
;

422 
de
->
_›C⁄åﬁ
 = 
func_b√
;

423 
de
->
_decodedSRC1
 = 
_g¥
[
i
.
ªg
.
rs
];

424 
de
->
_decodedSRC2
 = 
_g¥
[
i
.
ªg
.
π
];

425 
de
->
_bønchOff£t
 = 
i
.
imm
.imm;

426 
de
->
_wrôeREG
 = 
FALSE
;

427 
de
->
_wrôeFREG
 = 
FALSE
;

428 
de
->
_hiWP‹t
 = 
FALSE
;

429 
de
->
_loWP‹t
 = 
FALSE
;

430 
de
->
_memC⁄åﬁ
 = 
FALSE
;

431 
de
->
_bønchOff£t
 <<16; de->_bønchOff£à>>14; de->
_bd¶Ÿ
 = 1; de->
_btgt
 = ()((sig√d)
fd
->
_pc
+de->_branchOffset+4);

432 
de
->
_§c_ªg
[0] = 
i
.
imm
.
rs
;

433 
de
->
_§c_ªg
[1] = 
i
.
imm
.
π
;

437 
de
->
_›C⁄åﬁ
 = 
func_j
;

438 
de
->
_bønchOff£t
 = 
i
.
tgt
.tgt;

439 
de
->
_wrôeREG
 = 
FALSE
;

440 
de
->
_wrôeFREG
 = 
FALSE
;

441 
de
->
_hiWP‹t
 = 
FALSE
;

442 
de
->
_loWP‹t
 = 
FALSE
;

443 
de
->
_memC⁄åﬁ
 = 
FALSE
;

444 
de
->
_btgt
 = ((
fd
->
_pc
+4Ë& 0xf0000000Ë| (de->
_bønchOff£t
<<2); de->
_bd¶Ÿ
 = 1;

448 
de
->
_›C⁄åﬁ
 = 
func_jÆ
;

449 
de
->
_bønchOff£t
 = 
i
.
tgt
.tgt;

450 
de
->
_decodedDST
 = 31;

451 
de
->
_wrôeREG
 = 
TRUE
;

452 
de
->
_wrôeFREG
 = 
FALSE
;

453 
de
->
_hiWP‹t
 = 
FALSE
;

454 
de
->
_loWP‹t
 = 
FALSE
;

455 
de
->
_memC⁄åﬁ
 = 
FALSE
;

456 
de
->
_btgt
 = ((
fd
->
_pc
+4Ë& 0xf0000000Ë| (de->
_bønchOff£t
<<2); de->
_bd¶Ÿ
 = 1;

460 
de
->
_›C⁄åﬁ
 = 
func_lb
;

461 
de
->
_memOp
 = 
mem_lb
;

462 
de
->
_decodedSRC1
 = 
_g¥
[
i
.
ªg
.
rs
];

463 
de
->
_decodedSRC2
 = 
i
.
imm
.imm;

464 
de
->
_decodedDST
 = 
i
.
ªg
.
π
;

465 
de
->
_wrôeREG
 = 
TRUE
;

466 
de
->
_wrôeFREG
 = 
FALSE
;

467 
de
->
_hiWP‹t
 = 
FALSE
;

468 
de
->
_loWP‹t
 = 
FALSE
;

469 
de
->
_memC⁄åﬁ
 = 
TRUE
;

470 
de
->
_§c_ªg
[0] = 
i
.
ªg
.
rs
;

474 
de
->
_›C⁄åﬁ
 = 
func_lbu
;

475 
de
->
_memOp
 = 
mem_lbu
;

476 
de
->
_decodedSRC1
 = 
_g¥
[
i
.
ªg
.
rs
];

477 
de
->
_decodedSRC2
 = 
i
.
imm
.imm;

478 
de
->
_decodedDST
 = 
i
.
ªg
.
π
;

479 
de
->
_wrôeREG
 = 
TRUE
;

480 
de
->
_wrôeFREG
 = 
FALSE
;

481 
de
->
_hiWP‹t
 = 
FALSE
;

482 
de
->
_loWP‹t
 = 
FALSE
;

483 
de
->
_memC⁄åﬁ
 = 
TRUE
;

484 
de
->
_§c_ªg
[0] = 
i
.
ªg
.
rs
;

488 
de
->
_›C⁄åﬁ
 = 
func_lh
;

489 
de
->
_memOp
 = 
mem_lh
;

490 
de
->
_decodedSRC1
 = 
_g¥
[
i
.
ªg
.
rs
];

491 
de
->
_decodedSRC2
 = 
i
.
imm
.imm;

492 
de
->
_decodedDST
 = 
i
.
ªg
.
π
;

493 
de
->
_wrôeREG
 = 
TRUE
;

494 
de
->
_wrôeFREG
 = 
FALSE
;

495 
de
->
_hiWP‹t
 = 
FALSE
;

496 
de
->
_loWP‹t
 = 
FALSE
;

497 
de
->
_memC⁄åﬁ
 = 
TRUE
;

498 
de
->
_§c_ªg
[0] = 
i
.
ªg
.
rs
;

502 
de
->
_›C⁄åﬁ
 = 
func_lhu
;

503 
de
->
_memOp
 = 
mem_lhu
;

504 
de
->
_decodedSRC1
 = 
_g¥
[
i
.
ªg
.
rs
];

505 
de
->
_decodedSRC2
 = 
i
.
imm
.imm;

506 
de
->
_decodedDST
 = 
i
.
ªg
.
π
;

507 
de
->
_wrôeREG
 = 
TRUE
;

508 
de
->
_wrôeFREG
 = 
FALSE
;

509 
de
->
_hiWP‹t
 = 
FALSE
;

510 
de
->
_loWP‹t
 = 
FALSE
;

511 
de
->
_memC⁄åﬁ
 = 
TRUE
;

512 
de
->
_§c_ªg
[0] = 
i
.
ªg
.
rs
;

516 
de
->
_›C⁄åﬁ
 = 
func_lwl
;

517 
de
->
_memOp
 = 
mem_lwl
;

518 
de
->
_decodedSRC1
 = 
_g¥
[
i
.
ªg
.
rs
];

519 
de
->
_decodedSRC2
 = 
i
.
imm
.imm;

520 
de
->
_subªgO≥ønd
 = 
_g¥
[
i
.
ªg
.
π
];

521 
de
->
_decodedDST
 = 
i
.
ªg
.
π
;

522 
de
->
_wrôeREG
 = 
TRUE
;

523 
de
->
_wrôeFREG
 = 
FALSE
;

524 
de
->
_hiWP‹t
 = 
FALSE
;

525 
de
->
_loWP‹t
 = 
FALSE
;

526 
de
->
_memC⁄åﬁ
 = 
TRUE
;

527 
de
->
_§c_ªg
[0] = 
i
.
ªg
.
rs
;

528 
de
->
_§c_subªg
 = 
i
.
ªg
.
π
;

532 
de
->
_›C⁄åﬁ
 = 
func_lw
;

533 
de
->
_memOp
 = 
mem_lw
;

534 
de
->
_decodedSRC1
 = 
_g¥
[
i
.
ªg
.
rs
];

535 
de
->
_decodedSRC2
 = 
i
.
imm
.imm;

536 
de
->
_decodedDST
 = 
i
.
ªg
.
π
;

537 
de
->
_wrôeREG
 = 
TRUE
;

538 
de
->
_wrôeFREG
 = 
FALSE
;

539 
de
->
_hiWP‹t
 = 
FALSE
;

540 
de
->
_loWP‹t
 = 
FALSE
;

541 
de
->
_memC⁄åﬁ
 = 
TRUE
;

542 
de
->
_§c_ªg
[0] = 
i
.
imm
.
rs
;

546 
de
->
_›C⁄åﬁ
 = 
func_lwr
;

547 
de
->
_memOp
 = 
mem_lwr
;

548 
de
->
_decodedSRC1
 = 
_g¥
[
i
.
ªg
.
rs
];

549 
de
->
_decodedSRC2
 = 
i
.
imm
.imm;

550 
de
->
_subªgO≥ønd
 = 
_g¥
[
i
.
ªg
.
π
];

551 
de
->
_decodedDST
 = 
i
.
ªg
.
π
;

552 
de
->
_wrôeREG
 = 
TRUE
;

553 
de
->
_wrôeFREG
 = 
FALSE
;

554 
de
->
_hiWP‹t
 = 
FALSE
;

555 
de
->
_loWP‹t
 = 
FALSE
;

556 
de
->
_memC⁄åﬁ
 = 
TRUE
;

557 
de
->
_§c_ªg
[0] = 
i
.
ªg
.
rs
;

558 
de
->
_§c_subªg
 = 
i
.
ªg
.
π
;

562 
de
->
_›C⁄åﬁ
 = 
func_lwc1
;

563 
de
->
_memOp
 = 
mem_lwc1
;

564 
de
->
_decodedSRC1
 = 
_g¥
[
i
.
ªg
.
rs
];

565 
de
->
_decodedSRC2
 = 
i
.
imm
.imm;

566 
de
->
_decodedDST
 = 
i
.
ªg
.
π
;

567 
de
->
_wrôeREG
 = 
FALSE
;

568 
de
->
_wrôeFREG
 = 
TRUE
;

569 
de
->
_hiWP‹t
 = 
FALSE
;

570 
de
->
_loWP‹t
 = 
FALSE
;

571 
de
->
_memC⁄åﬁ
 = 
TRUE
;

572 
de
->
_§c_ªg
[0] = 
i
.
ªg
.
rs
;

576 
de
->
_›C⁄åﬁ
 = 
func_swc1
;

577 
de
->
_memOp
 = 
mem_swc1
;

578 
de
->
_decodedSRC1
 = 
_g¥
[
i
.
ªg
.
rs
];

579 
de
->
_decodedSRC2
 = 
i
.
imm
.imm;

580 
de
->
_decodedDST
 = 
i
.
ªg
.
π
;

581 
de
->
_wrôeREG
 = 
FALSE
;

582 
de
->
_wrôeFREG
 = 
FALSE
;

583 
de
->
_hiWP‹t
 = 
FALSE
;

584 
de
->
_loWP‹t
 = 
FALSE
;

585 
de
->
_memC⁄åﬁ
 = 
TRUE
;

586 
de
->
_§c_‰eg
 = 
i
.
‰eg
.
·
;

587 
de
->
_has_Êﬂt_§c
 = 1;

588 
de
->
_§c_ªg
[0] = 
i
.
ªg
.
rs
;

592 
de
->
_›C⁄åﬁ
 = 
func_sb
;

593 
de
->
_memOp
 = 
mem_sb
;

594 
de
->
_decodedSRC1
 = 
_g¥
[
i
.
ªg
.
rs
];

595 
de
->
_decodedSRC2
 = 
i
.
imm
.imm;

596 
de
->
_decodedDST
 = 
i
.
ªg
.
π
;

597 
de
->
_wrôeREG
 = 
FALSE
;

598 
de
->
_wrôeFREG
 = 
FALSE
;

599 
de
->
_hiWP‹t
 = 
FALSE
;

600 
de
->
_loWP‹t
 = 
FALSE
;

601 
de
->
_memC⁄åﬁ
 = 
TRUE
;

602 
de
->
_§c_ªg
[0] = 
i
.
ªg
.
rs
;

603 
de
->
_§c_ªg
[1] = 
i
.
ªg
.
π
;

607 
de
->
_›C⁄åﬁ
 = 
func_sh
;

608 
de
->
_memOp
 = 
mem_sh
;

609 
de
->
_decodedSRC1
 = 
_g¥
[
i
.
ªg
.
rs
];

610 
de
->
_decodedSRC2
 = 
i
.
imm
.imm;

611 
de
->
_decodedDST
 = 
i
.
ªg
.
π
;

612 
de
->
_wrôeREG
 = 
FALSE
;

613 
de
->
_wrôeFREG
 = 
FALSE
;

614 
de
->
_hiWP‹t
 = 
FALSE
;

615 
de
->
_loWP‹t
 = 
FALSE
;

616 
de
->
_memC⁄åﬁ
 = 
TRUE
;

617 
de
->
_§c_ªg
[0] = 
i
.
ªg
.
rs
;

618 
de
->
_§c_ªg
[1] = 
i
.
ªg
.
π
;

622 
de
->
_›C⁄åﬁ
 = 
func_swl
;

623 
de
->
_memOp
 = 
mem_swl
;

624 
de
->
_decodedSRC1
 = 
_g¥
[
i
.
ªg
.
rs
];

625 
de
->
_decodedSRC2
 = 
i
.
imm
.imm;

626 
de
->
_decodedDST
 = 
i
.
ªg
.
π
;

627 
de
->
_wrôeREG
 = 
FALSE
;

628 
de
->
_wrôeFREG
 = 
FALSE
;

629 
de
->
_hiWP‹t
 = 
FALSE
;

630 
de
->
_loWP‹t
 = 
FALSE
;

631 
de
->
_memC⁄åﬁ
 = 
TRUE
;

632 
de
->
_§c_ªg
[0] = 
i
.
imm
.
rs
;

633 
de
->
_§c_ªg
[1] = 
i
.
imm
.
π
;

637 
de
->
_›C⁄åﬁ
 = 
func_sw
;

638 
de
->
_memOp
 = 
mem_sw
;

639 
de
->
_decodedSRC1
 = 
_g¥
[
i
.
ªg
.
rs
];

640 
de
->
_decodedSRC2
 = 
i
.
imm
.imm;

641 
de
->
_decodedDST
 = 
_g¥
[
i
.
ªg
.
π
];

642 
de
->
_wrôeREG
 = 
FALSE
;

643 
de
->
_wrôeFREG
 = 
FALSE
;

644 
de
->
_hiWP‹t
 = 
FALSE
;

645 
de
->
_loWP‹t
 = 
FALSE
;

646 
de
->
_memC⁄åﬁ
 = 
TRUE
;

647 
de
->
_§c_ªg
[0] = 
i
.
imm
.
rs
;

648 
de
->
_§c_ªg
[1] = 
i
.
imm
.
π
;

652 
de
->
_›C⁄åﬁ
 = 
func_swr
;

653 
de
->
_memOp
 = 
mem_swr
;

654 
de
->
_decodedSRC1
 = 
_g¥
[
i
.
ªg
.
rs
];

655 
de
->
_decodedSRC2
 = 
i
.
imm
.imm;

656 
de
->
_decodedDST
 = 
i
.
ªg
.
π
;

657 
de
->
_wrôeREG
 = 
FALSE
;

658 
de
->
_wrôeFREG
 = 
FALSE
;

659 
de
->
_hiWP‹t
 = 
FALSE
;

660 
de
->
_loWP‹t
 = 
FALSE
;

661 
de
->
_memC⁄åﬁ
 = 
TRUE
;

662 
de
->
_§c_ªg
[0] = 
i
.
imm
.
rs
;

663 
de
->
_§c_ªg
[1] = 
i
.
imm
.
π
;

667 
_Âö°
++;

668 
i
.
‰eg
.
fmt
) {

670 
de
->
_›C⁄åﬁ
 = 
func_mtc1
;

671 
de
->
_decodedSRC1
 = 
_g¥
[
i
.
‰eg
.
·
];

672 
de
->
_decodedDST
 = 
i
.
‰eg
.
fs
;

673 
de
->
_wrôeREG
 = 
FALSE
;

674 
de
->
_wrôeFREG
 = 
TRUE
;

675 
de
->
_hiWP‹t
 = 
FALSE
;

676 
de
->
_loWP‹t
 = 
FALSE
;

677 
de
->
_memC⁄åﬁ
 = 
FALSE
;

678 
de
->
_§c_ªg
[0] = 
i
.
‰eg
.
·
;

682 
de
->
_›C⁄åﬁ
 = 
func_mfc1
;

683 
de
->
_decodedSRC1
 = 
	`FPR
(
_Âr
, 
i
.
‰eg
.
fs
);

684 
de
->
_decodedDST
 = 
i
.
‰eg
.
·
;

685 
de
->
_wrôeREG
 = 
TRUE
;

686 
de
->
_wrôeFREG
 = 
FALSE
;

687 
de
->
_hiWP‹t
 = 
FALSE
;

688 
de
->
_loWP‹t
 = 
FALSE
;

689 
de
->
_memC⁄åﬁ
 = 
FALSE
;

690 
de
->
_§c_‰eg
 = 
i
.
‰eg
.
fs
;

691 
de
->
_has_Êﬂt_§c
 = 1;

694 
de
->
_isIŒegÆOp
 = 
TRUE
;

695 
de
->
_wrôeREG
 = 
FALSE
;

696 
de
->
_wrôeFREG
 = 
FALSE
;

697 
de
->
_hiWP‹t
 = 
FALSE
;

698 
de
->
_loWP‹t
 = 
FALSE
;

699 
de
->
_memC⁄åﬁ
 = 
FALSE
;

704 
de
->
_isIŒegÆOp
 = 
TRUE
;

705 
de
->
_wrôeREG
 = 
FALSE
;

706 
de
->
_wrôeFREG
 = 
FALSE
;

707 
de
->
_hiWP‹t
 = 
FALSE
;

708 
de
->
_loWP‹t
 = 
FALSE
;

709 
de
->
_memC⁄åﬁ
 = 
FALSE
;

712 
	}
}

720 
	gMùc
::
	$dum¥egs
 ()

722 
i
;

724 
	`¥ötf
 ("\n--- PC = %08x ---\n", 
_„tch_pc
);

725 
i
=0; i < 32; i++) {

726 i‡(
i
 < 10)

727 
	`¥ötf
 ("Ñ%d: %08x (%ld)\n", 
i
, 
_g¥
[i], _gpr[i]);

729 
	`¥ötf
 ("r%d: %08x (%ld)\n", 
i
, 
_g¥
[i], _gpr[i]);

733 
	}
}

736 
	gMùc
::
	$func_add_addu
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

741 
em
->
_›Resu…Lo
 = ()(
de
->
_decodedSRC1
 + de->
_decodedSRC2
);

742 
	}
}

745 
	gMùc
::
	$func_™d
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

747 
em
->
_›Resu…Lo
 = 
de
->
_decodedSRC1
 & de->
_decodedSRC2
;

748 
	}
}

751 
	gMùc
::
	$func_n‹
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

753 
em
->
_›Resu…Lo
 = ~(
de
->
_decodedSRC1
 | de->
_decodedSRC2
);

754 
	}
}

757 
	gMùc
::
	$func_‹
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

759 
em
->
_›Resu…Lo
 = 
de
->
_decodedSRC1
 | de->
_decodedSRC2
;

760 
	}
}

763 
	gMùc
::
	$func_¶l
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

765 
em
->
_›Resu…Lo
 = 
de
->
_decodedSRC2
 << de->
_decodedShi·Amt
;

766 
	}
}

769 
	gMùc
::
	$func_¶lv
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

774 
em
->
_›Resu…Lo
 = 
de
->
_decodedSRC2
 << (de->
_decodedSRC1
 & 0x1F);

775 
	}
}

778 
	gMùc
::
	$func_¶t
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

780 i‡(
de
->
_decodedSRC1
 < de->
_decodedSRC2
) {

781 
em
->
_›Resu…Lo
 = 1;

784 
em
->
_›Resu…Lo
 = 0;

786 
	}
}

789 
	gMùc
::
	$func_¶tu
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

791 i‡(()
de
->
_decodedSRC1
 < ()de->
_decodedSRC2
) {

792 
em
->
_›Resu…Lo
 = 1;

795 
em
->
_›Resu…Lo
 = 0;

797 
	}
}

800 
	gMùc
::
	$func_§a
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

802 
em
->
_›Resu…Lo
 = 
de
->
_decodedSRC2
 >> de->
_decodedShi·Amt
;

803 
	}
}

806 
	gMùc
::
	$func_§av
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

808 
em
->
_›Resu…Lo
 = 
de
->
_decodedSRC2
 >> (de->
_decodedSRC1
 & 0x1f);

809 
	}
}

812 
	gMùc
::
	$func_§l
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

814 
em
->
_›Resu…Lo
 = ()
de
->
_decodedSRC2
 >> de->
_decodedShi·Amt
;

815 
	}
}

818 
	gMùc
::
	$func_§lv
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

820 
em
->
_›Resu…Lo
 = ()
de
->
_decodedSRC2
 >> (de->
_decodedSRC1
 & 0x1f);

821 
	}
}

824 
	gMùc
::
	$func_sub_subu
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

826 
em
->
_›Resu…Lo
 = ()
de
->
_decodedSRC1
 - ()de->
_decodedSRC2
;

827 
	}
}

830 
	gMùc
::
	$func_x‹
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

832 
em
->
_›Resu…Lo
 = 
de
->
_decodedSRC1
 ^ de->
_decodedSRC2
;

833 
	}
}

836 
	gMùc
::
	$func_div
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

838 i‡(
de
->
_decodedSRC2
 != 0) {

839 
em
->
_›Resu…Hi
 = ()(
de
->
_decodedSRC1
 % de->
_decodedSRC2
);

840 
em
->
_›Resu…Lo
 = ()(
de
->
_decodedSRC1
 / de->
_decodedSRC2
);

843 
em
->
_›Resu…Hi
 = 0x7fffffff;

844 
em
->
_›Resu…Lo
 = 0x7fffffff;

846 
	}
}

849 
	gMùc
::
	$func_divu
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

851 i‡(()
de
->
_decodedSRC2
 != 0) {

852 
em
->
_›Resu…Hi
 = ()(
de
->
_decodedSRC1
Ë% ()(de->
_decodedSRC2
);

853 
em
->
_›Resu…Lo
 = ()(
de
->
_decodedSRC1
Ë/ ()(de->
_decodedSRC2
);

856 
em
->
_›Resu…Hi
 = 0x7fffffff;

857 
em
->
_›Resu…Lo
 = 0x7fffffff;

859 
	}
}

862 
	gMùc
::
	$func_mfhi
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

864 
em
->
_›Resu…Lo
 = 
de
->
_decodedSRC1
;

865 
	}
}

868 
	gMùc
::
	$func_mÊo
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

870 
em
->
_›Resu…Lo
 = 
de
->
_decodedSRC1
;

871 
	}
}

874 
	gMùc
::
	$func_mthi
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

876 
em
->
_›Resu…Hi
 = 
de
->
_decodedSRC1
;

877 
	}
}

880 
	gMùc
::
	$func_méo
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

882 
em
->
_›Resu…Lo
 = 
de
->
_decodedSRC1
;

883 
	}
}

886 
	gMùc
::
	$func_mu…
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

888 
¨1
, 
¨2
, 
s1
, 
s2
, 
r1
, 
r2
, 
t1
, 
t2
;

890 
¨1
 = 
de
->
_decodedSRC1
;

891 
¨2
 = 
de
->
_decodedSRC2
;

892 
s1
 = 
¨1
 >> 31; if (s1)ár1 = 0x7fffffff & (~ar1 + 1);

893 
s2
 = 
¨2
 >> 31; if (s2)ár2 = 0x7fffffff & (~ar2 + 1);

895 
t1
 = (
¨1
 & 0xffffË* (
¨2
 & 0xffff);

896 
r1
 = 
t1
 & 0xffff;

899 
t1
 = (
¨1
 & 0xffffË* (
¨2
 >> 16) + (t1 >> 16);

900 
t2
 = (
¨2
 & 0xffffË* (
¨1
 >> 16);

902 
r1
 =Ñ1 | (((
t1
+
t2
) & 0xffff) << 16);

903 
r2
 = (
¨1
 >> 16Ë* (
¨2
 >> 16Ë+ (
t1
 >> 16Ë+ (
t2
 >> 16) +

904 (((
t1
 & 0xffffË+ (
t2
 & 0xffff)) >> 16);

906 i‡(
s1
 ^ 
s2
) {

907 
r1
 = ~r1;

908 
r2
 = ~r2;

909 
r1
++;

910 i‡(
r1
 == 0)

911 
r2
++;

913 
em
->
_›Resu…Hi
 = 
r2
;

914 
em
->
_›Resu…Lo
 = 
r1
;

915 
	}
}

918 
	gMùc
::
	$func_mu…u
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

920 
¨1
, 
¨2
, 
s1
, 
s2
, 
r1
, 
r2
, 
t1
, 
t2
;

922 
¨1
 = 
de
->
_decodedSRC1
;

923 
¨2
 = 
de
->
_decodedSRC2
;

925 
t1
 = (
¨1
 & 0xffffË* (
¨2
 & 0xffff);

926 
r1
 = 
t1
 & 0xffff;

929 
t1
 = (
¨1
 & 0xffffË* (
¨2
 >> 16) + (t1 >> 16);

930 
t2
 = (
¨2
 & 0xffffË* (
¨1
 >> 16);

932 
r1
 =Ñ1 | (((
t1
+
t2
) & 0xffff) << 16);

933 
r2
 = (
¨1
 >> 16Ë* (
¨2
 >> 16Ë+ (
t1
 >> 16Ë+ (
t2
 >> 16) +

934 (((
t1
 & 0xffffË+ (
t2
 & 0xffff)) >> 16);

936 
em
->
_›Resu…Hi
 = 
r2
;

937 
em
->
_›Resu…Lo
 = 
r1
;

938 
	}
}

941 
	gMùc
::
	$func_jÆr
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

943 
em
->
_bèkí
 = 1;

944 
mc
->
_num_jÆ
++;

945 
em
->
_›Resu…Lo
 = 
de
->
_pc
 + 8;

946 
	}
}

949 
	gMùc
::
	$func_jr
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

951 
em
->
_bèkí
 = 1;

952 
mc
->
_num_jr
++;

953 
	}
}

956 
	gMùc
::
	$func_awaô_bªak
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

958 
	}
}

961 
	gMùc
::
	$func_sysˇŒ
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

963 
mc
->
	`Áke_sysˇŒ
 (
ös
);

964 
	}
}

967 
	gMùc
::
	$func_addi_addiu
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

972 
	`SIGN_EXTEND_IMM
(
de
->
_decodedSRC2
);

973 
em
->
_›Resu…Lo
 = ()(
de
->
_decodedSRC1
 + de->
_decodedSRC2
);

974 
	}
}

977 
	gMùc
::
	$func_™di
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

979 
em
->
_›Resu…Lo
 = 
de
->
_decodedSRC1
 & de->
_decodedSRC2
;

980 
	}
}

983 
	gMùc
::
	$func_lui
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

988 
em
->
_›Resu…Lo
 = (
de
->
_decodedSRC2
 << 16);

989 
	}
}

992 
	gMùc
::
	$func_‹i
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

997 
em
->
_›Resu…Lo
 = (
de
->
_decodedSRC1
 | de->
_decodedSRC2
);

998 
	}
}

1001 
	gMùc
::
	$func_¶ti
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

1003 
	`SIGN_EXTEND_IMM
(
de
->
_decodedSRC2
);

1004 i‡(
de
->
_decodedSRC1
 < de->
_decodedSRC2
) {

1005 
em
->
_›Resu…Lo
 = 1;

1008 
em
->
_›Resu…Lo
 = 0;

1010 
	}
}

1013 
	gMùc
::
	$func_¶tiu
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

1015 
	`SIGN_EXTEND_IMM
(
de
->
_decodedSRC2
);

1016 i‡(()
de
->
_decodedSRC1
 < ()de->
_decodedSRC2
) {

1017 
em
->
_›Resu…Lo
 = 1;

1020 
em
->
_›Resu…Lo
 = 0;

1022 
	}
}

1025 
	gMùc
::
	$func_x‹i
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

1027 
em
->
_›Resu…Lo
 = 
de
->
_decodedSRC1
 ^ de->
_decodedSRC2
;

1028 
	}
}

1031 
	gMùc
::
	$func_beq
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

1033 
mc
->
_num_c⁄d_br
++;

1037 
em
->
_bèkí
 = (
de
->
_decodedSRC1
 =de->
_decodedSRC2
);

1038 
	}
}

1041 
	gMùc
::
	$func_bgez
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

1043 
mc
->
_num_c⁄d_br
++;

1044 
em
->
_bèkí
 = !(
de
->
_decodedSRC1
 >> 31);

1045 
	}
}

1048 
	gMùc
::
	$func_bgezÆ
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

1050 
mc
->
_num_c⁄d_br
++;

1051 
em
->
_bèkí
 = !(
de
->
_decodedSRC1
 >> 31);

1052 
em
->
_›Resu…Lo
 = 
de
->
_pc
 + 8;

1053 
	}
}

1056 
	gMùc
::
	$func_b…zÆ
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

1058 
mc
->
_num_c⁄d_br
++;

1059 
em
->
_bèkí
 = (
de
->
_decodedSRC1
 >> 31);

1060 
em
->
_›Resu…Lo
 = 
de
->
_pc
 + 8;

1061 
	}
}

1064 
	gMùc
::
	$func_b…z
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

1066 
mc
->
_num_c⁄d_br
++;

1067 
em
->
_bèkí
 = (
de
->
_decodedSRC1
 >> 31);

1068 
	}
}

1071 
	gMùc
::
	$func_bgtz
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

1073 
mc
->
_num_c⁄d_br
++;

1074 
em
->
_bèkí
 = (
de
->
_decodedSRC1
 > 0);

1075 
	}
}

1078 
	gMùc
::
	$func_bÀz
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

1080 
mc
->
_num_c⁄d_br
++;

1081 
em
->
_bèkí
 = (
de
->
_decodedSRC1
 <= 0);

1082 
	}
}

1085 
	gMùc
::
	$func_b√
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

1087 
mc
->
_num_c⁄d_br
++;

1088 
em
->
_bèkí
 = (
de
->
_decodedSRC1
 !de->
_decodedSRC2
);

1089 
	}
}

1092 
	gMùc
::
	$func_j
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

1094 
em
->
_bèkí
 = 1;

1095 
	}
}

1098 
	gMùc
::
	$func_jÆ
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

1100 
mc
->
_num_jÆ
++;

1104 
em
->
_bèkí
 = 1;

1105 
em
->
_›Resu…Lo
 = 
de
->
_pc
 + 8;

1106 
	}
}

1109 
	gMùc
::
	$func_lb
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

1111 sig√d 
a1
;

1113 
mc
->
_num_lﬂd
++;

1114 
	`SIGN_EXTEND_IMM
(
de
->
_decodedSRC2
);

1115 
em
->
_mem‹y_addr_ªg
 = ()(
de
->
_decodedSRC1
+de->
_decodedSRC2
);

1116 
	}
}

1119 
	gMùc
::
	$func_lbu
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

1121 
mc
->
_num_lﬂd
++;

1122 
	`SIGN_EXTEND_IMM
(
de
->
_decodedSRC2
);

1123 
em
->
_mem‹y_addr_ªg
 = ()(
de
->
_decodedSRC1
+de->
_decodedSRC2
);

1124 
	}
}

1127 
	gMùc
::
	$func_lh
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

1129 sig√d 
a1
;

1131 
mc
->
_num_lﬂd
++;

1132 
	`SIGN_EXTEND_IMM
(
de
->
_decodedSRC2
);

1133 
em
->
_mem‹y_addr_ªg
 = ()(
de
->
_decodedSRC1
+de->
_decodedSRC2
);

1134 
	}
}

1137 
	gMùc
::
	$func_lhu
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

1139 
mc
->
_num_lﬂd
++;

1140 
	`SIGN_EXTEND_IMM
(
de
->
_decodedSRC2
);

1141 
em
->
_mem‹y_addr_ªg
 = ()(
de
->
_decodedSRC1
+de->
_decodedSRC2
);

1142 
	}
}

1145 
	gMùc
::
	$func_lwl
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

1147 sig√d 
a1
;

1148 
s1
;

1150 
mc
->
_num_lﬂd
++;

1151 
	`SIGN_EXTEND_IMM
(
de
->
_decodedSRC2
);

1152 
em
->
_mem‹y_addr_ªg
 = ()(
de
->
_decodedSRC1
+de->
_decodedSRC2
);

1153 
	}
}

1156 
	gMùc
::
	$func_lw
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

1158 
mc
->
_num_lﬂd
++;

1163 sig√d 
a1
;

1164 
	`SIGN_EXTEND_IMM
(
de
->
_decodedSRC2
);

1165 
em
->
_mem‹y_addr_ªg
 = ()(
de
->
_decodedSRC1
 + de->
_decodedSRC2
);

1166 
	}
}

1169 
	gMùc
::
	$func_lwr
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

1171 
¨1
, 
s1
;

1173 
mc
->
_num_lﬂd
++;

1174 
	`SIGN_EXTEND_IMM
(
de
->
_decodedSRC2
);

1175 
em
->
_mem‹y_addr_ªg
 = ()(
de
->
_decodedSRC1
+de->
_decodedSRC2
);

1176 
	}
}

1179 
	gMùc
::
	$func_lwc1
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

1181 
mc
->
_num_lﬂd
++;

1182 
	`SIGN_EXTEND_IMM
(
de
->
_decodedSRC2
);

1183 
em
->
_mem‹y_addr_ªg
 = ()(
de
->
_decodedSRC1
+de->
_decodedSRC2
);

1184 
	}
}

1187 
	gMùc
::
	$func_swc1
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

1189 
mc
->
_num_°‹e
++;

1190 
	`SIGN_EXTEND_IMM
(
de
->
_decodedSRC2
);

1191 
em
->
_mem‹y_addr_ªg
 = ()(
de
->
_decodedSRC1
+de->
_decodedSRC2
);

1192 
	}
}

1195 
	gMùc
::
	$func_sb
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

1197 
mc
->
_num_°‹e
++;

1198 
	`SIGN_EXTEND_IMM
(
de
->
_decodedSRC2
);

1199 
em
->
_mem‹y_addr_ªg
 = ()(
de
->
_decodedSRC1
+de->
_decodedSRC2
);

1200 
	}
}

1203 
	gMùc
::
	$func_sh
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

1205 
mc
->
_num_°‹e
++;

1206 
	`SIGN_EXTEND_IMM
(
de
->
_decodedSRC2
);

1207 
em
->
_mem‹y_addr_ªg
 = ()(
de
->
_decodedSRC1
+de->
_decodedSRC2
);

1208 
	}
}

1211 
	gMùc
::
	$func_swl
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

1213 
¨1
, 
s1
;

1215 
mc
->
_num_°‹e
++;

1216 
	`SIGN_EXTEND_IMM
(
de
->
_decodedSRC2
);

1217 
em
->
_mem‹y_addr_ªg
 = ()(
de
->
_decodedSRC1
+de->
_decodedSRC2
);

1218 
	}
}

1221 
	gMùc
::
	$func_sw
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

1223 
mc
->
_num_°‹e
++;

1224 
	`SIGN_EXTEND_IMM
(
de
->
_decodedSRC2
);

1225 
em
->
_mem‹y_addr_ªg
 = ()(
de
->
_decodedSRC1
+de->
_decodedSRC2
);

1226 
	}
}

1229 
	gMùc
::
	$func_swr
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

1231 
¨1
, 
s1
;

1233 
mc
->
_num_°‹e
++;

1234 
	`SIGN_EXTEND_IMM
(
de
->
_decodedSRC2
);

1235 
em
->
_mem‹y_addr_ªg
 = ()(
de
->
_decodedSRC1
+de->
_decodedSRC2
);

1236 
	}
}

1239 
	gMùc
::
	$func_mtc1
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

1241 
em
->
_›Resu…Lo
 = 
de
->
_decodedSRC1
;

1242 
	}
}

1245 
	gMùc
::
	$func_mfc1
 (
Mùc
 *
mc
, 
ös
, 
pùe_ªg_t
* 
de
,Öùe_ªg_t* 
em
)

1247 
em
->
_›Resu…Lo
 = 
de
->
_decodedSRC1
;

1248 
	}
}

1251 
	gMùc
::
	$mem_lb
 (
Mùc
 *
mc
, 
pùe_ªg_t
* 
em
,Öùe_ªg_t* 
mw
)

1253 sig√d 
a1
;

1255 
a1
 = 
mc
->
_mem
->
	`BEGëByã
(
em
->
_mem‹y_addr_ªg
, mc->_mem->
	`Ród
”m->_mem‹y_addr_ªg & ~(
LL
)0x7));

1256 
	`SIGN_EXTEND_BYTE
(
a1
);

1257 
mw
->
_›Resu…Lo
 = 
a1
;

1258 
	}
}

1261 
	gMùc
::
	$mem_lbu
 (
Mùc
 *
mc
, 
pùe_ªg_t
* 
em
,Öùe_ªg_t* 
mw
)

1263 
mw
->
_›Resu…Lo
 = 
mc
->
_mem
->
	`BEGëByã
(
em
->
_mem‹y_addr_ªg
, mc->_mem->
	`Ród
”m->_mem‹y_addr_ªg & ~(
LL
)0x7));

1264 
	}
}

1267 
	gMùc
::
	$mem_lh
 (
Mùc
 *
mc
, 
pùe_ªg_t
* 
em
,Öùe_ªg_t* 
mw
)

1269 sig√d 
a1
;

1271 
a1
 = 
mc
->
_mem
->
	`BEGëHÆfW‹d
(
em
->
_mem‹y_addr_ªg
, mc->_mem->
	`Ród
”m->_mem‹y_addr_ªg & ~(
LL
)0x7));

1272 
	`SIGN_EXTEND_IMM
(
a1
);

1273 
mw
->
_›Resu…Lo
 = 
a1
;

1274 
	}
}

1277 
	gMùc
::
	$mem_lhu
 (
Mùc
 *
mc
, 
pùe_ªg_t
* 
em
,Öùe_ªg_t* 
mw
)

1279 
mw
->
_›Resu…Lo
 = 
mc
->
_mem
->
	`BEGëHÆfW‹d
 (
em
->
_mem‹y_addr_ªg
, mc->_mem->
	`Ród
”m->_mem‹y_addr_ªg & ~(
LL
)0x7));

1280 
	}
}

1283 
	gMùc
::
	$mem_lwl
 (
Mùc
 *
mc
, 
pùe_ªg_t
* 
em
,Öùe_ªg_t* 
mw
)

1285 sig√d 
a1
;

1286 
s1
;

1288 
a1
 = 
mc
->
_mem
->
	`BEGëW‹d
 (
em
->
_mem‹y_addr_ªg
, mc->_mem->
	`Ród
”m->_mem‹y_addr_ªg & ~(
LL
)0x7));

1289 
s1
 = (
em
->
_mem‹y_addr_ªg
 & 3) << 3;

1290 
mw
->
_›Resu…Lo
 = (
a1
 << 
s1
Ë| (
em
->
_subªgO≥ønd
 & ~(~0UL << s1));

1291 
	}
}

1294 
	gMùc
::
	$mem_lw
 (
Mùc
 *
mc
, 
pùe_ªg_t
* 
em
,Öùe_ªg_t* 
mw
)

1296 
mw
->
_›Resu…Lo
 = 
mc
->
_mem
->
	`BEGëW‹d
 (
em
->
_mem‹y_addr_ªg
, mc->_mem->
	`Ród
”m->_mem‹y_addr_ªg & ~(
LL
)0x7));

1297 
	}
}

1300 
	gMùc
::
	$mem_lwr
 (
Mùc
 *
mc
, 
pùe_ªg_t
* 
em
,Öùe_ªg_t* 
mw
)

1302 
¨1
, 
s1
;

1304 
¨1
 = 
mc
->
_mem
->
	`BEGëW‹d
 (
em
->
_mem‹y_addr_ªg
, mc->_mem->
	`Ród
”m->_mem‹y_addr_ªg & ~(
LL
)0x7));

1305 
s1
 = (~
em
->
_mem‹y_addr_ªg
 & 3) << 3;

1306 
mw
->
_›Resu…Lo
 = (
¨1
 >> 
s1
Ë| (
em
->
_subªgO≥ønd
 & ~(~()0 >> s1));

1307 
	}
}

1310 
	gMùc
::
	$mem_lwc1
 (
Mùc
 *
mc
, 
pùe_ªg_t
* 
em
,Öùe_ªg_t* 
mw
)

1312 
mw
->
_›Resu…Lo
 = 
mc
->
_mem
->
	`BEGëW‹d
 (
em
->
_mem‹y_addr_ªg
, mc->_mem->
	`Ród
”m->_mem‹y_addr_ªg & ~(
LL
)0x7));

1313 
	}
}

1316 
	gMùc
::
	$mem_swc1
 (
Mùc
 *
mc
, 
pùe_ªg_t
* 
em
,Öùe_ªg_t* 
mw
)

1318 
mc
->
_mem
->
	`Wrôe
(
em
->
_mem‹y_addr_ªg
 & ~(
LL
)0x7, mc->_mem->
	`BESëW‹d
 (em->_mem‹y_addr_ªg, mc->_mem->
	`Ród
”m->_mem‹y_addr_ªg & ~(LL)0x7), mc->
_Âr
[em->
_decodedDST
>>1].
l
[
FP_TWIDDLE
^(em->_decodedDST&1)]));

1319 
	}
}

1322 
	gMùc
::
	$mem_sb
 (
Mùc
 *
mc
, 
pùe_ªg_t
* 
em
,Öùe_ªg_t* 
mw
)

1324 
mc
->
_mem
->
	`Wrôe
(
em
->
_mem‹y_addr_ªg
 & ~(
LL
)0x7, mc->_mem->
	`BESëByã
 (em->_mem‹y_addr_ªg, mc->_mem->
	`Ród
”m->_mem‹y_addr_ªg & ~(LL)0x7), mc->
_g¥
[em->
_decodedDST
] & 0xff));

1325 
	}
}

1328 
	gMùc
::
	$mem_sh
 (
Mùc
 *
mc
, 
pùe_ªg_t
* 
em
,Öùe_ªg_t* 
mw
)

1330 
mc
->
_mem
->
	`Wrôe
(
em
->
_mem‹y_addr_ªg
 & ~(
LL
)0x7, mc->_mem->
	`BESëHÆfW‹d
 (em->_mem‹y_addr_ªg, mc->_mem->
	`Ród
”m->_mem‹y_addr_ªg & ~(LL)0x7), mc->
_g¥
[em->
_decodedDST
] & 0xffff));

1331 
	}
}

1334 
	gMùc
::
	$mem_swl
 (
Mùc
 *
mc
, 
pùe_ªg_t
* 
em
,Öùe_ªg_t* 
mw
)

1336 
¨1
, 
s1
;

1338 
¨1
 = 
mc
->
_mem
->
	`BEGëW‹d
 (
em
->
_mem‹y_addr_ªg
, mc->_mem->
	`Ród
”m->_mem‹y_addr_ªg & ~(
LL
)0x7));

1339 
s1
 = (
em
->
_mem‹y_addr_ªg
 & 3) << 3;

1340 
¨1
 = (
mc
->
_g¥
[
em
->
_decodedDST
] >> 
s1
) | (ar1 & ~(~()0 >> s1));

1341 
mc
->
_mem
->
	`Wrôe
(
em
->
_mem‹y_addr_ªg
 & ~(
LL
)0x7, mc->_mem->
	`BESëW‹d
 (em->_mem‹y_addr_ªg, mc->_mem->
	`Ród
”m->_mem‹y_addr_ªg & ~(LL)0x7), 
¨1
));

1342 
	}
}

1345 
	gMùc
::
	$mem_sw
 (
Mùc
 *
mc
, 
pùe_ªg_t
* 
em
,Öùe_ªg_t* 
mw
)

1347 
mc
->
_mem
->
	`Wrôe
(
em
->
_mem‹y_addr_ªg
 & ~(
LL
)0x7, mc->_mem->
	`BESëW‹d
 (em->_mem‹y_addr_ªg, mc->_mem->
	`Ród
”m->_mem‹y_addr_ªg & ~(LL)0x7),Ém->
_decodedDST
));

1348 
	}
}

1351 
	gMùc
::
	$mem_swr
 (
Mùc
 *
mc
, 
pùe_ªg_t
* 
em
,Öùe_ªg_t* 
mw
)

1353 
¨1
, 
s1
;

1355 
¨1
 = 
mc
->
_mem
->
	`BEGëW‹d
 (
em
->
_mem‹y_addr_ªg
, mc->_mem->
	`Ród
”m->_mem‹y_addr_ªg & ~(
LL
)0x7));

1356 
s1
 = (~
em
->
_mem‹y_addr_ªg
 & 3) << 3;

1357 
¨1
 = (
mc
->
_g¥
[
em
->
_decodedDST
] << 
s1
) | (ar1 & ~(~0UL << s1));

1358 
mc
->
_mem
->
	`Wrôe
(
em
->
_mem‹y_addr_ªg
 & ~(
LL
)0x7, mc->_mem->
	`BESëW‹d
 (em->_mem‹y_addr_ªg, mc->_mem->
	`Ród
”m->_mem‹y_addr_ªg & ~(LL)0x7), 
¨1
));

1359 
	}
}

	@executor.cc

1 
	~"execut‹.h
"

3 
	gExe
::
	$Exe
 (
Mùc
 *
mc
)

5 
_mc
 = 
mc
;

6 
	}
}

8 
	gExe
::~
	$Exe
 (Ë{
	}
}

11 
Exe
::
	$MaöLo›
 ()

22 
AWAIT_P_PHI0
;

24 i‡(!
_mc
->
_de
->
_vÆid
) {

25 
AWAIT_P_PHI1
;

29 
pùe_ªg_t
 *
em
 = 
√w
Öipe_reg_t;

30 *
em
 = *
_mc
->
_de
;

32 i‡(
em
->
_isIŒegÆOp
) {

34 
AWAIT_P_PHI1
;

35 
_mc
->
_em
->
_isIŒegÆOp
 = 
TRUE
;

36 #ifde‡
MIPC_DEBUG


37 
	`Ârötf
(
_mc
->
_debugLog
, "<%Œu> IŒegÆ in†%#x i¿executi⁄ sègê© PC %#x\n", 
SIM_TIME
, 
em
->
_ös
,Ém->
_pc
);

42 i‡(!
_mc
->
_de
->
_isSysˇŒ
) {

43 
_mc
->
_de
->
	`_›C⁄åﬁ
(_mc, _mc->_de->
_ös
, _mc->_de, 
em
);

44 
_mc
->
_ex_ex
.
lo
 = 
em
->
_›Resu…Lo
;

45 
_mc
->
_ex_ex
.
hi
 = 
em
->
_›Resu…Hi
;

46 #ifde‡
MIPC_DEBUG


47 
	`Ârötf
(
_mc
->
_debugLog
, "<%Œu> Execuãd in†%#x\n", 
SIM_TIME
, 
em
->
_ös
);

50 i‡(
em
->
_bd¶Ÿ
 &&Ém->
_bèkí
)

51 
_mc
->
_„tch_pc
 = 
em
->
_btgt
;

52 i‡(!
em
->
_is_bubbÀ
) {

53 
_mc
->
_„tch_pc
 += 4;

56 #ifde‡
MIPC_DEBUG


57 
	`Ârötf
(
_mc
->
_debugLog
, "<%Œu> De„ºögÉxecuti⁄ o‡sysˇŒ in†%#x\n", 
SIM_TIME
, 
em
->
_ös
);

61 
AWAIT_P_PHI1
;

62 *
_mc
->
_em
 = *
em
;

63 
dñëe
 
em
;

65 
	}
}

	@executor.h

1 #i‚de‡
__EXECUTOR_H__


2 
	#__EXECUTOR_H__


	)

4 
	~"mùs.h
"

6 
˛ass
 
	gMùc
;

8 ˛as†
	cExe
 : 
public
 
SimObje˘
 {

9 
public
:

10 
Exe
 (
Mùc
*);

11 ~
Exe
 ();

13 
	mFAKE_SIM_TEMPLATE
;

15 
Mùc
 *
	m_mc
;

	@main.cc

1 
	~"mùs.h
"

2 
	~"decode.h
"

3 
	~"execut‹.h
"

4 
	~"mem‹y.h
"

5 
	~"wb.h
"

6 
	~"èskög.h
"

7 
	~<°dlib.h
>

8 
	~<°rög.h
>

10 
	$˛ónup
 ()

12 
Log
::
	`Clo£Log
 ();

13 
	}
}

15 
	#SIZE
 256

	)

17 
	$maö
 (
¨gc
, **
¨gv
)

19 
Mùc
 *
¥o˚ss‹_t›
;

20 
Decode
 *
dec
;

21 
Exe
 *
exec
;

22 
Mem‹y
 *
mem
;

23 
Mem
 *
m
;

24 
Wrôeback
 *
wb
;

25 
buf
[
SIZE
];

26 *
‚ame
,*
˙ame
;

27 
Boﬁ
 
l
,
c
;

29 
l
 = 
FALSE
;

30 
c
 = 
FALSE
;

32 
	`Regi°îDeÁu…
 ("Mipc.BootROM", "mipc.image");

33 
	`Regi°îDeÁu…
 ("Mipc.BootPC", ()0xbfc00000);

34 
	`Regi°îDeÁu…
 ("Mipc.ArgvAddr", ()0xbfc00100);

35 
	`Regi°îDeÁu…
 ("Mipc.CacheLineToWatch", 0x1ULL);

36 
	`Regi°îDeÁu…
 ("Log.FileName", "mipc.log");

37 
	`Regi°îDeÁu…
 ("Log.Level", "");

38 
	`Regi°îDeÁu…
 ("MemSystem.Type", "None");

39 
	`Regi°îDeÁu…
 ("Log.StartDumpTime", 0);

40 
	`Regi°îDeÁu…
 ("Mipc.PeriodicTimer", 100000);

43 i‡(
¨gc
 > 1) {

44 i‡(
¨gv
[1][0]=='-' &&árgv[1][1]=='l') {

45 
l
 = 
TRUE
;

46 
¨gv
++;

47 
¨gc
--;

48 
	`MALLOC
(
‚ame
,,
	`°æí
(
¨gv
[1])+1);

49 
	`•rötf
(
‚ame
,"%s",
¨gv
[1]);

50 
¨gc
--;

51 
¨gv
++;

55 i‡(
¨gc
 > 1) {

56 i‡(
¨gv
[1][0]=='-' &&árgv[1][1]=='c') {

57 
c
 = 
TRUE
;

58 
¨gv
++;

59 
¨gc
--;

60 
	`MALLOC
(
˙ame
,,
	`°æí
(
¨gv
[1])+1);

61 
	`•rötf
(
˙ame
,"%s",
¨gv
[1]);

62 
¨gc
--;

63 
¨gv
++;

64 
	`¥ötf
("c⁄‡fûê«mêi†%s\n", 
˙ame
);

68 i‡(!
c
) {

69 
	`RódC⁄figFûe
();

72 
	`RódC⁄figFûe
(
˙ame
);

75 
logTimî
 = 
	`P¨amGëLL
("Log.StartDumpTime");

77 i‡(
¨gc
 > 1) {

78 i‡(
	`°æí
 (
¨gv
[1]Ë> 
SIZE
 - (".image")) {

79 
	`Áèl_îr‹
 ("P©h«mê`%s'Åoÿl⁄g!\n", 
¨gv
[1]);

81 
	`•rötf
 (
buf
, "%s.image", 
¨gv
[1]);

82 
	`OvîrideC⁄fig
 ("Mùc.BoŸROM", 
buf
);

83 
¨gc
--;

84 
¨gv
++;

87 i‡(!
l
) {

88 
Log
::
	`O≥nLog
 (
	`P¨amGëSåög
 ("Log.FileName"));

91 
Log
::
	`O≥nLog
 (
‚ame
);

94 
m
 = 
√w
 
	`Mem
();

96 
¥o˚ss‹_t›
 = 
√w
 
	`Mùc
(
m
);

97 
dec
 = 
√w
 
	`Decode
(
¥o˚ss‹_t›
);

98 
exec
 = 
√w
 
	`Exe
(
¥o˚ss‹_t›
);

99 
mem
 = 
√w
 
	`Mem‹y
(
¥o˚ss‹_t›
);

100 
wb
 = 
√w
 
	`Wrôeback
(
¥o˚ss‹_t›
);

101 
	`SimCª©eTask
 (
¥o˚ss‹_t›
, "FETCH");

102 
	`SimCª©eTask
 (
dec
, "DECODE");

103 
	`SimCª©eTask
 (
exec
, "EXE");

104 
	`SimCª©eTask
 (
mem
, "MEM");

105 
	`SimCª©eTask
 (
wb
, "WB");

108 i‡(
¨gc
 > 0)

109 
¥o˚ss‹_t›
->
_sys
->
	`ArgumítSëup
 (
¨gc
, 
¨gv
, 
	`P¨amGëI¡
 ("Mipc.ArgvAddr"));

111 
	`simuœã
 (
˛ónup
);

112 
	}
}

	@memory.cc

1 
	~"mem‹y.h
"

3 
	gMem‹y
::
	$Mem‹y
 (
Mùc
 *
mc
)

5 
_mc
 = 
mc
;

6 
	}
}

8 
	gMem‹y
::~
	$Mem‹y
 (Ë{
	}
}

11 
Mem‹y
::
	$MaöLo›
 ()

22 
AWAIT_P_PHI0
;

24 i‡(!
_mc
->
_em
->
_vÆid
) {

25 
AWAIT_P_PHI1
;

29 
pùe_ªg_t
* 
em
 = 
√w
Öipe_reg_t;

30 *
em
 = *
_mc
->
_em
;

32 i‡(
em
->
_isIŒegÆOp
) {

33 
AWAIT_P_PHI1
;

34 
_mc
->
_mw
->
_isIŒegÆOp
 = 
TRUE
;

35 
dñëe
 
em
;

39 i‡(
em
->
_memC⁄åﬁ
) {

40 
AWAIT_P_PHI1
;

42 *
_mc
->
_mw
 = *
em
;

43 
em
->
	`_memOp
(
_mc
,Ém, _mc->
_mw
);

45 #ifde‡
MIPC_DEBUG


46 
	`Ârötf
(
_mc
->
_debugLog
, "<%Œu> Ac˚ssög mem‹yáàaddªs†%#x f‹ in†%#x\n", 
SIM_TIME
, 
em
->
_mem‹y_addr_ªg
,Ém->
_ös
);

49 
AWAIT_P_PHI1
;

50 *
_mc
->
_mw
 = *
em
;

51 #ifde‡
MIPC_DEBUG


52 
	`Ârötf
(
_mc
->
_debugLog
, "<%Œu> Mem‹y ha†nŸhögÅÿdÿf‹ in†%#x\n", 
SIM_TIME
, 
em
->
_ös
);

55 
dñëe
 
em
;

57 
	}
}

	@memory.h

1 #i‚de‡
__MEMORY_H__


2 
	#__MEMORY_H__


	)

4 
	~"mùs.h
"

6 
˛ass
 
	gMùc
;

8 ˛as†
	cMem‹y
 : 
public
 
SimObje˘
 {

9 
public
:

10 
Mem‹y
 (
Mùc
*);

11 ~
Mem‹y
 ();

13 
	mFAKE_SIM_TEMPLATE
;

15 
Mùc
 *
	m_mc
;

	@mips.cc

1 
	~"mùs.h
"

2 
	~<as£π.h
>

3 
	~"mùs-úix5.h
"

5 
	gMùc
::
	$Mùc
 (
Mem
 *
m
Ë: 
	`_l
('M')

7 
_mem
 = 
m
;

8 
_sys
 = 
√w
 
	`MùcSysCÆl
 (
this
);

9 
_fd
 = 
√w
 
pùe_ªg_t
;

10 
_de
 = 
√w
 
pùe_ªg_t
;

11 
_em
 = 
√w
 
pùe_ªg_t
;

12 
_mw
 = 
√w
 
pùe_ªg_t
;

14 
i
 = 0; i < 32; ++iË
_g¥_waô
[i] = 0;

15 
i
 = 0; i < 16; ++iË
_Âr_waô
[i] = 0;

16 
i
 = 0; i < 2; ++iË
_hi_lo_waô
[i] = 0;

19 #ifde‡
MIPC_DEBUG


20 
_debugLog
 = 
	`f›í
("mipc.debug", "w");

21 
	`as£π
(
_debugLog
 !
NULL
);

24 
	`ReboŸ
 (
	`P¨amGëSåög
 ("Mipc.BootROM"));

25 
	}
}

27 
	gMùc
::~
	$Mùc
 ()

30 
	}
}

33 
Mùc
::
	$MaöLo›
 ()

35 
LL
 
addr
;

36 
ös
;

38 
	`As£π
 (
_boŸ
, "Mipc::MainLoop() called without boot?");

40 
_n„tched
 = 0;

41 
_°ÆlFëch
 = 
FALSE
;

43 !
_sim_exô
) {

50 
AWAIT_P_PHI0
;

51 
AWAIT_P_PHI1
;

52 i‡(!
_°ÆlFëch
) {

53 
_fd
->
_ös
 = 
_mem
->
	`BEGëW‹d
 (
_„tch_pc
, _mem->
	`Ród
(_„tch_p¯& ~(
LL
)0x7));

54 
_fd
->
_pc
 = 
_„tch_pc
;

55 #ifde‡
MIPC_DEBUG


56 
	`Ârötf
(
_debugLog
, "<%Œu> Fëched in†%#x from PC %#x\n", 
SIM_TIME
, 
_fd
->
_ös
, 
_„tch_pc
);

58 
_n„tched
++;

62 
	`MùcDump°©s
();

63 
Log
::
	`Clo£Log
();

65 #ifde‡
MIPC_DEBUG


66 
	`as£π
(
_debugLog
 !
NULL
);

67 
	`f˛o£
(
_debugLog
);

70 
	`exô
(0);

71 
	}
}

74 
	gMùc
::
	$MùcDump°©s
()

76 
Log
 
	`l
('*');

77 
l
.
°¨tLoggög
 = 0;

79 
l
.
	`¥öt
 ("");

80 
l
.
	`¥öt
 ("************************************************************");

81 
l
.
	`¥öt
 ("");

82 
l
.
	`¥öt
 ("Numbî o‡ö°ru˘i⁄s: %Œu", 
_n„tched
);

83 
l
.
	`¥öt
 ("Numbî o‡simuœãd cy˛es: %Œu", 
SIM_TIME
);

84 
l
.
	`¥öt
 ("CPI: %.2f", (()
SIM_TIME
)/
_n„tched
);

85 
l
.
	`¥öt
 ("I¡ C⁄dôi⁄Æ Bønches: %Œu", 
_num_c⁄d_br
);

86 
l
.
	`¥öt
 ("Jum∞™d Lök: %Œu", 
_num_jÆ
);

87 
l
.
	`¥öt
 ("Jum∞Regi°î: %Œu", 
_num_jr
);

88 
l
.
	`¥öt
 ("Numbî o‡Â in°ru˘i⁄s: %Œu", 
_Âö°
);

89 
l
.
	`¥öt
 ("Numbî o‡lﬂds: %Œu", 
_num_lﬂd
);

90 
l
.
	`¥öt
 ("Numbî o‡sysˇŒÉmuœãdÜﬂds: %Œu", 
_sys
->
_num_lﬂd
);

91 
l
.
	`¥öt
 ("Numbî o‡°‹es: %Œu", 
_num_°‹e
);

92 
l
.
	`¥öt
 ("Numbî o‡sysˇŒÉmuœãd st‹es: %Œu", 
_sys
->
_num_°‹e
);

93 
l
.
	`¥öt
 ("");

95 
	}
}

98 
	gMùc
::
	$Áke_sysˇŒ
 (
ös
)

100 
_sys
->
pc
 = 
_„tch_pc
;

101 
_sys
->
quô
 = 0;

102 
_sys
->
	`EmuœãSysCÆl
 ();

103 i‡(
_sys
->
quô
)

104 
_sim_exô
 = 1;

105 
	}
}

116 
	gMùc
::
	$ReboŸ
 (*
image
)

118 
FILE
 *
Â
;

119 
Log
 
	`l
('*');

121 
_boŸ
 = 0;

123 i‡(
image
) {

124 
_boŸ
 = 1;

125 
	`¥ötf
 ("Executög %s\n", 
image
);

126 
Â
 = 
	`f›í
 (
image
, "r");

127 i‡(!
Â
) {

128 
	`Áèl_îr‹
 ("CouldÇŸ o≥¿`%s' f‹ boŸög ho°!", 
image
);

130 
_mem
->
	`RódImage
(
Â
);

131 
	`f˛o£
 (
Â
);

133 
_num_lﬂd
 = 0;

134 
_num_°‹e
 = 0;

135 
_Âö°
 = 0;

136 
_num_c⁄d_br
 = 0;

137 
_num_jÆ
 = 0;

138 
_num_jr
 = 0;

140 
_sim_exô
 = 0;

141 
_„tch_pc
 = 
	`P¨amGëI¡
 ("Mipc.BootPC");

143 
	}
}

145 
LL


146 
	gMùcSysCÆl
::
	$GëDW‹d
(
LL
 
addr
)

148 
_num_lﬂd
++;

149  
m
->
	`Ród
 (
addr
);

150 
	}
}

153 
	gMùcSysCÆl
::
	$SëDW‹d
(
LL
 
addr
, LL 
d©a
)

156 
m
->
	`Wrôe
 (
addr
, 
d©a
);

157 
_num_°‹e
++;

158 
	}
}

160 
W‹d


161 
	gMùcSysCÆl
::
	$GëW‹d
 (
LL
 
addr
)

164 
_num_lﬂd
++;

165  
m
->
	`BEGëW‹d
 (
addr
, m->
	`Ród
 (add∏& ~(
LL
)0x7));

166 
	}
}

169 
	gMùcSysCÆl
::
	$SëW‹d
 (
LL
 
addr
, 
W‹d
 
d©a
)

172 
m
->
	`Wrôe
 (
addr
 & ~(
LL
)0x7, m->
	`BESëW‹d
 (addr, m->
	`Ród
◊dd∏& ~(LL)0x7), 
d©a
));

173 
_num_°‹e
++;

174 
	}
}

177 
	gMùcSysCÆl
::
	$SëReg
 (
ªg
, 
LL
 
vÆ
)

179 
_ms
->
_g¥
[
ªg
] = 
vÆ
;

180 
	}
}

182 
LL


183 
	gMùcSysCÆl
::
	$GëReg
 (
ªg
)

185  
_ms
->
_g¥
[
ªg
];

186 
	}
}

188 
LL


189 
	gMùcSysCÆl
::
	$GëTime
 ()

191  
SIM_TIME
;

192 
	}
}

	@mips.h

1 #i‚de‡
__MIPS_H__


2 
	#__MIPS_H__


	)

4 
	~"sim.h
"

6 
˛ass
 
	gMùc
;

7 
˛ass
 
	gMùcSysCÆl
;

8 
˛ass
 
	gSysCÆl
;

10 
	tBoﬁ
;

11 
	#TRUE
 1

	)

12 
	#FALSE
 0

	)

14 #i‡
BYTE_ORDER
 =
LITTLE_ENDIAN


16 
	#FP_TWIDDLE
 0

	)

20 
	#FP_TWIDDLE
 1

	)

24 
	~"mem.h
"

25 
	~"../../comm⁄/sysˇŒ.h
"

26 
	~"queue.h
"

28 
	#MIPC_DEBUG
 1

	)

30 
	s_pùe_ªg
 {

31 
_pùe_ªg
() :

32 
_isIŒegÆOp
(
FALSE
),

33 
_ös
(0),

34 
_isSysˇŒ
(
FALSE
),

35 
_d°Æl
(0),

36 
_has_Êﬂt_§c
(0),

37 
_is_bubbÀ
(
FALSE
),

38 
_btgt
(0),

39 
_bd¶Ÿ
(0),

40 
_bèkí
(0),

41 
_pc
(0),

42 
_decodedSRC1
(0),

43 
_decodedSRC2
(0),

44 
_decodedDST
(0),

45 
_subªgO≥ønd
(0),

46 
_mem‹y_addr_ªg
(0),

47 
_›Resu…Hi
(0),

48 
_›Resu…Lo
(0),

49 
_memC⁄åﬁ
(0),

50 
_wrôeREG
(0),

51 
_wrôeFREG
(0),

52 
_bønchOff£t
(0),

53 
_hiWP‹t
(0),

54 
_loWP‹t
(0),

55 
_decodedShi·Amt
(0),

56 
_œ°bd¶Ÿ
(0),

57 
_vÆid
(
FALSE
),

58 
_btgt_by∑ss
(
FALSE
)

60 
	m_§c_ªg
[0] = 0;

61 
	m_§c_ªg
[1] = 0;

62 
	m_§c_subªg
 = 0;

63 
	m_§c_‰eg
 = 0;

67 
	m_ös
;

69 
Boﬁ
 
	m_vÆid
;

73 
	m_d°Æl
;

78 
	#HI
 333

	)

79 
	#LO
 1729

	)

80 
	m_§c_ªg
[2];

81 
	m_§c_subªg
;

82 
	m_§c_‰eg
;

83 
	m_has_Êﬂt_§c
;

85 
Boﬁ
 
	m_is_bubbÀ
;

87 
Boﬁ
 
	m_btgt_by∑ss
;

89 sig√d 
	m_decodedSRC1
, 
	m_decodedSRC2
;

90 
	m_decodedDST
;

91 
	m_subªgO≥ønd
;

92 
	m_mem‹y_addr_ªg
;

93 
	m_›Resu…Hi
, 
	m_›Resu…Lo
;

94 
Boﬁ
 
	m_memC⁄åﬁ
;

95 
Boﬁ
 
	m_wrôeREG
, 
	m_wrôeFREG
;

96 sig√d 
	m_bønchOff£t
;

97 
Boﬁ
 
	m_hiWP‹t
, 
	m_loWP‹t
;

98 
	m_decodedShi·Amt
;

100 
	m_pc
;

101 
	m_œ°bd¶Ÿ
;

103 
	m_bèkí
;

104 
	m_bd¶Ÿ
;

105 
	m_btgt
;

107 
Boﬁ
 
	m_isSysˇŒ
;

108 
Boﬁ
 
	m_isIŒegÆOp
;

110 (*
	m_›C⁄åﬁ
)(
	mMùc
*, , 
	m_pùe_ªg
*, _pipe_reg*);

111 (*
	m_memOp
)(
	mMùc
*, 
	m_pùe_ªg
*, _pipe_reg*);

112 } 
	tpùe_ªg_t
;

115 ˛as†
	cMùc
 : 
public
 
SimObje˘
 {

116 
public
:

117 
Mùc
 (
Mem
 *
m
);

118 ~
Mùc
 ();

120 
	mFAKE_SIM_TEMPLATE
;

122 
MùcSysCÆl
 *
	m_sys
;

124 
dum¥egs
 ();

126 
ReboŸ
 (*
image
 = 
NULL
);

131 
MùcDump°©s
();

132 
Dec
 (
pùe_ªg_t
*,Öipe_reg_t*);

133 
Áke_sysˇŒ
 (
ös
);

138 
pùe_ªg_t
 *
	m_fd
, *
	m_de
, *
	m_em
, *
	m_mw
;

139 
Boﬁ
 
	m_isSysˇŒ
;

141 
	m_hi
, 
	m_lo
;

142 
	m_hi_lo_waô
[2];

144 
	m_g¥
[32];

150 
	m_g¥_waô
[32];

154 
	mlo
;

155 
	mhi
;

156 } 
	g_ex_ex
;

158 
	#FPR
(...Ë
	$FPR_
(
__VA_ARGS__
)

	)

159 
	#FPR_
(
Âr
, 
idx
Ë(Âr[(idx)>>1].
l
[
FP_TWIDDLE
^((idx)&1)])

	)

161 
l
[2];

162 
f
[2];

163 
d
;

164 
	}
} 
	g_Âr
[16];

165 
	g_Âr_waô
[16];

170 
	g_„tch_pc
;

172 
Boﬁ
 
	g_°ÆlFëch
;

174 
	g_boŸ
;

178 
LL
 
	g_n„tched
;

179 
LL
 
	g_num_c⁄d_br
;

180 
LL
 
	g_num_jÆ
;

181 
LL
 
	g_num_jr
;

182 
LL
 
	g_num_lﬂd
;

183 
LL
 
	g_num_°‹e
;

184 
LL
 
	g_Âö°
;

186 
Mem
 *
	g_mem
;

188 
Log
 
	g_l
;

189 
	g_sim_exô
;

191 
FILE
 *
	g_debugLog
;

195 
func_add_addu
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

196 
func_™d
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

197 
func_n‹
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

198 
func_‹
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

199 
func_¶l
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

200 
func_¶lv
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

201 
func_¶t
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

202 
func_¶tu
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

203 
func_§a
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

204 
func_§av
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

205 
func_§l
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

206 
func_§lv
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

207 
func_sub_subu
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

208 
func_x‹
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

209 
func_div
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

210 
func_divu
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

211 
func_mfhi
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

212 
func_mÊo
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

213 
func_mthi
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

214 
func_méo
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

215 
func_mu…
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

216 
func_mu…u
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

217 
func_jÆr
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

218 
func_jr
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

219 
func_awaô_bªak
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

220 
func_sysˇŒ
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

221 
func_addi_addiu
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

222 
func_™di
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

223 
func_lui
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

224 
func_‹i
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

225 
func_¶ti
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

226 
func_¶tiu
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

227 
func_x‹i
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

228 
func_beq
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

229 
func_bgez
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

230 
func_bgezÆ
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

231 
func_b…zÆ
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

232 
func_b…z
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

233 
func_bgtz
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

234 
func_bÀz
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

235 
func_b√
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

236 
func_j
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

237 
func_jÆ
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

238 
func_lb
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

239 
func_lbu
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

240 
func_lh
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

241 
func_lhu
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

242 
func_lwl
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

243 
func_lw
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

244 
func_lwr
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

245 
func_lwc1
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

246 
func_swc1
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

247 
func_sb
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

248 
func_sh
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

249 
func_swl
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

250 
func_sw
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

251 
func_swr
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

252 
func_mtc1
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

253 
func_mfc1
 (
Mùc
*, , 
pùe_ªg_t
*,Öipe_reg_t*);

257 
mem_lb
 (
Mùc
*, 
pùe_ªg_t
*,Öipe_reg_t*);

258 
mem_lbu
 (
Mùc
*, 
pùe_ªg_t
*,Öipe_reg_t*);

259 
mem_lh
 (
Mùc
*, 
pùe_ªg_t
*,Öipe_reg_t*);

260 
mem_lhu
 (
Mùc
*, 
pùe_ªg_t
*,Öipe_reg_t*);

261 
mem_lwl
 (
Mùc
*, 
pùe_ªg_t
*,Öipe_reg_t*);

262 
mem_lw
 (
Mùc
*, 
pùe_ªg_t
*,Öipe_reg_t*);

263 
mem_lwr
 (
Mùc
*, 
pùe_ªg_t
*,Öipe_reg_t*);

264 
mem_lwc1
 (
Mùc
*, 
pùe_ªg_t
*,Öipe_reg_t*);

265 
mem_swc1
 (
Mùc
*, 
pùe_ªg_t
*,Öipe_reg_t*);

266 
mem_sb
 (
Mùc
*, 
pùe_ªg_t
*,Öipe_reg_t*);

267 
mem_sh
 (
Mùc
*, 
pùe_ªg_t
*,Öipe_reg_t*);

268 
mem_swl
 (
Mùc
*, 
pùe_ªg_t
*,Öipe_reg_t*);

269 
mem_sw
 (
Mùc
*, 
pùe_ªg_t
*,Öipe_reg_t*);

270 
mem_swr
 (
Mùc
*, 
pùe_ªg_t
*,Öipe_reg_t*);

276 ˛as†
	cMùcSysCÆl
 : 
public
 
SysCÆl
 {

277 
public
:

279 
	$MùcSysCÆl
 (
Mùc
 *
ms
) {

281 
buf
[1024];

282 
m
 = 
ms
->
_mem
;

283 
_ms
 = 
ms
;

284 
_num_lﬂd
 = 0;

285 
_num_°‹e
 = 0;

288 ~
	$MùcSysCÆl
 (Ë{ 
	}
};

290 
LL
 
GëDW‹d
 (LL 
addr
);

291 
SëDW‹d
 (
LL
 
addr
, LL 
d©a
);

293 
W‹d
 
GëW‹d
 (
LL
 
addr
);

294 
SëW‹d
 (
LL
 
addr
, 
W‹d
 
d©a
);

296 
SëReg
 (
ªg
, 
LL
 
vÆ
);

297 
LL
 
GëReg
 (
ªg
);

298 
LL
 
GëTime
 ();

300 
	g¥iv©e
:

302 
Mùc
 *
_ms
;

	@wb.cc

1 
	~"wb.h
"

3 
	gWrôeback
::
	$Wrôeback
 (
Mùc
 *
mc
)

5 
_mc
 = 
mc
;

6 
	}
}

8 
	gWrôeback
::~
	$Wrôeback
 (Ë{
	}
}

11 
Wrôeback
::
	$MaöLo›
 ()

23 
AWAIT_P_PHI0
;

25 i‡(!
_mc
->
_mw
->
_vÆid
) {

26 
AWAIT_P_PHI1
;

30 
pùe_ªg_t
* 
mw
 = 
√w
Öipe_reg_t;

31 *
mw
 = *
_mc
->
_mw
;

33 i‡(
mw
->
_isIŒegÆOp
) {

34 
	`¥ötf
("IŒegÆ in†%#xáàPC %#x. Tîmö©ög simuœti⁄!\n", 
mw
->
_ös
, mw->
_pc
);

35 #ifde‡
MIPC_DEBUG


36 
	`f˛o£
(
_mc
->
_debugLog
);

38 
	`¥ötf
("Register state onÅermination:\n\n");

39 
_mc
->
	`dum¥egs
();

40 
	`exô
(0);

43 i‡(!
mw
->
_isSysˇŒ
) {

44 i‡(
mw
->
_wrôeREG
) {

45 
_mc
->
_g¥
[
mw
->
_decodedDST
] = mw->
_›Resu…Lo
;

46 #ifde‡
MIPC_DEBUG


47 
	`Ârötf
(
_mc
->
_debugLog
, "<%Œu> WrôögÅÿªg %u, vÆue: %#x\n", 
SIM_TIME
, 
mw
->
_decodedDST
, mw->
_›Resu…Lo
);

49 } i‡(
mw
->
_wrôeFREG
) {

50 
_mc
->
_Âr
[
	`FPR_IDX
(
mw
->
_decodedDST
)] = mw->
_›Resu…Lo
;

51 #ifde‡
MIPC_DEBUG


52 
	`Ârötf
(
_mc
->
_debugLog
, "<%Œu> WrôögÅÿ‰eg %u, vÆue: %#x\n", 
SIM_TIME
, (
mw
->
_decodedDST
)>>1, mw->
_›Resu…Lo
);

55 i‡(
mw
->
_hiWP‹t
) {

56 
_mc
->
_hi
 = 
mw
->
_›Resu…Hi
;

57 #ifde‡
MIPC_DEBUG


58 
	`Ârötf
(
_mc
->
_debugLog
, "<%Œu> WrôögÅÿHi, vÆue: %#x\n", 
SIM_TIME
, 
mw
->
_›Resu…Hi
);

61 i‡(
mw
->
_loWP‹t
) {

62 
_mc
->
_lo
 = 
mw
->
_›Resu…Lo
;

63 #ifde‡
MIPC_DEBUG


64 
	`Ârötf
(
_mc
->
_debugLog
, "<%Œu> WrôögÅÿLo, vÆue: %#x\n", 
SIM_TIME
, 
mw
->
_›Resu…Lo
);

70 
_mc
->
_g¥
[0] = 0;

72 
AWAIT_P_PHI1
;

74 
AWAIT_P_PHI1
;

76 i‡(
mw
->
_isSysˇŒ
) {

78 #ifde‡
MIPC_DEBUG


79 
	`Ârötf
(
_mc
->
_debugLog
, "<%Œu> SYSCALL! TøµögÅÿemuœti⁄ÜayîáàPC %#x\n", 
SIM_TIME
, 
mw
->
_pc
);

81 
mw
->
	`_›C⁄åﬁ
(
_mc
, mw->
_ös
, 
NULL
, NULL);

82 
_mc
->
_„tch_pc
 += 4;

84 
_mc
->
_isSysˇŒ
 = 
FALSE
;

87 
dñëe
 
mw
;

89 
	}
}

	@wb.h

1 #i‚de‡
__WB_H__


2 
	#__WB_H__


	)

4 
	~"mùs.h
"

6 
˛ass
 
	gMùc
;

8 ˛as†
	cWrôeback
 : 
public
 
SimObje˘
 {

9 
public
:

10 
Wrôeback
 (
Mùc
*);

11 ~
Wrôeback
 ();

13 
	mFAKE_SIM_TEMPLATE
;

15 
Mùc
 *
	m_mc
;

	@../../common/syscall.h

20 #i‚de‡
__MY_SYSCALL_H__


21 
	#__MY_SYSCALL_H__


	)

23 
	~"mem.h
"

24 
	~"≠p_sysˇŒ.h
"

26 
	#REG_V0
 2

	)

27 
	#REG_V1
 3

	)

29 
	#REG_A0
 4

	)

30 
	#REG_A1
 5

	)

31 
	#REG_A2
 6

	)

32 
	#REG_A3
 7

	)

33 
	#REG_T0
 8

	)

34 
	#REG_T1
 9

	)

36 
	#REG_GP
 28

	)

37 
	#REG_SP
 29

	)

39 
	sfûñog_s
 {

40 
	mv0
;

41 
	ma0
;

42 
	ma1
;

43 
	ma2
;

44 
	mÀngth
;

45 *
	mbuf
;

46 
fûñog_s
 *
	m√xt
;

47 } 
	tfûñog_t
;

49 
˛ass
 
	gMùc
;

51 ˛as†
	cSysCÆl
 {

52 
	mpublic
:

53 
SysCÆl
 ();

54 
SysCÆl
 (
Mùc
 *
ms
);

55 ~
SysCÆl
 ();

57 
Re£t
 ();

67 
ArgumítSëup
 (
¨gc
, **
¨gv
, 
LL
 
addr
, *
öput_fûe
=
NULL
, 
thªad_id
=0);

69 
vútuÆ
 
LL
 
GëDW‹d
 (LL 
addr
) = 0;

70 
vútuÆ
 
SëDW‹d
 (
LL
 
addr
, LL 
vÆue
) = 0;

72 
vútuÆ
 
W‹d
 
GëW‹d
 (
LL
 
addr
) = 0;

73 
vútuÆ
 
SëW‹d
 (
LL
 
addr
, 
W‹d
 
vÆue
) = 0;

75 
vútuÆ
 
SëReg
 (
ªgnum
, 
LL
 
vÆue
) = 0;

76 
vútuÆ
 
LL
 
GëReg
 (
ªgnum
) = 0;

78 
ölöe
 
	$WrôeByã
 (
LL
 
addr
, 
byã
) {

79 
LL
 
vÆue
;

81 
vÆue
 = 
	`GëDW‹d
 (
addr
);

82 
vÆue
 = 
m
->
	`BESëByã
 (
addr
, vÆue, 
byã
);

83 
	`SëDW‹d
 (
addr
, 
vÆue
);

86 
ölöe
 
	$RódByã
 (
LL
 
addr
) {

87 
LL
 
vÆue
;

89 
vÆue
 = 
	`GëDW‹d
 (
addr
);

90  
m
->
	`BEGëByã
 (
addr
, 
vÆue
);

91 
	}
};

93 
ölöe
 
	$WrôeW‹d
 (
LL
 
addr
, 
W‹d
 
w
) {

94 
	`SëW‹d
 (
addr
, 
w
);

95 
	}
};

97 
ölöe
 
W‹d
 
	$RódW‹d
 (
LL
 
addr
) {

98  
	`GëW‹d
 (
addr
);

99 
	}
};

101 
ölöe
 
	$WrôeHÆf
 (
LL
 
addr
, 
W‹d
 
w
) {

102 
LL
 
vÆue
;

104 
vÆue
 = 
	`GëDW‹d
 (
addr
);

105 
vÆue
 = 
m
->
	`BESëHÆfW‹d
 (
addr
, vÆue, 
w
);

106 
	`SëDW‹d
 (
addr
, 
vÆue
);

107 
	}
};

109 
ölöe
 
W‹d
 
	$RódHÆf
 (
LL
 
addr
) {

110 
LL
 
vÆue
;

112 
vÆue
 = 
	`GëDW‹d
 (
addr
);

113  
m
->
	`BEGëHÆfW‹d
 (
addr
, 
vÆue
);

114 
	}
};

116 
vútuÆ
 
EmuœãSysCÆl
 ();

118 
vútuÆ
 
PrötEº‹
 (*
s
, ...);

119 
vútuÆ
 *
SysCÆlName
 (
num
);

121 
vútuÆ
 
LL
 
	$GëTime
 (Ë{  0; 
	}
}

122 
vútuÆ
 
	$GëCpuId
 (Ë{  0; 
	}
}

124 
vútuÆ
 
	$Cª©eCÆl
(,Ë{
	}
}

125 
vútuÆ
 
	$WaôCÆl
(Ë{
	}
}

126 
vútuÆ
 
	$Re£tCÆl
(Ë{
	}
}

127 
vútuÆ
 
	$Pœ˚R™geCÆl
(,,Ë{
	}
}

128 
	gquô
;

130 
LL
 
	gpc
;

132 
LL
 
	g_num_lﬂd
;

133 
LL
 
	g_num_°‹e
;

134 
LL
 
	g_num_lﬂd_sö˚_ª£t
;

135 
LL
 
	g_num_°‹e_sö˚_ª£t
;

137 
	g¥Ÿe˘ed
:

138 
Mem
 *
m
;

139 
	g_fdli°
[256];

141 
LL
 
_emuœã_fx°©
 (
fd
, LL 
addr
);

142 
LL
 
_emuœã_gëtime
(LL 
ts_addr
, LL 
tz_addr
);

144 
	g_¨gc
;

145 **
	g_¨gv
;

146 
LL
 
	g_¨gaddr
;

148 
FILE
 *
	g_Â°©e
, *
	g_Âwrôe
;

149 *
	g_fdlog«me
, 
	g_fdwrôíame
[128];

150 
fûñog_t
 *
	g_fûñog
, *
	g_fûñogèû
;

	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


91 #i‡
deföed
 
__˝lu•lus


92 
	#as£π
(
ex¥
) \

93 (
°©ic_ˇ°
 <
boﬁ
> (
ex¥
) \

95 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

96 #ñi‡!
deföed
 
__GNUC__
 || deföed 
__STRICT_ANSI__


97 
	#as£π
(
ex¥
) \

98 ((
ex¥
) \

99 ? 
	`__ASSERT_VOID_CAST
 (0) \

100 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

107 
	#as£π
(
ex¥
) \

108 ((Ë ((
ex¥
Ë? 1 : 0), 
	`__exãnsi⁄__
 ({ \

109 i‡(
ex¥
) \

112 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
); \

113 
	}
}))

	)

116 #ifdef 
__USE_GNU


117 
	#as£π_≥º‹
(
î∫um
) \

118 (!(
î∫um
) \

119 ? 
	`__ASSERT_VOID_CAST
 (0) \

120 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

128 #i‡
deföed
 
__˝lu•lus
 ? 
__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

129 
	#__ASSERT_FUNCTION
 
__exãnsi⁄__
 
__PRETTY_FUNCTION__


	)

131 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

132 
	#__ASSERT_FUNCTION
 
__func__


	)

134 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

141 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


142 #unde‡
°©ic_as£π


143 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

27 
	~<bôs/libc-hódî-°¨t.h
>

29 #i‡
deföed
 
log
 && deföed 
__GNUC__


30 #w¨nög 
A
 
ma¸o
 
ˇŒed
 
log
 
was
 
Æªady
 
deföed
 
whí
 <
m©h
.
h
> wa†
ö˛uded
.

31 #w¨nög 
This
 
wûl
 
ˇu£
 
compû©i⁄
 
¥obÀms
.

34 
	g__BEGIN_DECLS


37 
	~<bôs/ty≥s.h
>

40 
	~<bôs/m©h-ve˘‹.h
>

43 
	~<bôs/Êﬂä.h
>

47 #i‡
__GNUC_PREREQ
 (3, 3)

48 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
 ())

	)

55 
	#HUGE_VAL
 1e10000

	)

57 #ifde‡
__USE_ISOC99


58 #i‡
__GNUC_PREREQ
 (3, 3)

59 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
 ())

	)

60 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
 ())

	)

62 
	#HUGE_VALF
 1e10000f

	)

63 
	#HUGE_VALL
 1e10000L

	)

66 #i‡
__HAVE_FLOAT16
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

67 
	#HUGE_VAL_F16
 (
	`__buûtö_huge_vÆf16
 ())

	)

69 #i‡
__HAVE_FLOAT32
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

70 
	#HUGE_VAL_F32
 (
	`__buûtö_huge_vÆf32
 ())

	)

72 #i‡
__HAVE_FLOAT64
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

73 
	#HUGE_VAL_F64
 (
	`__buûtö_huge_vÆf64
 ())

	)

75 #i‡
__HAVE_FLOAT128
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

76 
	#HUGE_VAL_F128
 (
	`__buûtö_huge_vÆf128
 ())

	)

78 #i‡
__HAVE_FLOAT32X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

79 
	#HUGE_VAL_F32X
 (
	`__buûtö_huge_vÆf32x
 ())

	)

81 #i‡
__HAVE_FLOAT64X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

82 
	#HUGE_VAL_F64X
 (
	`__buûtö_huge_vÆf64x
 ())

	)

84 #i‡
__HAVE_FLOAT128X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

85 
	#HUGE_VAL_F128X
 (
	`__buûtö_huge_vÆf128x
 ())

	)

88 #ifde‡
__USE_ISOC99


90 #i‡
__GNUC_PREREQ
 (3, 3)

91 
	#INFINITY
 (
	`__buûtö_öff
 ())

	)

93 
	#INFINITY
 
HUGE_VALF


	)

97 #i‡
__GNUC_PREREQ
 (3, 3)

98 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

103 
	#NAN
 (0.0‡/ 0.0f)

	)

107 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

109 #i‡
__GNUC_PREREQ
 (3, 3)

110 
	#SNANF
 (
	`__buûtö_«nsf
 (""))

	)

111 
	#SNAN
 (
	`__buûtö_«ns
 (""))

	)

112 
	#SNANL
 (
	`__buûtö_«n¶
 (""))

	)

115 #i‡(
__HAVE_FLOAT16
 \

116 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
) \

117 && (
deföed
 
	g__USE_GNU
 || !
	$__GLIBC_USE
 (
ISOC2X
)))

118 
	#SNANF16
 (
	`__buûtö_«nsf16
 (""))

	)

120 #i‡(
__HAVE_FLOAT32
 \

121 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
) \

122 && (
deföed
 
__USE_GNU
 || !
	$__GLIBC_USE
 (
ISOC2X
)))

123 
	#SNANF32
 (
	`__buûtö_«nsf32
 (""))

	)

125 #i‡(
__HAVE_FLOAT64
 \

126 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
) \

127 && (
deföed
 
__USE_GNU
 || !
	$__GLIBC_USE
 (
ISOC2X
)))

128 
	#SNANF64
 (
	`__buûtö_«nsf64
 (""))

	)

130 #i‡(
__HAVE_FLOAT128
 \

131 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
) \

132 && (
deföed
 
__USE_GNU
 || !
	$__GLIBC_USE
 (
ISOC2X
)))

133 
	#SNANF128
 (
	`__buûtö_«nsf128
 (""))

	)

135 #i‡(
__HAVE_FLOAT32X
 \

136 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
) \

137 && (
deföed
 
__USE_GNU
 || !
	$__GLIBC_USE
 (
ISOC2X
)))

138 
	#SNANF32X
 (
	`__buûtö_«nsf32x
 (""))

	)

140 #i‡(
__HAVE_FLOAT64X
 \

141 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
) \

142 && (
deföed
 
__USE_GNU
 || !
	$__GLIBC_USE
 (
ISOC2X
)))

143 
	#SNANF64X
 (
	`__buûtö_«nsf64x
 (""))

	)

145 #i‡(
__HAVE_FLOAT128X
 \

146 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
) \

147 && (
deföed
 
__USE_GNU
 || !
	$__GLIBC_USE
 (
ISOC2X
)))

148 
	#SNANF128X
 (
	`__buûtö_«nsf128x
 (""))

	)

152 
	~<bôs/Êt-evÆ-mëhod.h
>

154 #ifde‡
__USE_ISOC99


162 #i‡
__GLIBC_FLT_EVAL_METHOD
 == 0 || __GLIBC_FLT_EVAL_METHOD == 16

163 
	tÊﬂt_t
;

164 
	tdoubÀ_t
;

165 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 1

166 
	tÊﬂt_t
;

167 
	tdoubÀ_t
;

168 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 2

169 
	tÊﬂt_t
;

170 
	tdoubÀ_t
;

171 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 32

172 
_Flﬂt32
 
	tÊﬂt_t
;

173 
	tdoubÀ_t
;

174 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 33

175 
_Flﬂt32x
 
	tÊﬂt_t
;

176 
_Flﬂt32x
 
	tdoubÀ_t
;

177 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 64

178 
_Flﬂt64
 
	tÊﬂt_t
;

179 
_Flﬂt64
 
	tdoubÀ_t
;

180 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 65

181 
_Flﬂt64x
 
	tÊﬂt_t
;

182 
_Flﬂt64x
 
	tdoubÀ_t
;

183 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 128

184 
_Flﬂt128
 
	tÊﬂt_t
;

185 
_Flﬂt128
 
	tdoubÀ_t
;

186 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 129

187 
_Flﬂt128x
 
	tÊﬂt_t
;

188 
_Flﬂt128x
 
	tdoubÀ_t
;

204 
	~<bôs/Â-logb.h
>

205 #ifde‡
__USE_ISOC99


206 #i‡
__FP_LOGB0_IS_MIN


207 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

209 
	#FP_ILOGB0
 (-2147483647)

	)

211 #i‡
__FP_LOGBNAN_IS_MIN


212 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

214 
	#FP_ILOGBNAN
 2147483647

	)

217 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

218 #i‡
__WORDSIZE
 == 32

219 
	#__FP_LONG_MAX
 0x7fffffffL

	)

221 
	#__FP_LONG_MAX
 0x7fffffffffffffffL

	)

223 #i‡
__FP_LOGB0_IS_MIN


224 
	#FP_LLOGB0
 (-
__FP_LONG_MAX
 - 1)

	)

226 
	#FP_LLOGB0
 (-
__FP_LONG_MAX
)

	)

228 #i‡
__FP_LOGBNAN_IS_MIN


229 
	#FP_LLOGBNAN
 (-
__FP_LONG_MAX
 - 1)

	)

231 
	#FP_LLOGBNAN
 
__FP_LONG_MAX


	)

247 
	~<bôs/Â-Á°.h
>

249 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

253 
FP_INT_UPWARD
 =

254 
	#FP_INT_UPWARD
 0

	)

255 
FP_INT_UPWARD
,

256 
FP_INT_DOWNWARD
 =

257 
	#FP_INT_DOWNWARD
 1

	)

258 
FP_INT_DOWNWARD
,

259 
FP_INT_TOWARDZERO
 =

260 
	#FP_INT_TOWARDZERO
 2

	)

261 
FP_INT_TOWARDZERO
,

262 
FP_INT_TONEARESTFROMZERO
 =

263 
	#FP_INT_TONEARESTFROMZERO
 3

	)

264 
FP_INT_TONEARESTFROMZERO
,

265 
FP_INT_TONEAREST
 =

266 
	#FP_INT_TONEAREST
 4

	)

267 
FP_INT_TONEAREST
,

276 
	#__SIMD_DECL
(
fun˘i⁄
Ë
	`__CONCAT
 (
__DECL_SIMD_
, fun˘i⁄)

	)

278 
	#__MATHCALL_VEC
(
fun˘i⁄
, 
suffix
, 
¨gs
) \

279 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

280 
	`__MATHCALL
 (
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

282 
	#__MATHDECL_VEC
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

283 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

284 
	`__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
)

	)

286 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

287 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

288 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

289 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

290 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

291 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

292 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

293 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

294 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

295 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

296 
	#__MATHDECL_1_IMPL
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
) \

297 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

298 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
) \

299 
	`__MATHDECL_1_IMPL
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

302 
	#__MATHDECL_ALIAS
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
, 
Æüs
) \

303 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

305 
	#__MATHREDIR
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
, 
to
) \

306 
ty≥
 
	`__REDIRECT_NTH
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
), 
¨gs
, 
to
)

	)

308 
	#_MdoubÀ_
 

	)

309 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

310 
	#__MATH_DECLARING_DOUBLE
 1

	)

311 
	#__MATH_DECLARING_FLOATN
 0

	)

312 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

313 
	~<bôs/m©hˇŒs.h
>

314 #unde‡
_MdoubÀ_


315 #unde‡
__MATH_PRECNAME


316 #unde‡
__MATH_DECLARING_DOUBLE


317 #unde‡
__MATH_DECLARING_FLOATN


319 #ifde‡
__USE_ISOC99


325 
	#_MdoubÀ_
 

	)

326 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

327 
	#__MATH_DECLARING_DOUBLE
 0

	)

328 
	#__MATH_DECLARING_FLOATN
 0

	)

329 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

330 
	~<bôs/m©hˇŒs.h
>

331 #unde‡
_MdoubÀ_


332 #unde‡
__MATH_PRECNAME


333 #unde‡
__MATH_DECLARING_DOUBLE


334 #unde‡
__MATH_DECLARING_FLOATN


336 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

337 || 
deföed
 
__LDBL_COMPAT
 \

338 || 
deföed
 
_LIBC_TEST


339 #ifde‡
__LDBL_COMPAT


341 #ifde‡
__USE_ISOC99


342 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

343 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

344 #ifde‡
__REDIRECT_NTH


345 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

346 
__∆dbl_√xâow¨df
)

347 
	`__©åibuã__
 ((
__c⁄°__
));

348 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

349 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

350 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

351 (
__x
, 
__y
),

352 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

356 #unde‡
__MATHDECL_1


357 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

358 
	`__MATHREDIR
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

360 #ñi‡
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

361 #ifde‡
__REDIRECT_NTH


362 #ifde‡
__USE_ISOC99


363 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

364 
__√xâow¨df_to_õì128
)

365 
	`__©åibuã__
 ((
__c⁄°__
));

366 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

367 
__√xâow¨d_to_õì128
)

368 
	`__©åibuã__
 ((
__c⁄°__
));

370 
	#__dªmõì128
 
__ªmaödîõì128


	)

371 
	#__gammaõì128
 
__lgammaõì128


	)

376 #unde‡
__MATHDECL_1


377 #unde‡
__MATHDECL_ALIAS


379 
	#__REDIRTO
(
fun˘i⁄
, 
suffix
) \

380 
__
 ## 
fun˘i⁄
 ## 
õì128
 ## 
suffix


	)

381 
	#__REDIRTO_ALT
(
fun˘i⁄
, 
suffix
) \

382 
__
 ## 
fun˘i⁄
 ## 
f128
 ## 
suffix


	)

384 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
) \

385 
	`__MATHREDIR
 (
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
, 
	`__REDIRTO
 (fun˘i⁄, suffix))

	)

386 
	#__MATHDECL_ALIAS
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
, 
Æüs
) \

387 
	`__MATHREDIR
 (
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
, 
	`__REDIRTO_ALT
 (
Æüs
, suffix))

	)

393 
	#_MdoubÀ_
 

	)

394 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

395 
	#__MATH_DECLARING_DOUBLE
 0

	)

396 
	#__MATH_DECLARING_FLOATN
 0

	)

397 
	#__MATH_DECLARE_LDOUBLE
 1

	)

398 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

399 
	~<bôs/m©hˇŒs.h
>

401 #unde‡
_MdoubÀ_


402 #unde‡
__MATH_PRECNAME


403 #unde‡
__MATH_DECLARING_DOUBLE


404 #unde‡
__MATH_DECLARING_FLOATN


406 #i‡
deföed
 
__LDBL_COMPAT
 \

407 || 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

408 #unde‡
__REDIRTO


409 #unde‡
__REDIRTO_ALT


410 #unde‡
__MATHDECL_1


411 #unde‡
__MATHDECL_ALIAS


412 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
) \

413 
	`__MATHDECL_1_IMPL
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

414 
	#__MATHDECL_ALIAS
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
, 
Æüs
) \

415 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

424 #i‡
__HAVE_DISTINCT_FLOAT16
 || (
__HAVE_FLOAT16
 && !
deföed
 
_LIBC
)

425 
	#_MdoubÀ_
 
_Flﬂt16


	)

426 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f16
##
	)
r

427 
	#__MATH_DECLARING_DOUBLE
 0

	)

428 
	#__MATH_DECLARING_FLOATN
 1

	)

429 #i‡
__HAVE_DISTINCT_FLOAT16


430 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

432 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

433 
	~<bôs/m©hˇŒs.h
>

435 #unde‡
_MdoubÀ_


436 #unde‡
__MATH_PRECNAME


437 #unde‡
__MATH_DECLARING_DOUBLE


438 #unde‡
__MATH_DECLARING_FLOATN


441 #i‡
__HAVE_DISTINCT_FLOAT32
 || (
__HAVE_FLOAT32
 && !
deföed
 
_LIBC
)

442 
	#_MdoubÀ_
 
_Flﬂt32


	)

443 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f32
##
	)
r

444 
	#__MATH_DECLARING_DOUBLE
 0

	)

445 
	#__MATH_DECLARING_FLOATN
 1

	)

446 #i‡
__HAVE_DISTINCT_FLOAT32


447 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

449 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

450 
	~<bôs/m©hˇŒs.h
>

452 #unde‡
_MdoubÀ_


453 #unde‡
__MATH_PRECNAME


454 #unde‡
__MATH_DECLARING_DOUBLE


455 #unde‡
__MATH_DECLARING_FLOATN


458 #i‡
__HAVE_DISTINCT_FLOAT64
 || (
__HAVE_FLOAT64
 && !
deföed
 
_LIBC
)

459 
	#_MdoubÀ_
 
_Flﬂt64


	)

460 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f64
##
	)
r

461 
	#__MATH_DECLARING_DOUBLE
 0

	)

462 
	#__MATH_DECLARING_FLOATN
 1

	)

463 #i‡
__HAVE_DISTINCT_FLOAT64


464 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

466 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

467 
	~<bôs/m©hˇŒs.h
>

469 #unde‡
_MdoubÀ_


470 #unde‡
__MATH_PRECNAME


471 #unde‡
__MATH_DECLARING_DOUBLE


472 #unde‡
__MATH_DECLARING_FLOATN


475 #i‡
__HAVE_DISTINCT_FLOAT128
 || (
__HAVE_FLOAT128
 && !
deföed
 
_LIBC
)

476 
	#_MdoubÀ_
 
_Flﬂt128


	)

477 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f128
##
	)
r

478 
	#__MATH_DECLARING_DOUBLE
 0

	)

479 
	#__MATH_DECLARING_FLOATN
 1

	)

480 #i‡
__HAVE_DISTINCT_FLOAT128


481 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

483 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

484 
	~<bôs/m©hˇŒs.h
>

486 #unde‡
_MdoubÀ_


487 #unde‡
__MATH_PRECNAME


488 #unde‡
__MATH_DECLARING_DOUBLE


489 #unde‡
__MATH_DECLARING_FLOATN


492 #i‡
__HAVE_DISTINCT_FLOAT32X
 || (
__HAVE_FLOAT32X
 && !
deföed
 
_LIBC
)

493 
	#_MdoubÀ_
 
_Flﬂt32x


	)

494 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f32x
##
	)
r

495 
	#__MATH_DECLARING_DOUBLE
 0

	)

496 
	#__MATH_DECLARING_FLOATN
 1

	)

497 #i‡
__HAVE_DISTINCT_FLOAT32X


498 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

500 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

501 
	~<bôs/m©hˇŒs.h
>

503 #unde‡
_MdoubÀ_


504 #unde‡
__MATH_PRECNAME


505 #unde‡
__MATH_DECLARING_DOUBLE


506 #unde‡
__MATH_DECLARING_FLOATN


509 #i‡
__HAVE_DISTINCT_FLOAT64X
 || (
__HAVE_FLOAT64X
 && !
deföed
 
_LIBC
)

510 
	#_MdoubÀ_
 
_Flﬂt64x


	)

511 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f64x
##
	)
r

512 
	#__MATH_DECLARING_DOUBLE
 0

	)

513 
	#__MATH_DECLARING_FLOATN
 1

	)

514 #i‡
__HAVE_DISTINCT_FLOAT64X


515 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

517 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

518 
	~<bôs/m©hˇŒs.h
>

520 #unde‡
_MdoubÀ_


521 #unde‡
__MATH_PRECNAME


522 #unde‡
__MATH_DECLARING_DOUBLE


523 #unde‡
__MATH_DECLARING_FLOATN


526 #i‡
__HAVE_DISTINCT_FLOAT128X
 || (
__HAVE_FLOAT128X
 && !
deföed
 
_LIBC
)

527 
	#_MdoubÀ_
 
_Flﬂt128x


	)

528 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f128x
##
	)
r

529 
	#__MATH_DECLARING_DOUBLE
 0

	)

530 
	#__MATH_DECLARING_FLOATN
 1

	)

531 #i‡
__HAVE_DISTINCT_FLOAT128X


532 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

534 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

535 
	~<bôs/m©hˇŒs.h
>

537 #unde‡
_MdoubÀ_


538 #unde‡
__MATH_PRECNAME


539 #unde‡
__MATH_DECLARING_DOUBLE


540 #unde‡
__MATH_DECLARING_FLOATN


543 #unde‡
__MATHDECL_1_IMPL


544 #unde‡
__MATHDECL_1


545 #unde‡
__MATHDECL_ALIAS


546 #unde‡
__MATHDECL


547 #unde‡
__MATHCALL


550 
	#__MATHCALL_NARROW_ARGS_1
 (
_M¨g_
 
__x
)

	)

551 
	#__MATHCALL_NARROW_ARGS_2
 (
_M¨g_
 
__x
, _M¨g_ 
__y
)

	)

552 
	#__MATHCALL_NARROW_ARGS_3
 (
_M¨g_
 
__x
, _M¨g_ 
__y
, _M¨g_ 
__z
)

	)

553 
	#__MATHCALL_NARROW_NORMAL
(
func
, 
«rgs
) \

554 
_Mªt_
 
func
 
__MATHCALL_NARROW_ARGS_
 ## 
«rgs
 
__THROW


	)

555 
	#__MATHCALL_NARROW_REDIR
(
func
, 
ªdú
, 
«rgs
) \

556 
_Mªt_
 
	`__REDIRECT_NTH
 (
func
, 
__MATHCALL_NARROW_ARGS_
 ## 
«rgs
, \

557 
ªdú
)

	)

558 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

559 
	`__MATHCALL_NARROW_NORMAL
 (
func
, 
«rgs
)

	)

561 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

563 
	#_Mªt_
 

	)

564 
	#_M¨g_
 

	)

565 
	#__MATHCALL_NAME
(
«me
Ë
f
 ## 
	)
name

566 
	~<bôs/m©hˇŒs-«ºow.h
>

567 #unde‡
_Mªt_


568 #unde‡
_M¨g_


569 #unde‡
__MATHCALL_NAME


571 
	#_Mªt_
 

	)

572 
	#_M¨g_
 

	)

573 
	#__MATHCALL_NAME
(
«me
Ë
f
 ##Çamê## 
l


	)

574 #ifde‡
__LDBL_COMPAT


575 
	#__MATHCALL_REDIR_NAME
(
«me
Ë
f
 ## 
	)
name

576 
	#__MATHCALL_REDIR_NAME2
(
«me
Ë
f
 ## 
	)
name

577 #unde‡
__MATHCALL_NARROW


578 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

579 
	`__MATHCALL_NARROW_REDIR
 (
func
, 
ªdú
, 
«rgs
)

	)

580 #ñi‡
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

581 
	#__MATHCALL_REDIR_NAME
(
«me
Ë
__
 ## 
f32
 ##Çamê## 
õì128


	)

582 
	#__MATHCALL_REDIR_NAME2
(
«me
Ë
__
 ## 
f32
 ##Çamê## 
õì128


	)

583 #unde‡
__MATHCALL_NARROW


584 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

585 
	`__MATHCALL_NARROW_REDIR
 (
func
, 
ªdú
, 
«rgs
)

	)

587 
	~<bôs/m©hˇŒs-«ºow.h
>

588 #unde‡
_Mªt_


589 #unde‡
_M¨g_


590 #unde‡
__MATHCALL_NAME


591 #i‡
deföed
 
__LDBL_COMPAT
 \

592 || 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

593 #unde‡
__MATHCALL_REDIR_NAME


594 #unde‡
__MATHCALL_REDIR_NAME2


595 #unde‡
__MATHCALL_NARROW


596 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

597 
	`__MATHCALL_NARROW_NORMAL
 (
func
, 
«rgs
)

	)

600 
	#_Mªt_
 

	)

601 
	#_M¨g_
 

	)

602 
	#__MATHCALL_NAME
(
«me
Ë
d
 ##Çamê## 
l


	)

603 #ifde‡
__LDBL_COMPAT


604 
	#__MATHCALL_REDIR_NAME
(
«me
Ë
__∆dbl_d
 ##Çamê## 
l


	)

605 
	#__MATHCALL_REDIR_NAME2
(
«me
Ë
	)
name

606 #unde‡
__MATHCALL_NARROW


607 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

608 
	`__MATHCALL_NARROW_REDIR
 (
func
, 
ªdú
, 
«rgs
)

	)

609 #ñi‡
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

610 
	#__MATHCALL_REDIR_NAME
(
«me
Ë
__
 ## 
f64
 ##Çamê## 
õì128


	)

611 
	#__MATHCALL_REDIR_NAME2
(
«me
Ë
__
 ## 
f64
 ##Çamê## 
õì128


	)

612 #unde‡
__MATHCALL_NARROW


613 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

614 
	`__MATHCALL_NARROW_REDIR
 (
func
, 
ªdú
, 
«rgs
)

	)

616 
	~<bôs/m©hˇŒs-«ºow.h
>

617 #unde‡
_Mªt_


618 #unde‡
_M¨g_


619 #unde‡
__MATHCALL_NAME


620 #i‡
deföed
 
__LDBL_COMPAT
 \

621 || 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

622 #unde‡
__MATHCALL_REDIR_NAME


623 #unde‡
__MATHCALL_REDIR_NAME2


624 #unde‡
__MATHCALL_NARROW


625 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

626 
	`__MATHCALL_NARROW_NORMAL
 (
func
, 
«rgs
)

	)

631 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

633 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT32


634 
	#_Mªt_
 
_Flﬂt16


	)

635 
	#_M¨g_
 
_Flﬂt32


	)

636 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f32


	)

637 
	~<bôs/m©hˇŒs-«ºow.h
>

638 #unde‡
_Mªt_


639 #unde‡
_M¨g_


640 #unde‡
__MATHCALL_NAME


643 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT32X


644 
	#_Mªt_
 
_Flﬂt16


	)

645 
	#_M¨g_
 
_Flﬂt32x


	)

646 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f32x


	)

647 
	~<bôs/m©hˇŒs-«ºow.h
>

648 #unde‡
_Mªt_


649 #unde‡
_M¨g_


650 #unde‡
__MATHCALL_NAME


653 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT64


654 
	#_Mªt_
 
_Flﬂt16


	)

655 
	#_M¨g_
 
_Flﬂt64


	)

656 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f64


	)

657 
	~<bôs/m©hˇŒs-«ºow.h
>

658 #unde‡
_Mªt_


659 #unde‡
_M¨g_


660 #unde‡
__MATHCALL_NAME


663 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT64X


664 
	#_Mªt_
 
_Flﬂt16


	)

665 
	#_M¨g_
 
_Flﬂt64x


	)

666 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f64x


	)

667 
	~<bôs/m©hˇŒs-«ºow.h
>

668 #unde‡
_Mªt_


669 #unde‡
_M¨g_


670 #unde‡
__MATHCALL_NAME


673 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT128


674 
	#_Mªt_
 
_Flﬂt16


	)

675 
	#_M¨g_
 
_Flﬂt128


	)

676 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f128


	)

677 
	~<bôs/m©hˇŒs-«ºow.h
>

678 #unde‡
_Mªt_


679 #unde‡
_M¨g_


680 #unde‡
__MATHCALL_NAME


683 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT128X


684 
	#_Mªt_
 
_Flﬂt16


	)

685 
	#_M¨g_
 
_Flﬂt128x


	)

686 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f128x


	)

687 
	~<bôs/m©hˇŒs-«ºow.h
>

688 #unde‡
_Mªt_


689 #unde‡
_M¨g_


690 #unde‡
__MATHCALL_NAME


693 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT32X


694 
	#_Mªt_
 
_Flﬂt32


	)

695 
	#_M¨g_
 
_Flﬂt32x


	)

696 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f32x


	)

697 
	~<bôs/m©hˇŒs-«ºow.h
>

698 #unde‡
_Mªt_


699 #unde‡
_M¨g_


700 #unde‡
__MATHCALL_NAME


703 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT64


704 
	#_Mªt_
 
_Flﬂt32


	)

705 
	#_M¨g_
 
_Flﬂt64


	)

706 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f64


	)

707 
	~<bôs/m©hˇŒs-«ºow.h
>

708 #unde‡
_Mªt_


709 #unde‡
_M¨g_


710 #unde‡
__MATHCALL_NAME


713 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT64X


714 
	#_Mªt_
 
_Flﬂt32


	)

715 
	#_M¨g_
 
_Flﬂt64x


	)

716 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f64x


	)

717 
	~<bôs/m©hˇŒs-«ºow.h
>

718 #unde‡
_Mªt_


719 #unde‡
_M¨g_


720 #unde‡
__MATHCALL_NAME


723 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT128


724 
	#_Mªt_
 
_Flﬂt32


	)

725 
	#_M¨g_
 
_Flﬂt128


	)

726 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f128


	)

727 
	~<bôs/m©hˇŒs-«ºow.h
>

728 #unde‡
_Mªt_


729 #unde‡
_M¨g_


730 #unde‡
__MATHCALL_NAME


733 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT128X


734 
	#_Mªt_
 
_Flﬂt32


	)

735 
	#_M¨g_
 
_Flﬂt128x


	)

736 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f128x


	)

737 
	~<bôs/m©hˇŒs-«ºow.h
>

738 #unde‡
_Mªt_


739 #unde‡
_M¨g_


740 #unde‡
__MATHCALL_NAME


743 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT64


744 
	#_Mªt_
 
_Flﬂt32x


	)

745 
	#_M¨g_
 
_Flﬂt64


	)

746 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f64


	)

747 
	~<bôs/m©hˇŒs-«ºow.h
>

748 #unde‡
_Mªt_


749 #unde‡
_M¨g_


750 #unde‡
__MATHCALL_NAME


753 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT64X


754 
	#_Mªt_
 
_Flﬂt32x


	)

755 
	#_M¨g_
 
_Flﬂt64x


	)

756 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f64x


	)

757 
	~<bôs/m©hˇŒs-«ºow.h
>

758 #unde‡
_Mªt_


759 #unde‡
_M¨g_


760 #unde‡
__MATHCALL_NAME


763 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT128


764 
	#_Mªt_
 
_Flﬂt32x


	)

765 
	#_M¨g_
 
_Flﬂt128


	)

766 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f128


	)

767 
	~<bôs/m©hˇŒs-«ºow.h
>

768 #unde‡
_Mªt_


769 #unde‡
_M¨g_


770 #unde‡
__MATHCALL_NAME


773 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT128X


774 
	#_Mªt_
 
_Flﬂt32x


	)

775 
	#_M¨g_
 
_Flﬂt128x


	)

776 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f128x


	)

777 
	~<bôs/m©hˇŒs-«ºow.h
>

778 #unde‡
_Mªt_


779 #unde‡
_M¨g_


780 #unde‡
__MATHCALL_NAME


783 #i‡
__HAVE_FLOAT64
 && 
__HAVE_FLOAT64X


784 
	#_Mªt_
 
_Flﬂt64


	)

785 
	#_M¨g_
 
_Flﬂt64x


	)

786 
	#__MATHCALL_NAME
(
«me
Ë
f64
 ##Çamê## 
f64x


	)

787 
	~<bôs/m©hˇŒs-«ºow.h
>

788 #unde‡
_Mªt_


789 #unde‡
_M¨g_


790 #unde‡
__MATHCALL_NAME


793 #i‡
__HAVE_FLOAT64
 && 
__HAVE_FLOAT128


794 
	#_Mªt_
 
_Flﬂt64


	)

795 
	#_M¨g_
 
_Flﬂt128


	)

796 
	#__MATHCALL_NAME
(
«me
Ë
f64
 ##Çamê## 
f128


	)

797 
	~<bôs/m©hˇŒs-«ºow.h
>

798 #unde‡
_Mªt_


799 #unde‡
_M¨g_


800 #unde‡
__MATHCALL_NAME


803 #i‡
__HAVE_FLOAT64
 && 
__HAVE_FLOAT128X


804 
	#_Mªt_
 
_Flﬂt64


	)

805 
	#_M¨g_
 
_Flﬂt128x


	)

806 
	#__MATHCALL_NAME
(
«me
Ë
f64
 ##Çamê## 
f128x


	)

807 
	~<bôs/m©hˇŒs-«ºow.h
>

808 #unde‡
_Mªt_


809 #unde‡
_M¨g_


810 #unde‡
__MATHCALL_NAME


813 #i‡
__HAVE_FLOAT64X
 && 
__HAVE_FLOAT128


814 
	#_Mªt_
 
_Flﬂt64x


	)

815 
	#_M¨g_
 
_Flﬂt128


	)

816 
	#__MATHCALL_NAME
(
«me
Ë
f64x
 ##Çamê## 
f128


	)

817 
	~<bôs/m©hˇŒs-«ºow.h
>

818 #unde‡
_Mªt_


819 #unde‡
_M¨g_


820 #unde‡
__MATHCALL_NAME


823 #i‡
__HAVE_FLOAT64X
 && 
__HAVE_FLOAT128X


824 
	#_Mªt_
 
_Flﬂt64x


	)

825 
	#_M¨g_
 
_Flﬂt128x


	)

826 
	#__MATHCALL_NAME
(
«me
Ë
f64x
 ##Çamê## 
f128x


	)

827 
	~<bôs/m©hˇŒs-«ºow.h
>

828 #unde‡
_Mªt_


829 #unde‡
_M¨g_


830 #unde‡
__MATHCALL_NAME


833 #i‡
__HAVE_FLOAT128
 && 
__HAVE_FLOAT128X


834 
	#_Mªt_
 
_Flﬂt128


	)

835 
	#_M¨g_
 
_Flﬂt128x


	)

836 
	#__MATHCALL_NAME
(
«me
Ë
f128
 ##Çamê## 
f128x


	)

837 
	~<bôs/m©hˇŒs-«ºow.h
>

838 #unde‡
_Mªt_


839 #unde‡
_M¨g_


840 #unde‡
__MATHCALL_NAME


845 #unde‡
__MATHCALL_NARROW_ARGS_1


846 #unde‡
__MATHCALL_NARROW_ARGS_2


847 #unde‡
__MATHCALL_NARROW_ARGS_3


848 #unde‡
__MATHCALL_NARROW_NORMAL


849 #unde‡
__MATHCALL_NARROW_REDIR


850 #unde‡
__MATHCALL_NARROW


852 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


854 
signgam
;

857 #i‡(
__HAVE_DISTINCT_FLOAT16
 \

858 || 
__HAVE_DISTINCT_FLOAT32
 \

859 || 
__HAVE_DISTINCT_FLOAT64
 \

860 || 
__HAVE_DISTINCT_FLOAT32X
 \

861 || 
__HAVE_DISTINCT_FLOAT64X
 \

862 || 
__HAVE_DISTINCT_FLOAT128X
)

875 #ifde‡
__NO_LONG_DOUBLE_MATH


876 #i‡
__HAVE_DISTINCT_FLOAT128


879 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

880 ( (
TG_ARG
Ë= (Ë? 
FUNC
 ## 
f
 
ARGS
 : FUNC ARGS)

	)

881 #ñi‡
__HAVE_DISTINCT_FLOAT128


882 #i‡
__HAVE_GENERIC_SELECTION


883 #i‡
__HAVE_FLOATN_NOT_TYPEDEF
 && 
__HAVE_FLOAT32


884 
	#__MATH_TG_F32
(
FUNC
, 
ARGS
Ë
_Flﬂt32
: FUNC ## 
f
 ARGS,

	)

886 
	#__MATH_TG_F32
(
FUNC
, 
ARGS
)

	)

888 #i‡
__HAVE_FLOATN_NOT_TYPEDEF
 && 
__HAVE_FLOAT64X


889 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


890 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
Ë
_Flﬂt64x
: FUNC ## 
l
 ARGS,

	)

892 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
Ë
_Flﬂt64x
: FUNC ## 
f128
 ARGS,

	)

895 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
)

	)

897 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

898 
	`_Gíîic
 ((
TG_ARG
), \

899 : 
FUNC
 ## 
f
 
ARGS
, \

900 
	`__MATH_TG_F32
 (
FUNC
, 
ARGS
) \

901 : 
FUNC
 
ARGS
, \

902 : 
FUNC
 ## 
l
 
ARGS
, \

903 
	`__MATH_TG_F64X
 (
FUNC
, 
ARGS
) \

904 
_Flﬂt128
: 
FUNC
 ## 
f128
 
ARGS
)

	)

906 #i‡
__HAVE_FLOATN_NOT_TYPEDEF


909 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

910 
__buûtö_choo£_ex¥
 \

911 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

912 
FUNC
 ## 
f
 
ARGS
, \

913 
__buûtö_choo£_ex¥
 \

914 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

915 
FUNC
 
ARGS
, \

916 
__buûtö_choo£_ex¥
 \

917 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

918 
FUNC
 ## 
l
 
ARGS
, \

919 
FUNC
 ## 
f128
 
ARGS
)))

	)

922 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

923 ( (
TG_ARG
) ==  () \

924 ? 
FUNC
 ## 
f
 
ARGS
 \

925 :  (
TG_ARG
) ==  () \

926 ? 
FUNC
 
ARGS
 \

927 : 
FUNC
 ## 
l
 
ARGS
)

	)

931 #ifde‡
__USE_ISOC99


936 
FP_NAN
 =

937 
	#FP_NAN
 0

	)

938 
FP_NAN
,

939 
FP_INFINITE
 =

940 
	#FP_INFINITE
 1

	)

941 
FP_INFINITE
,

942 
FP_ZERO
 =

943 
	#FP_ZERO
 2

	)

944 
FP_ZERO
,

945 
FP_SUBNORMAL
 =

946 
	#FP_SUBNORMAL
 3

	)

947 
FP_SUBNORMAL
,

948 
FP_NORMAL
 =

949 
	#FP_NORMAL
 4

	)

950 
FP_NORMAL


958 #i‡((
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

959 || 
	`__glibc_˛™g_¥îeq
 (2,8)) \

960 && (!
deföed
 
__OPTIMIZE_SIZE__
 || deföed 
__˝lu•lus
)

967 
	#Â˛assify
(
x
Ë
	`__buûtö_Â˛assify
 (
FP_NAN
, 
FP_INFINITE
, \

968 
FP_NORMAL
, 
FP_SUBNORMAL
, 
FP_ZERO
, 
x
)

	)

970 
	#Â˛assify
(
x
Ë
	`__MATH_TG
 ((x), 
__Â˛assify
, (x))

	)

974 #i‡
	`__GNUC_PREREQ
 (6,0Ë|| 
	`__glibc_˛™g_¥îeq
 (3,3)

975 
	#signbô
(
x
Ë
	`__buûtö_signbô
 (x)

	)

976 #ñi‡
deföed
 
__˝lu•lus


984 
	#signbô
(
x
Ë
	`__buûtö_signbôl
 (x)

	)

985 #ñi‡
	`__GNUC_PREREQ
 (4,0)

986 
	#signbô
(
x
Ë
	`__MATH_TG
 ((x), 
__buûtö_signbô
, (x))

	)

988 
	#signbô
(
x
Ë
	`__MATH_TG
 ((x), 
__signbô
, (x))

	)

992 #i‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

993 || 
	$__glibc_˛™g_¥îeq
 (2,8)

994 
	#isföôe
(
x
Ë
	`__buûtö_isföôe
 (x)

	)

996 
	#isföôe
(
x
Ë
	`__MATH_TG
 ((x), 
__föôe
, (x))

	)

1000 #i‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

1001 || 
	$__glibc_˛™g_¥îeq
 (2,8)

1002 
	#i¢‹mÆ
(
x
Ë
	`__buûtö_i¢‹mÆ
 (x)

	)

1004 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

1009 #i‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

1010 || 
	$__glibc_˛™g_¥îeq
 (2,8)

1011 
	#i¢™
(
x
Ë
	`__buûtö_i¢™
 (x)

	)

1013 
	#i¢™
(
x
Ë
	`__MATH_TG
 ((x), 
__i¢™
, (x))

	)

1017 #i‡
__HAVE_DISTINCT_FLOAT128
 && !
	`__GNUC_PREREQ
 (7,0) \

1018 && !
deföed
 
__SUPPORT_SNAN__
 && !deföed 
__˝lu•lus


1024 
	#isöf
(
x
) \

1025 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
x
), 
_Flﬂt128
) \

1026 ? 
	`__isöff128
 (
x
Ë: 
	`__buûtö_isöf_sign
 (x))

	)

1027 #ñi‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

1028 || 
	$__glibc_˛™g_¥îeq
 (3,7)

1029 
	#isöf
(
x
Ë
	`__buûtö_isöf_sign
 (x)

	)

1031 
	#isöf
(
x
Ë
	`__MATH_TG
 ((x), 
__isöf
, (x))

	)

1035 
	#MATH_ERRNO
 1

	)

1036 
	#MATH_ERREXCEPT
 2

	)

1043 #ifde‡
__FAST_MATH__


1044 
	#m©h_îrh™dlög
 0

	)

1045 #ñi‡
deföed
 
__NO_MATH_ERRNO__


1046 
	#m©h_îrh™dlög
 (
MATH_ERREXCEPT
)

	)

1048 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

1053 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

1054 
	~<bôs/isˇn⁄iˇl.h
>

1057 #i‚de‡
__˝lu•lus


1058 
	#issig«lög
(
x
Ë
	`__MATH_TG
 ((x), 
__issig«lög
, (x))

	)

1067 
ölöe
 
	`issig«lög
 (
__vÆ
Ë{  
	`__issig«lögf
 (__val); }

1068 
ölöe
 
	`issig«lög
 (
__vÆ
Ë{  
	`__issig«lög
 (__val); }

1069 
ölöe
 

1070 
	`issig«lög
 (
__vÆ
)

1072 #ifde‡
__NO_LONG_DOUBLE_MATH


1073  
	`__issig«lög
 (
__vÆ
);

1075  
	`__issig«lögl
 (
__vÆ
);

1078 #i‡
__HAVE_FLOAT128_UNLIKE_LDBL


1081 
ölöe
 
	`issig«lög
 (
_Flﬂt128
 
__vÆ
Ë{  
	`__issig«lögf128
 (__val); }

1083 
	}
}

1087 
	#issubn‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_SUBNORMAL
)

	)

1090 #i‚de‡
__˝lu•lus


1091 #ifde‡
__SUPPORT_SNAN__


1092 
	#iszîo
(
x
Ë(
	`Â˛assify
 (xË=
FP_ZERO
)

	)

1094 
	#iszîo
(
x
Ë(((
	`__ty≥of
 (x)Ë(x)Ë=0)

	)

1098 #ifde‡
__SUPPORT_SNAN__


1099 
ölöe
 

1100 
iszîo
 (
__vÆ
)

1102  
__Â˛assifyf
 (
__vÆ
Ë=
FP_ZERO
;

1104 
ölöe
 

1105 
iszîo
 (
__vÆ
)

1107  
__Â˛assify
 (
__vÆ
Ë=
FP_ZERO
;

1109 
ölöe
 

1110 
iszîo
 (
__vÆ
)

1112 #ifde‡
__NO_LONG_DOUBLE_MATH


1113  
__Â˛assify
 (
__vÆ
Ë=
FP_ZERO
;

1115  
__Â˛assifyl
 (
__vÆ
Ë=
FP_ZERO
;

1118 #i‡
__HAVE_FLOAT128_UNLIKE_LDBL


1121 
ölöe
 

1122 
iszîo
 (
_Flﬂt128
 
__vÆ
)

1124  
__Â˛assifyf128
 (
__vÆ
Ë=
FP_ZERO
;

1128 
ãm∂©e
 <
˛ass
 
__T
> 
ölöe
 
boﬁ


1129 
iszîo
 (
__T
 
__vÆ
)

1131  
__vÆ
 == 0;

1138 #ifde‡
__USE_XOPEN


1140 
	#MAXFLOAT
 3.40282347e+38F

	)

1145 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


1146 
	#M_E
 2.7182818284590452354

	)

1147 
	#M_LOG2E
 1.4426950408889634074

	)

1148 
	#M_LOG10E
 0.43429448190325182765

	)

1149 
	#M_LN2
 0.69314718055994530942

	)

1150 
	#M_LN10
 2.30258509299404568402

	)

1151 
	#M_PI
 3.14159265358979323846

	)

1152 
	#M_PI_2
 1.57079632679489661923

	)

1153 
	#M_PI_4
 0.78539816339744830962

	)

1154 
	#M_1_PI
 0.31830988618379067154

	)

1155 
	#M_2_PI
 0.63661977236758134308

	)

1156 
	#M_2_SQRTPI
 1.12837916709551257390

	)

1157 
	#M_SQRT2
 1.41421356237309504880

	)

1158 
	#M_SQRT1_2
 0.70710678118654752440

	)

1162 #ifde‡
__USE_GNU


1163 
	#M_Ef
 2.7182818284590452354‡

	)

1164 
	#M_LOG2Ef
 1.4426950408889634074‡

	)

1165 
	#M_LOG10Ef
 0.43429448190325182765‡

	)

1166 
	#M_LN2f
 0.69314718055994530942‡

	)

1167 
	#M_LN10f
 2.30258509299404568402‡

	)

1168 
	#M_PIf
 3.14159265358979323846‡

	)

1169 
	#M_PI_2f
 1.57079632679489661923‡

	)

1170 
	#M_PI_4f
 0.78539816339744830962‡

	)

1171 
	#M_1_PIf
 0.31830988618379067154‡

	)

1172 
	#M_2_PIf
 0.63661977236758134308‡

	)

1173 
	#M_2_SQRTPIf
 1.12837916709551257390‡

	)

1174 
	#M_SQRT2f
 1.41421356237309504880‡

	)

1175 
	#M_SQRT1_2f
 0.70710678118654752440‡

	)

1181 #ifde‡
__USE_GNU


1182 
	#M_El
 2.718281828459045235360287471352662498L

	)

1183 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

1184 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

1185 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

1186 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

1187 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

1188 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

1189 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

1190 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

1191 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

1192 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

1193 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

1194 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

1197 #i‡
__HAVE_FLOAT16
 && 
deföed
 
__USE_GNU


1198 
	#M_Ef16
 
	`__f16
 (2.718281828459045235360287471352662498Ë

	)

1199 
	#M_LOG2Ef16
 
	`__f16
 (1.442695040888963407359924681001892137Ë

	)

1200 
	#M_LOG10Ef16
 
	`__f16
 (0.434294481903251827651128918916605082Ë

	)

1201 
	#M_LN2f16
 
	`__f16
 (0.693147180559945309417232121458176568Ë

	)

1202 
	#M_LN10f16
 
	`__f16
 (2.302585092994045684017991454684364208Ë

	)

1203 
	#M_PIf16
 
	`__f16
 (3.141592653589793238462643383279502884Ë

	)

1204 
	#M_PI_2f16
 
	`__f16
 (1.570796326794896619231321691639751442Ë

	)

1205 
	#M_PI_4f16
 
	`__f16
 (0.785398163397448309615660845819875721Ë

	)

1206 
	#M_1_PIf16
 
	`__f16
 (0.318309886183790671537767526745028724Ë

	)

1207 
	#M_2_PIf16
 
	`__f16
 (0.636619772367581343075535053490057448Ë

	)

1208 
	#M_2_SQRTPIf16
 
	`__f16
 (1.128379167095512573896158903121545172Ë

	)

1209 
	#M_SQRT2f16
 
	`__f16
 (1.414213562373095048801688724209698079Ë

	)

1210 
	#M_SQRT1_2f16
 
	`__f16
 (0.707106781186547524400844362104849039Ë

	)

1213 #i‡
__HAVE_FLOAT32
 && 
deföed
 
__USE_GNU


1214 
	#M_Ef32
 
	`__f32
 (2.718281828459045235360287471352662498Ë

	)

1215 
	#M_LOG2Ef32
 
	`__f32
 (1.442695040888963407359924681001892137Ë

	)

1216 
	#M_LOG10Ef32
 
	`__f32
 (0.434294481903251827651128918916605082Ë

	)

1217 
	#M_LN2f32
 
	`__f32
 (0.693147180559945309417232121458176568Ë

	)

1218 
	#M_LN10f32
 
	`__f32
 (2.302585092994045684017991454684364208Ë

	)

1219 
	#M_PIf32
 
	`__f32
 (3.141592653589793238462643383279502884Ë

	)

1220 
	#M_PI_2f32
 
	`__f32
 (1.570796326794896619231321691639751442Ë

	)

1221 
	#M_PI_4f32
 
	`__f32
 (0.785398163397448309615660845819875721Ë

	)

1222 
	#M_1_PIf32
 
	`__f32
 (0.318309886183790671537767526745028724Ë

	)

1223 
	#M_2_PIf32
 
	`__f32
 (0.636619772367581343075535053490057448Ë

	)

1224 
	#M_2_SQRTPIf32
 
	`__f32
 (1.128379167095512573896158903121545172Ë

	)

1225 
	#M_SQRT2f32
 
	`__f32
 (1.414213562373095048801688724209698079Ë

	)

1226 
	#M_SQRT1_2f32
 
	`__f32
 (0.707106781186547524400844362104849039Ë

	)

1229 #i‡
__HAVE_FLOAT64
 && 
deföed
 
__USE_GNU


1230 
	#M_Ef64
 
	`__f64
 (2.718281828459045235360287471352662498Ë

	)

1231 
	#M_LOG2Ef64
 
	`__f64
 (1.442695040888963407359924681001892137Ë

	)

1232 
	#M_LOG10Ef64
 
	`__f64
 (0.434294481903251827651128918916605082Ë

	)

1233 
	#M_LN2f64
 
	`__f64
 (0.693147180559945309417232121458176568Ë

	)

1234 
	#M_LN10f64
 
	`__f64
 (2.302585092994045684017991454684364208Ë

	)

1235 
	#M_PIf64
 
	`__f64
 (3.141592653589793238462643383279502884Ë

	)

1236 
	#M_PI_2f64
 
	`__f64
 (1.570796326794896619231321691639751442Ë

	)

1237 
	#M_PI_4f64
 
	`__f64
 (0.785398163397448309615660845819875721Ë

	)

1238 
	#M_1_PIf64
 
	`__f64
 (0.318309886183790671537767526745028724Ë

	)

1239 
	#M_2_PIf64
 
	`__f64
 (0.636619772367581343075535053490057448Ë

	)

1240 
	#M_2_SQRTPIf64
 
	`__f64
 (1.128379167095512573896158903121545172Ë

	)

1241 
	#M_SQRT2f64
 
	`__f64
 (1.414213562373095048801688724209698079Ë

	)

1242 
	#M_SQRT1_2f64
 
	`__f64
 (0.707106781186547524400844362104849039Ë

	)

1245 #i‡
__HAVE_FLOAT128
 && 
deföed
 
__USE_GNU


1246 
	#M_Ef128
 
	`__f128
 (2.718281828459045235360287471352662498Ë

	)

1247 
	#M_LOG2Ef128
 
	`__f128
 (1.442695040888963407359924681001892137Ë

	)

1248 
	#M_LOG10Ef128
 
	`__f128
 (0.434294481903251827651128918916605082Ë

	)

1249 
	#M_LN2f128
 
	`__f128
 (0.693147180559945309417232121458176568Ë

	)

1250 
	#M_LN10f128
 
	`__f128
 (2.302585092994045684017991454684364208Ë

	)

1251 
	#M_PIf128
 
	`__f128
 (3.141592653589793238462643383279502884Ë

	)

1252 
	#M_PI_2f128
 
	`__f128
 (1.570796326794896619231321691639751442Ë

	)

1253 
	#M_PI_4f128
 
	`__f128
 (0.785398163397448309615660845819875721Ë

	)

1254 
	#M_1_PIf128
 
	`__f128
 (0.318309886183790671537767526745028724Ë

	)

1255 
	#M_2_PIf128
 
	`__f128
 (0.636619772367581343075535053490057448Ë

	)

1256 
	#M_2_SQRTPIf128
 
	`__f128
 (1.128379167095512573896158903121545172Ë

	)

1257 
	#M_SQRT2f128
 
	`__f128
 (1.414213562373095048801688724209698079Ë

	)

1258 
	#M_SQRT1_2f128
 
	`__f128
 (0.707106781186547524400844362104849039Ë

	)

1261 #i‡
__HAVE_FLOAT32X
 && 
deföed
 
__USE_GNU


1262 
	#M_Ef32x
 
	`__f32x
 (2.718281828459045235360287471352662498Ë

	)

1263 
	#M_LOG2Ef32x
 
	`__f32x
 (1.442695040888963407359924681001892137Ë

	)

1264 
	#M_LOG10Ef32x
 
	`__f32x
 (0.434294481903251827651128918916605082Ë

	)

1265 
	#M_LN2f32x
 
	`__f32x
 (0.693147180559945309417232121458176568Ë

	)

1266 
	#M_LN10f32x
 
	`__f32x
 (2.302585092994045684017991454684364208Ë

	)

1267 
	#M_PIf32x
 
	`__f32x
 (3.141592653589793238462643383279502884Ë

	)

1268 
	#M_PI_2f32x
 
	`__f32x
 (1.570796326794896619231321691639751442Ë

	)

1269 
	#M_PI_4f32x
 
	`__f32x
 (0.785398163397448309615660845819875721Ë

	)

1270 
	#M_1_PIf32x
 
	`__f32x
 (0.318309886183790671537767526745028724Ë

	)

1271 
	#M_2_PIf32x
 
	`__f32x
 (0.636619772367581343075535053490057448Ë

	)

1272 
	#M_2_SQRTPIf32x
 
	`__f32x
 (1.128379167095512573896158903121545172Ë

	)

1273 
	#M_SQRT2f32x
 
	`__f32x
 (1.414213562373095048801688724209698079Ë

	)

1274 
	#M_SQRT1_2f32x
 
	`__f32x
 (0.707106781186547524400844362104849039Ë

	)

1277 #i‡
__HAVE_FLOAT64X
 && 
deföed
 
__USE_GNU


1278 
	#M_Ef64x
 
	`__f64x
 (2.718281828459045235360287471352662498Ë

	)

1279 
	#M_LOG2Ef64x
 
	`__f64x
 (1.442695040888963407359924681001892137Ë

	)

1280 
	#M_LOG10Ef64x
 
	`__f64x
 (0.434294481903251827651128918916605082Ë

	)

1281 
	#M_LN2f64x
 
	`__f64x
 (0.693147180559945309417232121458176568Ë

	)

1282 
	#M_LN10f64x
 
	`__f64x
 (2.302585092994045684017991454684364208Ë

	)

1283 
	#M_PIf64x
 
	`__f64x
 (3.141592653589793238462643383279502884Ë

	)

1284 
	#M_PI_2f64x
 
	`__f64x
 (1.570796326794896619231321691639751442Ë

	)

1285 
	#M_PI_4f64x
 
	`__f64x
 (0.785398163397448309615660845819875721Ë

	)

1286 
	#M_1_PIf64x
 
	`__f64x
 (0.318309886183790671537767526745028724Ë

	)

1287 
	#M_2_PIf64x
 
	`__f64x
 (0.636619772367581343075535053490057448Ë

	)

1288 
	#M_2_SQRTPIf64x
 
	`__f64x
 (1.128379167095512573896158903121545172Ë

	)

1289 
	#M_SQRT2f64x
 
	`__f64x
 (1.414213562373095048801688724209698079Ë

	)

1290 
	#M_SQRT1_2f64x
 
	`__f64x
 (0.707106781186547524400844362104849039Ë

	)

1293 #i‡
__HAVE_FLOAT128X
 && 
deföed
 
__USE_GNU


1297 #ifde‡
__USE_ISOC99


1298 #i‡
__GNUC_PREREQ
 (3, 1)

1305 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

1306 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

1307 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

1308 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

1309 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

1310 
	#isun‹dîed
(
x
, 
y
Ë
	`__buûtö_isun‹dîed
(x, y)

	)

1312 
	#isgª©î
(
x
, 
y
) \

1313 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1314 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; }))

	)

1315 
	#isgª©îequÆ
(
x
, 
y
) \

1316 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1317 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

1318 
	#i¶ess
(
x
, 
y
) \

1319 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1320 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

1321 
	#i¶es£quÆ
(
x
, 
y
) \

1322 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1323 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

1324 
	#i¶essgª©î
(
x
, 
y
) \

1325 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1326 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x !__y; }))

	)

1328 
	#isun‹dîed
(
x
, 
y
) \

1329 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__u
 = (x); __ty≥of__ (
y
Ë
__v
 = (y); \

1330 
__u
 !
__v
 && (__u !__u || __v !__v); }))

	)

1334 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

1337 #i‡
__FLT_EVAL_METHOD__
 == 2 || __FLT_EVAL_METHOD__ > 64

1338 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0L)

	)

1339 #ñi‡
__FLT_EVAL_METHOD__
 == 1 || __FLT_EVAL_METHOD__ > 32

1340 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0)

	)

1341 #ñi‡
__FLT_EVAL_METHOD__
 == 0 || __FLT_EVAL_METHOD__ == 32

1342 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0f)

	)

1344 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (y))

	)

1349 #i‡!
deföed
 
__˝lu•lus
 || (__˝lu•lu†< 201103L && !deföed 
__GNUC__
)

1350 
	#i£qsig
(
x
, 
y
) \

1351 
	`__MATH_TG
 (
	`__MATH_EVAL_FMT2
 (
x
, 
y
), 
__i£qsig
, ((x), (y)))

	)

1364 
ãm∂©e
<
ty≥«me
> 
__i£qsig_ty≥
;

1366 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1368 
__ˇŒ
 (
__x
, 
__y
Ë
throw
 ()

1370  
__i£qsigf
 (
__x
, 
__y
);

1374 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1376 
__ˇŒ
 (
__x
, 
__y
Ë
throw
 ()

1378  
__i£qsig
 (
__x
, 
__y
);

1382 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1384 
__ˇŒ
 (
__x
, 
__y
Ë
throw
 ()

1386 #i‚de‡
__NO_LONG_DOUBLE_MATH


1387  
__i£qsigl
 (
__x
, 
__y
);

1389  
__i£qsig
 (
__x
, 
__y
);

1394 #i‡
__HAVE_FLOAT128_UNLIKE_LDBL


1397 
ãm∂©e
<> 
__i£qsig_ty≥
<
_Flﬂt128
>

1399 
__ˇŒ
 (
_Flﬂt128
 
__x
, _Flﬂt128 
__y
Ë
throw
 ()

1401  
__i£qsigf128
 (
__x
, 
__y
);

1406 
ãm∂©e
<
ty≥«me
 
_T1
,Åy≥«mê
_T2
>

1407 
ölöe
 

1408 
i£qsig
 (
_T1
 
__x
, 
_T2
 
__y
Ë
throw
 ()

1410 #i‡
__˝lu•lus
 >= 201103L

1411 
de˛ty≥
 (
	t__MATH_EVAL_FMT2
 (
	t__x
, 
	t__y
)Ë
	t_T3
;

1413 
__ty≥of
 (
	t__MATH_EVAL_FMT2
 (
	t__x
, 
	t__y
)Ë
	t_T3
;

1415  
__i£qsig_ty≥
<
_T3
>::
__ˇŒ
 (
__x
, 
__y
);

1423 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 
	#_STDLIB_H
 1

	)

38 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


40 
	~<bôs/waôÊags.h
>

41 
	~<bôs/waô°©us.h
>

44 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (°©us)

	)

45 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (°©us)

	)

46 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (°©us)

	)

47 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (°©us)

	)

48 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (°©us)

	)

49 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (°©us)

	)

50 #ifde‡
__WIFCONTINUED


51 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (°©us)

	)

56 
	~<bôs/Êﬂä.h
>

61 
	mquŸ
;

62 
	mªm
;

63 } 
	tdiv_t
;

66 #i‚de‡
__ldiv_t_deföed


69 
	mquŸ
;

70 
	mªm
;

71 } 
	tldiv_t
;

72 
	#__ldiv_t_deföed
 1

	)

75 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


77 
__exãnsi⁄__
 struct

79 
	mquŸ
;

80 
	mªm
;

81 } 
	tŒdiv_t
;

82 
	#__Œdiv_t_deföed
 1

	)

87 
	#RAND_MAX
 2147483647

	)

92 
	#EXIT_FAILURE
 1

	)

93 
	#EXIT_SUCCESS
 0

	)

97 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

98 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

102 
	$©of
 (c⁄° *
__≈å
)

103 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

105 
	$©oi
 (c⁄° *
__≈å
)

106 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

108 
	$©ﬁ
 (c⁄° *
__≈å
)

109 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

111 #ifde‡
__USE_ISOC99


113 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

114 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

118 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

119 **
__ª°ri˘
 
__íd±r
)

120 
__THROW
 
	`__n⁄nuŒ
 ((1));

122 #ifdef 
__USE_ISOC99


124 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

125 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

127 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

128 **
__ª°ri˘
 
__íd±r
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1));

134 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

135 
_Flﬂt16
 
	$°πof16
 (c⁄° *
__ª°ri˘
 
__≈å
,

136 **
__ª°ri˘
 
__íd±r
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1));

140 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

141 
_Flﬂt32
 
	$°πof32
 (c⁄° *
__ª°ri˘
 
__≈å
,

142 **
__ª°ri˘
 
__íd±r
)

143 
__THROW
 
	`__n⁄nuŒ
 ((1));

146 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

147 
_Flﬂt64
 
	$°πof64
 (c⁄° *
__ª°ri˘
 
__≈å
,

148 **
__ª°ri˘
 
__íd±r
)

149 
__THROW
 
	`__n⁄nuŒ
 ((1));

152 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

153 
_Flﬂt128
 
	$°πof128
 (c⁄° *
__ª°ri˘
 
__≈å
,

154 **
__ª°ri˘
 
__íd±r
)

155 
__THROW
 
	`__n⁄nuŒ
 ((1));

158 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

159 
_Flﬂt32x
 
	$°πof32x
 (c⁄° *
__ª°ri˘
 
__≈å
,

160 **
__ª°ri˘
 
__íd±r
)

161 
__THROW
 
	`__n⁄nuŒ
 ((1));

164 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

165 
_Flﬂt64x
 
	$°πof64x
 (c⁄° *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1));

170 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

171 
_Flﬂt128x
 
	$°πof128x
 (c⁄° *
__ª°ri˘
 
__≈å
,

172 **
__ª°ri˘
 
__íd±r
)

173 
__THROW
 
	`__n⁄nuŒ
 ((1));

177 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

178 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

179 
__THROW
 
	`__n⁄nuŒ
 ((1));

181 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

182 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

183 
__THROW
 
	`__n⁄nuŒ
 ((1));

185 #ifde‡
__USE_MISC


187 
__exãnsi⁄__


188 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1));

192 
__exãnsi⁄__


193 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

194 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

195 
__THROW
 
	`__n⁄nuŒ
 ((1));

198 #ifde‡
__USE_ISOC99


200 
__exãnsi⁄__


201 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 
__exãnsi⁄__


206 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

207 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

208 
__THROW
 
	`__n⁄nuŒ
 ((1));

212 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

213 
	$°r‰omd
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

214 
__f
)

215 
__THROW
 
	`__n⁄nuŒ
 ((3));

217 
	$°r‰omf
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

218 
__f
)

219 
__THROW
 
	`__n⁄nuŒ
 ((3));

221 
	$°r‰oml
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

222 
__f
)

223 
__THROW
 
	`__n⁄nuŒ
 ((3));

226 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

227 
	$°r‰omf16
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

228 
_Flﬂt16
 
__f
)

229 
__THROW
 
	`__n⁄nuŒ
 ((3));

232 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

233 
	$°r‰omf32
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

234 
_Flﬂt32
 
__f
)

235 
__THROW
 
	`__n⁄nuŒ
 ((3));

238 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

239 
	$°r‰omf64
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

240 
_Flﬂt64
 
__f
)

241 
__THROW
 
	`__n⁄nuŒ
 ((3));

244 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

245 
	$°r‰omf128
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

246 
_Flﬂt128
 
__f
)

247 
__THROW
 
	`__n⁄nuŒ
 ((3));

250 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

251 
	$°r‰omf32x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

252 
_Flﬂt32x
 
__f
)

253 
__THROW
 
	`__n⁄nuŒ
 ((3));

256 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

257 
	$°r‰omf64x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

258 
_Flﬂt64x
 
__f
)

259 
__THROW
 
	`__n⁄nuŒ
 ((3));

262 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

263 
	$°r‰omf128x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

264 
_Flﬂt128x
 
__f
)

265 
__THROW
 
	`__n⁄nuŒ
 ((3));

269 #ifde‡
__USE_GNU


273 
	~<bôs/ty≥s/loˇÀ_t.h
>

275 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

276 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

277 
loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

279 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

280 **
__ª°ri˘
 
__íd±r
,

281 
__ba£
, 
loˇÀ_t
 
__loc
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

284 
__exãnsi⁄__


285 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

286 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

287 
loˇÀ_t
 
__loc
)

288 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

290 
__exãnsi⁄__


291 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

292 **
__ª°ri˘
 
__íd±r
,

293 
__ba£
, 
loˇÀ_t
 
__loc
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

296 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

297 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

300 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

301 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

302 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

304 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

305 **
__ª°ri˘
 
__íd±r
,

306 
loˇÀ_t
 
__loc
)

307 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

309 #i‡
__HAVE_FLOAT16


310 
_Flﬂt16
 
	$°πof16_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

311 **
__ª°ri˘
 
__íd±r
,

312 
loˇÀ_t
 
__loc
)

313 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

316 #i‡
__HAVE_FLOAT32


317 
_Flﬂt32
 
	$°πof32_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

318 **
__ª°ri˘
 
__íd±r
,

319 
loˇÀ_t
 
__loc
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

323 #i‡
__HAVE_FLOAT64


324 
_Flﬂt64
 
	$°πof64_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

325 **
__ª°ri˘
 
__íd±r
,

326 
loˇÀ_t
 
__loc
)

327 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

330 #i‡
__HAVE_FLOAT128


331 
_Flﬂt128
 
	$°πof128_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

332 **
__ª°ri˘
 
__íd±r
,

333 
loˇÀ_t
 
__loc
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

337 #i‡
__HAVE_FLOAT32X


338 
_Flﬂt32x
 
	$°πof32x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

339 **
__ª°ri˘
 
__íd±r
,

340 
loˇÀ_t
 
__loc
)

341 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

344 #i‡
__HAVE_FLOAT64X


345 
_Flﬂt64x
 
	$°πof64x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

346 **
__ª°ri˘
 
__íd±r
,

347 
loˇÀ_t
 
__loc
)

348 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

351 #i‡
__HAVE_FLOAT128X


352 
_Flﬂt128x
 
	$°πof128x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

353 **
__ª°ri˘
 
__íd±r
,

354 
loˇÀ_t
 
__loc
)

355 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

360 #ifde‡
__USE_EXTERN_INLINES


361 
__exã∫_ölöe
 

362 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

364  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

365 
	}
}

366 
__exã∫_ölöe
 

367 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

369  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

370 
	}
}

372 #ifde‡
__USE_ISOC99


373 
__exãnsi⁄__
 
__exã∫_ölöe
 

374 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

376  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

377 
	}
}

382 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


386 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

389 
	$a64l
 (c⁄° *
__s
)

390 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

394 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


395 
	~<sys/ty≥s.h
>

402 
	$øndom
 (Ë
__THROW
;

405 
	$§™dom
 (
__£ed
Ë
__THROW
;

411 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

412 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

416 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

419 #ifde‡
__USE_MISC


424 
	søndom_d©a


426 
öt32_t
 *
Âå
;

427 
öt32_t
 *
Ωå
;

428 
öt32_t
 *
°©e
;

429 
ønd_ty≥
;

430 
ønd_deg
;

431 
ønd_£p
;

432 
öt32_t
 *
íd_±r
;

435 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

436 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

441 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

442 
size_t
 
__°©ñí
,

443 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

444 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

446 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

447 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

448 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$ønd
 (Ë
__THROW
;

456 
	$§™d
 (
__£ed
Ë
__THROW
;

458 #ifde‡
__USE_POSIX199506


460 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

464 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


468 
	$dønd48
 (Ë
__THROW
;

469 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

472 
	$Ã™d48
 (Ë
__THROW
;

473 
	$ƒ™d48
 (
__xsubi
[3])

474 
__THROW
 
	`__n⁄nuŒ
 ((1));

477 
	$mønd48
 (Ë
__THROW
;

478 
	$jønd48
 (
__xsubi
[3])

479 
__THROW
 
	`__n⁄nuŒ
 ((1));

482 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

483 *
	$£ed48
 (
__£ed16v
[3])

484 
__THROW
 
	`__n⁄nuŒ
 ((1));

485 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

487 #ifde‡
__USE_MISC


491 
	sdønd48_d©a


493 
__x
[3];

494 
__ﬁd_x
[3];

495 
__c
;

496 
__öô
;

497 
__exãnsi⁄__
 
__a
;

502 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

503 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

504 
	$î™d48_r
 (
__xsubi
[3],

505 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

506 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

509 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

510 *
__ª°ri˘
 
__ªsu…
)

511 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

512 
	$ƒ™d48_r
 (
__xsubi
[3],

513 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

514 *
__ª°ri˘
 
__ªsu…
)

515 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

518 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

519 *
__ª°ri˘
 
__ªsu…
)

520 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

521 
	$jønd48_r
 (
__xsubi
[3],

522 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

523 *
__ª°ri˘
 
__ªsu…
)

524 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

527 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

528 
__THROW
 
	`__n⁄nuŒ
 ((2));

530 
	$£ed48_r
 (
__£ed16v
[3],

531 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

533 
	$lc⁄g48_r
 (
__∑øm
[7],

534 
dønd48_d©a
 *
__buf„r
)

535 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

540 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


541 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

543 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

544 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((1, 2)Ë
__wur
;

551 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

552 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
 
	`__©åibuã_Æloc_size__
 ((2));

555 
	$‰ì
 (*
__±r
Ë
__THROW
;

557 #ifde‡
__USE_MISC


563 *
	$ªÆloˇºay
 (*
__±r
, 
size_t
 
__nmemb
, size_à
__size
)

564 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__


565 
	`__©åibuã_Æloc_size__
 ((2, 3))

566 
__©å_dóŒoc_‰ì
;

569 *
	$ªÆloˇºay
 (*
__±r
, 
size_t
 
__nmemb
, size_à
__size
)

570 
__THROW
 
	`__©å_dóŒoc
 (
ªÆloˇºay
, 1);

573 #ifde‡
__USE_MISC


574 
	~<Æloˇ.h
>

577 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

578 || 
deföed
 
__USE_MISC


580 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


581 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

584 #ifde‡
__USE_XOPEN2K


586 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

587 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

590 #ifde‡
__USE_ISOC11


592 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

593 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_Æign__
 ((1))

594 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

598 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

602 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

604 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


606 #ifde‡
__˝lu•lus


607 "C++" 
	$©_quick_exô
 ((*
__func
) ())

608 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

610 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

614 #ifdef 
__USE_MISC


617 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

618 
__THROW
 
	`__n⁄nuŒ
 ((1));

624 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

626 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


630 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

633 #ifde‡
__USE_ISOC99


636 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

641 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #ifde‡
__USE_GNU


646 *
	$£cuª_gëív
 (c⁄° *
__«me
)

647 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

650 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


654 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

657 #ifde‡
__USE_XOPEN2K


660 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

661 
__THROW
 
	`__n⁄nuŒ
 ((2));

664 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

667 #ifdef 
__USE_MISC


671 
	$˛óªnv
 (Ë
__THROW
;

675 #i‡
deföed
 
__USE_MISC
 \

676 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

682 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

685 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


694 #i‚de‡
__USE_FILE_OFFSET64


695 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

699 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

701 
	#mk°emp
 
mk°emp64


	)

704 #ifde‡
__USE_LARGEFILE64


705 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

709 #ifde‡
__USE_MISC


716 #i‚de‡
__USE_FILE_OFFSET64


717 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

719 #ifde‡
__REDIRECT


720 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

721 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

723 
	#mk°emps
 
mk°emps64


	)

726 #ifde‡
__USE_LARGEFILE64


727 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

728 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

732 #ifde‡
__USE_XOPEN2K8


738 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

741 #ifde‡
__USE_GNU


748 #i‚de‡
__USE_FILE_OFFSET64


749 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

751 #ifde‡
__REDIRECT


752 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

753 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

755 
	#mko°emp
 
mko°emp64


	)

758 #ifde‡
__USE_LARGEFILE64


759 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

768 #i‚de‡
__USE_FILE_OFFSET64


769 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

770 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

772 #ifde‡
__REDIRECT


773 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

774 
__Êags
), 
mko°emps64
)

775 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

777 
	#mko°emps
 
mko°emps64


	)

780 #ifde‡
__USE_LARGEFILE64


781 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

782 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

791 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

794 #ifdef 
__USE_GNU


797 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

798 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_mÆloc__


799 
__©å_dóŒoc_‰ì
 
__wur
;

802 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


808 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

809 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

814 #i‚de‡
__COMPAR_FN_T


815 
	#__COMPAR_FN_T


	)

816 (*
	t__com∑r_‚_t
) (const *, const *);

818 #ifdef 
__USE_GNU


819 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

822 #ifde‡
__USE_GNU


823 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

828 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

829 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

830 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

832 #ifde‡
__USE_EXTERN_INLINES


833 
	~<bôs/°dlib-b£¨ch.h
>

838 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

839 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

840 #ifde‡
__USE_GNU


841 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

842 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

843 
	`__n⁄nuŒ
 ((1, 4));

848 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

849 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

851 #ifde‡
__USE_ISOC99


852 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

853 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

860 
div_t
 
	$div
 (
__numî
, 
__díom
)

861 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

862 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

863 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

865 #ifde‡
__USE_ISOC99


866 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

867 
__díom
)

868 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

872 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

873 || 
deföed
 
__USE_MISC


880 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

881 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

886 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

887 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

892 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

893 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

896 #ifde‡
__USE_MISC


898 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

899 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

900 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

901 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

902 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

903 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

904 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

905 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

910 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

911 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

912 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

913 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

914 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

915 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

917 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

918 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

919 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

920 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

921 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

922 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

923 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

924 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

930 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

933 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

934 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

937 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

941 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

942 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW


943 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2));

945 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

946 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

947 
__THROW


948 
	$__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 3)

949 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2));

951 #ifde‡
__USE_MISC


956 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

960 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


967 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

968 *c⁄° *
__ª°ri˘
 
__tokís
,

969 **
__ª°ri˘
 
__vÆuï
)

970 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

976 #ifde‡
__USE_XOPEN2KXSI


978 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

981 #ifde‡
__USE_XOPEN_EXTENDED


986 
	$gø¡±
 (
__fd
Ë
__THROW
;

990 
	$u∆ock±
 (
__fd
Ë
__THROW
;

995 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

998 #ifde‡
__USE_GNU


1002 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

1006 
	`gë±
 ();

1009 #ifde‡
__USE_MISC


1013 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

1014 
__THROW
 
	`__n⁄nuŒ
 ((1));

1017 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K


1020 
	$ây¶Ÿ
 (Ë
__THROW
;

1023 
	~<bôs/°dlib-Êﬂt.h
>

1026 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1027 
	~<bôs/°dlib.h
>

1030 
	~<bôs/Êﬂä.h
>

1031 #i‡
deföed
 
__LDBL_COMPAT
 || 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

1032 
	~<bôs/°dlib-ldbl.h
>

1035 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 #i‡
deföed
 
__˝lu•lus
 && (
__GNUC_PREREQ
 (4, 4) \

37 || 
	$__glibc_˛™g_¥îeq
 (3, 5))

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

43 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

44 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

47 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

48 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || 
	`__GLIBC_USE
 (
ISOC2X
)

54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 4));

61 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

64 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

65 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

80 
	$__memcm≥q
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

81 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

84 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


87 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

88 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

89 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

90 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

92 #ifde‡
__OPTIMIZE__


93 
__exã∫_Æways_ölöe
 *

94 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


96  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

99 
__exã∫_Æways_ölöe
 const *

100 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


102  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

105 
	}
}

107 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

108 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__USE_GNU


114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

116 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

118 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

125 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


126 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

127 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1))

128 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 3));

129 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

130 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1))

131 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 3));

133 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

134 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1))

135 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 3));

141 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

142 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

144 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

145 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

146 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

149 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

150 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

152 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

153 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

156 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

157 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

159 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

160 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

163 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

164 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

166 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

167 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

168 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3));

170 #ifde‡
__USE_XOPEN2K8


172 
	~<bôs/ty≥s/loˇÀ_t.h
>

175 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__l
)

176 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

179 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

180 
loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4))

181 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3));

184 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8
 \

185 || 
	`__GLIBC_USE
 (
LIB_EXT2
Ë|| 
	$__GLIBC_USE
 (
ISOC2X
))

187 *
	$°rdup
 (c⁄° *
__s
)

188 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

194 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
Ë|| __GLIBC_USE (
ISOC2X
)

195 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

196 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

199 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


201 
	#°rdu∑
(
s
) \

202 (
__exãnsi⁄__
 \

204 c⁄° *
__ﬁd
 = (
s
); \

205 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

206 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

207 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

208 
	}
}))

	)

211 
	#°∫du∑
(
s
, 
n
) \

212 (
__exãnsi⁄__
 \

214 c⁄° *
__ﬁd
 = (
s
); \

215 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

216 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

217 
__√w
[
__Àn
] = '\0'; \

218 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

219 }))

	)

223 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


226 *
°rchr
 (*
__s
, 
__c
)

227 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

228 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

229 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

231 #ifde‡
__OPTIMIZE__


232 
__exã∫_Æways_ölöe
 *

233 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


235  
__buûtö_°rchr
 (
__s
, 
__c
);

238 
__exã∫_Æways_ölöe
 const *

239 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


241  
__buûtö_°rchr
 (
__s
, 
__c
);

246 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

247 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

250 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


253 *
	`°ºchr
 (*
__s
, 
__c
)

254 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

255 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

256 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

258 #ifde‡
__OPTIMIZE__


259 
__exã∫_Æways_ölöe
 *

260 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


262  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

265 
__exã∫_Æways_ölöe
 const *

266 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


268  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

271 
	}
}

273 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

274 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 #ifde‡
__USE_GNU


280 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


281 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

282 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

283 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

284 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

286 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

287 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

293 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

294 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

298 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

300 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


303 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

304 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

305 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

306 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

308 #ifde‡
__OPTIMIZE__


309 
__exã∫_Æways_ölöe
 *

310 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


312  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

315 
__exã∫_Æways_ölöe
 const *

316 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


318  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

321 
	}
}

323 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

324 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


330 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

331 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

332 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

333 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

335 #ifde‡
__OPTIMIZE__


336 
__exã∫_Æways_ölöe
 *

337 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


339  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

342 
__exã∫_Æways_ölöe
 const *

343 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


345  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

348 
	}
}

350 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

351 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

356 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2));

361 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

362 c⁄° *
__ª°ri˘
 
__dñim
,

363 **
__ª°ri˘
 
__ßve_±r
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

365 #ifde‡
__USE_POSIX


366 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

367 **
__ª°ri˘
 
__ßve_±r
)

368 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

371 #ifde‡
__USE_GNU


373 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


374 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

375 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

376 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

377 c⁄° *
__√edÀ
)

378 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

380 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

381 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

385 #ifde‡
__USE_GNU


389 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

390 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

391 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3))

392 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 2))

393 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 3, 4));

397 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

398 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

399 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

400 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

401 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

402 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

407 
size_t
 
	$°æí
 (c⁄° *
__s
)

408 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

410 #ifdef 
__USE_XOPEN2K8


413 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

414 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

419 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

420 #ifde‡
__USE_XOPEN2K


428 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


431 #ifde‡
__REDIRECT_NTH


432 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

433 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

434 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2))

435 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

437 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

438 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

439 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

444 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

445 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

448 #ifde‡
__USE_GNU


450 c⁄° *
	$°ªº‹desc_≈
 (
__îr
Ë
__THROW
;

452 c⁄° *
	$°ªº‹«me_≈
 (
__îr
Ë
__THROW
;

456 #ifde‡
__USE_XOPEN2K8


458 *
	$°ªº‹_l
 (
__î∫um
, 
loˇÀ_t
 
__l
Ë
__THROW
;

461 #ifde‡
__USE_MISC


462 
	~<°rögs.h
>

466 
	$ex∂icô_bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1))

467 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2);

471 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

472 c⁄° *
__ª°ri˘
 
__dñim
)

473 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

476 #ifdef 
__USE_XOPEN2K8


478 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

480 #ifde‡
__USE_GNU


482 c⁄° *
	$sigabbªv_≈
 (
__sig
Ë
__THROW
;

485 c⁄° *
	$sigdes¸_≈
 (
__sig
Ë
__THROW
;

489 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

490 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

491 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

492 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

496 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

497 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

498 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

499 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

500 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

501 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

504 #ifdef 
__USE_GNU


506 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

507 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

510 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

513 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1))

514 
	`__©å_ac˚ss
 ((
__ªad_wrôe__
, 1, 2));

516 #i‚de‡
ba£«me


521 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


522 "C++" *
	$ba£«me
 (*
__fûíame
)

523 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

524 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

525 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

527 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

532 #i‡
	`__GNUC_PREREQ
 (3,4)

533 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


535 
	~<bôs/°rög_f‹tifõd.h
>

539 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/bits/floatn.h

19 #i‚de‡
_BITS_FLOATN_H


20 
	#_BITS_FLOATN_H


	)

22 
	~<„©uªs.h
>

29 #i‡(
deföed
 
__x86_64__
 \

30 ? 
__GNUC_PREREQ
 (4, 3) \

31 : (
deföed
 
__GNU__
 ? 
	$__GNUC_PREREQ
 (4, 5Ë: 
	$__GNUC_PREREQ
 (4, 4)))

32 
	#__HAVE_FLOAT128
 1

	)

34 
	#__HAVE_FLOAT128
 0

	)

39 #i‡
__HAVE_FLOAT128


40 
	#__HAVE_DISTINCT_FLOAT128
 1

	)

42 
	#__HAVE_DISTINCT_FLOAT128
 0

	)

48 
	#__HAVE_FLOAT64X
 1

	)

54 
	#__HAVE_FLOAT64X_LONG_DOUBLE
 1

	)

56 #i‚de‡
__ASSEMBLER__


60 #i‡
__HAVE_FLOAT128


61 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


63 
	#__f128
(
x
Ëx##
q


	)

65 
	#__f128
(
x
Ëx##
f128


	)

70 #i‡
__HAVE_FLOAT128


71 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


74 
_Com∂ex
 
	t__cÊﬂt128
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__TC__
)));

75 
	#__CFLOAT128
 
__cÊﬂt128


	)

77 
	#__CFLOAT128
 
_Com∂ex
 
_Flﬂt128


	)

82 #i‡
__HAVE_FLOAT128


85 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


86 
__Êﬂt128
 
	t_Flﬂt128
;

90 #i‡!
	`__GNUC_PREREQ
 (7, 0)

91 
	#__buûtö_huge_vÆf128
(Ë((
_Flﬂt128
Ë
	`__buûtö_huge_vÆ
 ())

	)

99 #i‡!
	`__GNUC_PREREQ
 (7, 0)

100 
	#__buûtö_c›ysignf128
 
__buûtö_c›ysignq


	)

101 
	#__buûtö_Ábsf128
 
__buûtö_Ábsq


	)

102 
	#__buûtö_öff128
(Ë((
_Flﬂt128
Ë
	`__buûtö_öf
 ())

	)

103 
	#__buûtö_«nf128
(
x
Ë((
_Flﬂt128
Ë
	`__buûtö_«n
 (x))

	)

104 
	#__buûtö_«nsf128
(
x
Ë((
_Flﬂt128
Ë
	`__buûtö_«ns
 (x))

	)

111 #i‡!
	`__GNUC_PREREQ
 (6, 0)

112 
	#__buûtö_signbôf128
 
__signbôf128


	)

119 
	~<bôs/Êﬂä-comm⁄.h
>

	@/usr/include/bits/flt-eval-method.h

19 #i‚de‡
_MATH_H


23 #ifde‡
__FLT_EVAL_METHOD__


24 #i‡
__FLT_EVAL_METHOD__
 == -1

25 
	#__GLIBC_FLT_EVAL_METHOD
 2

	)

27 
	#__GLIBC_FLT_EVAL_METHOD
 
__FLT_EVAL_METHOD__


	)

29 #ñi‡
deföed
 
__x86_64__


30 
	#__GLIBC_FLT_EVAL_METHOD
 0

	)

32 
	#__GLIBC_FLT_EVAL_METHOD
 2

	)

	@/usr/include/bits/fp-fast.h

19 #i‚de‡
_MATH_H


23 #ifde‡
__USE_ISOC99


27 #ifde‡
__FP_FAST_FMA


28 
	#FP_FAST_FMA
 1

	)

31 #ifde‡
__FP_FAST_FMAF


32 
	#FP_FAST_FMAF
 1

	)

35 #ifde‡
__FP_FAST_FMAL


36 
	#FP_FAST_FMAL
 1

	)

	@/usr/include/bits/fp-logb.h

19 #i‚de‡
_MATH_H


23 
	#__FP_LOGB0_IS_MIN
 1

	)

24 
	#__FP_LOGBNAN_IS_MIN
 1

	)

	@/usr/include/bits/iscanonical.h

19 #i‚de‡
_MATH_H


23 
	$__isˇn⁄iˇŒ
 (
__x
)

24 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

25 
	#__isˇn⁄iˇlf
(
x
Ë((Ë(
	`__ty≥of
 (x)Ë(x), 1)

	)

26 
	#__isˇn⁄iˇl
(
x
Ë((Ë(
	`__ty≥of
 (x)Ë(x), 1)

	)

27 #i‡
__HAVE_DISTINCT_FLOAT128


28 
	#__isˇn⁄iˇlf128
(
x
Ë((Ë(
	`__ty≥of
 (x)Ë(x), 1)

	)

37 #i‚de‡
__˝lu•lus


38 
	#isˇn⁄iˇl
(
x
Ë
	`__MATH_TG
 ((x), 
__isˇn⁄iˇl
, (x))

	)

47 
ölöe
 
	`isˇn⁄iˇl
 (
__vÆ
Ë{  
	`__isˇn⁄iˇlf
 (__val); }

48 
ölöe
 
	`isˇn⁄iˇl
 (
__vÆ
Ë{  
	`__isˇn⁄iˇl
 (__val); }

49 
ölöe
 
	`isˇn⁄iˇl
 (
__vÆ
Ë{  
	`__isˇn⁄iˇŒ
 (__val); }

50 #i‡
__HAVE_DISTINCT_FLOAT128


51 
ölöe
 
	`isˇn⁄iˇl
 (
_Flﬂt128
 
__vÆ
Ë{  
	`__isˇn⁄iˇlf128
 (__val); }

53 
	}
}

	@/usr/include/bits/libc-header-start.h

27 #i‚de‡
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


31 #unde‡
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


33 
	~<„©uªs.h
>

37 #unde‡
__GLIBC_USE_LIB_EXT2


38 #i‡(
deföed
 
__USE_GNU
 \

39 || (
deföed
 
	g__STDC_WANT_LIB_EXT2__
 && __STDC_WANT_LIB_EXT2__ > 0))

40 
	#__GLIBC_USE_LIB_EXT2
 1

	)

42 
	#__GLIBC_USE_LIB_EXT2
 0

	)

67 #unde‡
__GLIBC_USE_IEC_60559_BFP_EXT


68 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_BFP_EXT__


69 
	#__GLIBC_USE_IEC_60559_BFP_EXT
 1

	)

71 
	#__GLIBC_USE_IEC_60559_BFP_EXT
 0

	)

73 #unde‡
__GLIBC_USE_IEC_60559_BFP_EXT_C2X


74 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
Ë|| __GLIBC_USE (
ISOC2X
)

75 
	#__GLIBC_USE_IEC_60559_BFP_EXT_C2X
 1

	)

77 
	#__GLIBC_USE_IEC_60559_BFP_EXT_C2X
 0

	)

79 #unde‡
__GLIBC_USE_IEC_60559_EXT


80 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
Ë|| 
deföed
 
__STDC_WANT_IEC_60559_EXT__


81 
	#__GLIBC_USE_IEC_60559_EXT
 1

	)

83 
	#__GLIBC_USE_IEC_60559_EXT
 0

	)

90 #unde‡
__GLIBC_USE_IEC_60559_FUNCS_EXT


91 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_FUNCS_EXT__


92 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT
 1

	)

94 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT
 0

	)

96 #unde‡
__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X


97 #i‡
__GLIBC_USE
 (
IEC_60559_FUNCS_EXT
Ë|| __GLIBC_USE (
ISOC2X
)

98 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X
 1

	)

100 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X
 0

	)

105 #unde‡
__GLIBC_USE_IEC_60559_TYPES_EXT


106 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_TYPES_EXT__


107 
	#__GLIBC_USE_IEC_60559_TYPES_EXT
 1

	)

109 
	#__GLIBC_USE_IEC_60559_TYPES_EXT
 0

	)

	@/usr/include/bits/math-vector.h

19 #i‚de‡
_MATH_H


25 
	~<bôs/libm-simd-de˛-°ubs.h
>

27 #i‡
deföed
 
__x86_64__
 && deföed 
__FAST_MATH__


28 #i‡
deföed
 
_OPENMP
 && _OPENMP >= 201307

30 
	#__DECL_SIMD_x86_64
 
	`_Pøgma
 ("om∞de˛¨êsimdÇŸöbønch")

	)

31 #ñi‡
__GNUC_PREREQ
 (6,0)

33 
	#__DECL_SIMD_x86_64
 
	`__©åibuã__
 ((
	`__simd__
 ("nŸöbønch")))

	)

36 #ifde‡
__DECL_SIMD_x86_64


37 #unde‡
__DECL_SIMD_cos


38 
	#__DECL_SIMD_cos
 
__DECL_SIMD_x86_64


	)

39 #unde‡
__DECL_SIMD_cosf


40 
	#__DECL_SIMD_cosf
 
__DECL_SIMD_x86_64


	)

41 #unde‡
__DECL_SIMD_sö


42 
	#__DECL_SIMD_sö
 
__DECL_SIMD_x86_64


	)

43 #unde‡
__DECL_SIMD_söf


44 
	#__DECL_SIMD_söf
 
__DECL_SIMD_x86_64


	)

45 #unde‡
__DECL_SIMD_söcos


46 
	#__DECL_SIMD_söcos
 
__DECL_SIMD_x86_64


	)

47 #unde‡
__DECL_SIMD_söcosf


48 
	#__DECL_SIMD_söcosf
 
__DECL_SIMD_x86_64


	)

49 #unde‡
__DECL_SIMD_log


50 
	#__DECL_SIMD_log
 
__DECL_SIMD_x86_64


	)

51 #unde‡
__DECL_SIMD_logf


52 
	#__DECL_SIMD_logf
 
__DECL_SIMD_x86_64


	)

53 #unde‡
__DECL_SIMD_exp


54 
	#__DECL_SIMD_exp
 
__DECL_SIMD_x86_64


	)

55 #unde‡
__DECL_SIMD_expf


56 
	#__DECL_SIMD_expf
 
__DECL_SIMD_x86_64


	)

57 #unde‡
__DECL_SIMD_pow


58 
	#__DECL_SIMD_pow
 
__DECL_SIMD_x86_64


	)

59 #unde‡
__DECL_SIMD_powf


60 
	#__DECL_SIMD_powf
 
__DECL_SIMD_x86_64


	)

61 #unde‡
__DECL_SIMD_acos


62 
	#__DECL_SIMD_acos
 
__DECL_SIMD_x86_64


	)

63 #unde‡
__DECL_SIMD_acosf


64 
	#__DECL_SIMD_acosf
 
__DECL_SIMD_x86_64


	)

65 #unde‡
__DECL_SIMD_©™


66 
	#__DECL_SIMD_©™
 
__DECL_SIMD_x86_64


	)

67 #unde‡
__DECL_SIMD_©™f


68 
	#__DECL_SIMD_©™f
 
__DECL_SIMD_x86_64


	)

69 #unde‡
__DECL_SIMD_asö


70 
	#__DECL_SIMD_asö
 
__DECL_SIMD_x86_64


	)

71 #unde‡
__DECL_SIMD_asöf


72 
	#__DECL_SIMD_asöf
 
__DECL_SIMD_x86_64


	)

73 #unde‡
__DECL_SIMD_hypŸ


74 
	#__DECL_SIMD_hypŸ
 
__DECL_SIMD_x86_64


	)

75 #unde‡
__DECL_SIMD_hypŸf


76 
	#__DECL_SIMD_hypŸf
 
__DECL_SIMD_x86_64


	)

77 #unde‡
__DECL_SIMD_exp2


78 
	#__DECL_SIMD_exp2
 
__DECL_SIMD_x86_64


	)

79 #unde‡
__DECL_SIMD_exp2f


80 
	#__DECL_SIMD_exp2f
 
__DECL_SIMD_x86_64


	)

81 #unde‡
__DECL_SIMD_exp10


82 
	#__DECL_SIMD_exp10
 
__DECL_SIMD_x86_64


	)

83 #unde‡
__DECL_SIMD_exp10f


84 
	#__DECL_SIMD_exp10f
 
__DECL_SIMD_x86_64


	)

85 #unde‡
__DECL_SIMD_cosh


86 
	#__DECL_SIMD_cosh
 
__DECL_SIMD_x86_64


	)

87 #unde‡
__DECL_SIMD_coshf


88 
	#__DECL_SIMD_coshf
 
__DECL_SIMD_x86_64


	)

89 #unde‡
__DECL_SIMD_expm1


90 
	#__DECL_SIMD_expm1
 
__DECL_SIMD_x86_64


	)

91 #unde‡
__DECL_SIMD_expm1f


92 
	#__DECL_SIMD_expm1f
 
__DECL_SIMD_x86_64


	)

93 #unde‡
__DECL_SIMD_söh


94 
	#__DECL_SIMD_söh
 
__DECL_SIMD_x86_64


	)

95 #unde‡
__DECL_SIMD_söhf


96 
	#__DECL_SIMD_söhf
 
__DECL_SIMD_x86_64


	)

97 #unde‡
__DECL_SIMD_cbπ


98 
	#__DECL_SIMD_cbπ
 
__DECL_SIMD_x86_64


	)

99 #unde‡
__DECL_SIMD_cbπf


100 
	#__DECL_SIMD_cbπf
 
__DECL_SIMD_x86_64


	)

101 #unde‡
__DECL_SIMD_©™2


102 
	#__DECL_SIMD_©™2
 
__DECL_SIMD_x86_64


	)

103 #unde‡
__DECL_SIMD_©™2f


104 
	#__DECL_SIMD_©™2f
 
__DECL_SIMD_x86_64


	)

105 #unde‡
__DECL_SIMD_log10


106 
	#__DECL_SIMD_log10
 
__DECL_SIMD_x86_64


	)

107 #unde‡
__DECL_SIMD_log10f


108 
	#__DECL_SIMD_log10f
 
__DECL_SIMD_x86_64


	)

109 #unde‡
__DECL_SIMD_log2


110 
	#__DECL_SIMD_log2
 
__DECL_SIMD_x86_64


	)

111 #unde‡
__DECL_SIMD_log2f


112 
	#__DECL_SIMD_log2f
 
__DECL_SIMD_x86_64


	)

113 #unde‡
__DECL_SIMD_log1p


114 
	#__DECL_SIMD_log1p
 
__DECL_SIMD_x86_64


	)

115 #unde‡
__DECL_SIMD_log1pf


116 
	#__DECL_SIMD_log1pf
 
__DECL_SIMD_x86_64


	)

117 #unde‡
__DECL_SIMD_©™h


118 
	#__DECL_SIMD_©™h
 
__DECL_SIMD_x86_64


	)

119 #unde‡
__DECL_SIMD_©™hf


120 
	#__DECL_SIMD_©™hf
 
__DECL_SIMD_x86_64


	)

121 #unde‡
__DECL_SIMD_acosh


122 
	#__DECL_SIMD_acosh
 
__DECL_SIMD_x86_64


	)

123 #unde‡
__DECL_SIMD_acoshf


124 
	#__DECL_SIMD_acoshf
 
__DECL_SIMD_x86_64


	)

125 #unde‡
__DECL_SIMD_îf


126 
	#__DECL_SIMD_îf
 
__DECL_SIMD_x86_64


	)

127 #unde‡
__DECL_SIMD_îff


128 
	#__DECL_SIMD_îff
 
__DECL_SIMD_x86_64


	)

129 #unde‡
__DECL_SIMD_ènh


130 
	#__DECL_SIMD_ènh
 
__DECL_SIMD_x86_64


	)

131 #unde‡
__DECL_SIMD_ènhf


132 
	#__DECL_SIMD_ènhf
 
__DECL_SIMD_x86_64


	)

133 #unde‡
__DECL_SIMD_asöh


134 
	#__DECL_SIMD_asöh
 
__DECL_SIMD_x86_64


	)

135 #unde‡
__DECL_SIMD_asöhf


136 
	#__DECL_SIMD_asöhf
 
__DECL_SIMD_x86_64


	)

137 #unde‡
__DECL_SIMD_îfc


138 
	#__DECL_SIMD_îfc
 
__DECL_SIMD_x86_64


	)

139 #unde‡
__DECL_SIMD_îfcf


140 
	#__DECL_SIMD_îfcf
 
__DECL_SIMD_x86_64


	)

141 #unde‡
__DECL_SIMD_èn


142 
	#__DECL_SIMD_èn
 
__DECL_SIMD_x86_64


	)

143 #unde‡
__DECL_SIMD_ènf


144 
	#__DECL_SIMD_ènf
 
__DECL_SIMD_x86_64


	)

	@/usr/include/bits/mathcalls-helper-functions.h

20 
__MATHDECL_ALIAS
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
), 
Â˛assify
)

21 
__©åibuã__
 ((
__c⁄°__
));

24 
__MATHDECL_ALIAS
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
), 
signbô
)

25 
__©åibuã__
 ((
__c⁄°__
));

29 
__MATHDECL_ALIAS
 (, 
__isöf
,, (
_MdoubÀ_
 
__vÆue
), 
isöf
)

30 
__©åibuã__
 ((
__c⁄°__
));

33 
__MATHDECL_ALIAS
 (, 
__föôe
,, (
_MdoubÀ_
 
__vÆue
), 
föôe
)

34 
__©åibuã__
 ((
__c⁄°__
));

37 
__MATHDECL_ALIAS
 (, 
__i¢™
,, (
_MdoubÀ_
 
__vÆue
), 
i¢™
)

38 
__©åibuã__
 ((
__c⁄°__
));

41 
__MATHDECL_ALIAS
 (, 
__i£qsig
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), 
i£qsig
);

44 
__MATHDECL_ALIAS
 (, 
__issig«lög
,, (
_MdoubÀ_
 
__vÆue
), 
issig«lög
)

45 
__©åibuã__
 ((
__c⁄°__
));

	@/usr/include/bits/mathcalls-narrow.h

19 #i‚de‡
_MATH_H


24 
__MATHCALL_NARROW
 (
__MATHCALL_NAME
 (
add
), 
__MATHCALL_REDIR_NAME
 (add), 2);

27 
__MATHCALL_NARROW
 (
__MATHCALL_NAME
 (
div
), 
__MATHCALL_REDIR_NAME
 (div), 2);

30 
__MATHCALL_NARROW
 (
__MATHCALL_NAME
 (
fma
), 
__MATHCALL_REDIR_NAME2
 (fma), 3);

33 
__MATHCALL_NARROW
 (
__MATHCALL_NAME
 (
mul
), 
__MATHCALL_REDIR_NAME
 (mul), 2);

36 
__MATHCALL_NARROW
 (
__MATHCALL_NAME
 (
sqπ
), 
__MATHCALL_REDIR_NAME2
 (sqrt), 1);

39 
__MATHCALL_NARROW
 (
__MATHCALL_NAME
 (
sub
), 
__MATHCALL_REDIR_NAME
 (sub), 2);

	@/usr/include/bits/mathcalls.h

45 #i‚de‡
_MATH_H


53 
__MATHCALL_VEC
 (
acos
,, (
_MdoubÀ_
 
__x
));

55 
__MATHCALL_VEC
 (
asö
,, (
_MdoubÀ_
 
__x
));

57 
__MATHCALL_VEC
 (
©™
,, (
_MdoubÀ_
 
__x
));

59 
__MATHCALL_VEC
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

62 
__MATHCALL_VEC
 (
cos
,, (
_MdoubÀ_
 
__x
));

64 
__MATHCALL_VEC
 (
sö
,, (
_MdoubÀ_
 
__x
));

66 
__MATHCALL_VEC
 (
èn
,, (
_MdoubÀ_
 
__x
));

71 
__MATHCALL_VEC
 (
cosh
,, (
_MdoubÀ_
 
__x
));

73 
__MATHCALL_VEC
 (
söh
,, (
_MdoubÀ_
 
__x
));

75 
__MATHCALL_VEC
 (
ènh
,, (
_MdoubÀ_
 
__x
));

77 #ifde‡
__USE_GNU


79 
__MATHDECL_VEC
 (,
söcos
,,

80 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

83 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


85 
__MATHCALL_VEC
 (
acosh
,, (
_MdoubÀ_
 
__x
));

87 
__MATHCALL_VEC
 (
asöh
,, (
_MdoubÀ_
 
__x
));

89 
__MATHCALL_VEC
 (
©™h
,, (
_MdoubÀ_
 
__x
));

95 
__MATHCALL_VEC
 (
exp
,, (
_MdoubÀ_
 
__x
));

98 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

101 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

104 
__MATHCALL_VEC
 (
log
,, (
_MdoubÀ_
 
__x
));

107 
__MATHCALL_VEC
 (
log10
,, (
_MdoubÀ_
 
__x
));

110 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
)Ë
__n⁄nuŒ
 ((2));

112 #i‡
__GLIBC_USE
 (
IEC_60559_FUNCS_EXT_C2X
)

114 
__MATHCALL_VEC
 (
exp10
,, (
_MdoubÀ_
 
__x
));

117 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


119 
__MATHCALL_VEC
 (
expm1
,, (
_MdoubÀ_
 
__x
));

122 
__MATHCALL_VEC
 (
log1p
,, (
_MdoubÀ_
 
__x
));

125 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

128 #ifde‡
__USE_ISOC99


130 
__MATHCALL_VEC
 (
exp2
,, (
_MdoubÀ_
 
__x
));

133 
__MATHCALL_VEC
 (
log2
,, (
_MdoubÀ_
 
__x
));

140 
__MATHCALL_VEC
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

143 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

145 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99


147 
__MATHCALL_VEC
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

150 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


152 
__MATHCALL_VEC
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

159 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

162 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

165 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

168 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

170 #ifde‡
__USE_MISC


171 #i‡((!
deföed
 
__˝lu•lus
 \

172 || 
	g__˝lu•lus
 < 201103L \

173 || 
	g__MATH_DECLARING_DOUBLE
 == 0)) \

174 && !
__MATH_DECLARING_FLOATN


177 
__MATHDECL_ALIAS
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
), isinf)

178 
__©åibuã__
 ((
__c⁄°__
));

181 #i‡!
__MATH_DECLARING_FLOATN


183 
__MATHDECL_ALIAS
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
), finite)

184 
__©åibuã__
 ((
__c⁄°__
));

187 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

191 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

196 #ifde‡
__USE_ISOC99


198 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

201 #ifde‡
__USE_ISOC99


203 
__MATHCALL
 (
«n
,, (c⁄° *
__ègb
));

207 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

208 #i‡((!
deföed
 
__˝lu•lus
 \

209 || 
	g__˝lu•lus
 < 201103L \

210 || 
	g__MATH_DECLARING_DOUBLE
 == 0)) \

211 && !
__MATH_DECLARING_FLOATN


213 
__MATHDECL_ALIAS
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
), isnan)

214 
__©åibuã__
 ((
__c⁄°__
));

218 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && 
__MATH_DECLARING_DOUBLE
)

220 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

221 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

222 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

223 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

224 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

225 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99


231 
__MATHCALL_VEC
 (
îf
,, (
_MdoubÀ_
));

232 
__MATHCALL_VEC
 (
îfc
,, (
_MdoubÀ_
));

233 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

236 #ifde‡
__USE_ISOC99


238 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

241 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

242 #i‡!
__MATH_DECLARING_FLOATN


244 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

248 #ifde‡
__USE_MISC


252 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

256 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


259 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

262 
__MATHCALL
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

263 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT
 && !
__MATH_DECLARING_FLOATN


264 
__MATHCALL
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
));

267 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
Ë|| 
__MATH_DECLARING_FLOATN


269 
__MATHCALL
 (
√xtdown
,, (
_MdoubÀ_
 
__x
));

271 
__MATHCALL
 (
√xtup
,, (
_MdoubÀ_
 
__x
));

275 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

277 #ifde‡
__USE_ISOC99


279 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

283 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

286 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
Ë|| 
__MATH_DECLARING_FLOATN


288 
__MATHDECL
 (, 
Œogb
,, (
_MdoubÀ_
 
__x
));

291 #ifde‡
__USE_ISOC99


293 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

297 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

301 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

305 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

310 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

317 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

318 
__exãnsi⁄__


319 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

323 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

324 
__exãnsi⁄__


325 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

329 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

331 #i‡!
__MATH_DECLARING_FLOATN
 || 
deföed
 
__USE_GNU
 || !
__GLIBC_USE
 (
ISOC2X
)

333 
__MATHCALLX
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

336 
__MATHCALLX
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

340 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

343 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
Ë|| 
__MATH_DECLARING_FLOATN


345 
__MATHCALLX
 (
roundeví
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

349 
__MATHDECL
 (
__ötmax_t
, 
‰omÂ
,, (
_MdoubÀ_
 
__x
, 
__round
,

350 
__width
));

354 
__MATHDECL
 (
__uötmax_t
, 
u‰omÂ
,, (
_MdoubÀ_
 
__x
, 
__round
,

355 
__width
));

360 
__MATHDECL
 (
__ötmax_t
, 
‰omÂx
,, (
_MdoubÀ_
 
__x
, 
__round
,

361 
__width
));

366 
__MATHDECL
 (
__uötmax_t
, 
u‰omÂx
,, (
_MdoubÀ_
 
__x
, 
__round
,

367 
__width
));

370 
__MATHDECL_1
 (, 
ˇn⁄iˇlize
,, (
_MdoubÀ_
 *
__cx
, c⁄° _MdoubÀ_ *
__x
));

373 #i‡(
__GLIBC_USE
 (
IEC_60559_BFP_EXT
) \

374 || (
	g__MATH_DECLARING_FLOATN
 \

375 && (
deföed
 
	g__USE_GNU
 || !
	$__GLIBC_USE
 (
ISOC2X
))))

377 
	`__MATHCALLX
 (
fmaxmag
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

380 
	`__MATHCALLX
 (
fmömag
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

383 #i‡
	`__GLIBC_USE
 (
ISOC2X
)

385 
	`__MATHCALLX
 (
fmaximum
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

388 
	`__MATHCALLX
 (
fmöimum
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

391 
	`__MATHCALLX
 (
fmaximum_num
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

394 
	`__MATHCALLX
 (
fmöimum_num
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

397 
	`__MATHCALLX
 (
fmaximum_mag
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

400 
	`__MATHCALLX
 (
fmöimum_mag
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

403 
	`__MATHCALLX
 (
fmaximum_mag_num
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

406 
	`__MATHCALLX
 (
fmöimum_mag_num
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

409 #i‡
	`__GLIBC_USE
 (
IEC_60559_EXT
Ë|| 
__MATH_DECLARING_FLOATN


411 
	`__MATHDECL_1
 (, 
tŸÆ‹dî
,, (c⁄° 
_MdoubÀ_
 *
__x
,

412 c⁄° 
_MdoubÀ_
 *
__y
))

413 
__©åibuã_puª__
;

416 
	`__MATHDECL_1
 (, 
tŸÆ‹dîmag
,, (c⁄° 
_MdoubÀ_
 *
__x
,

417 c⁄° 
_MdoubÀ_
 *
__y
))

418 
__©åibuã_puª__
;

421 
	`__MATHCALL
 (
gë∑ylﬂd
,, (c⁄° 
_MdoubÀ_
 *
__x
));

424 
	`__MATHDECL_1
 (, 
£çaylﬂd
,, (
_MdoubÀ_
 *
__x
, _MdoubÀ_ 
__∑ylﬂd
));

427 
	`__MATHDECL_1
 (, 
£çaylﬂdsig
,, (
_MdoubÀ_
 *
__x
, _MdoubÀ_ 
__∑ylﬂd
));

430 #i‡(
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

431 && 
__MATH_DECLARING_DOUBLE
 \

432 && !
deföed
 
__USE_XOPEN2K8
)) \

433 && !
__MATH_DECLARING_FLOATN


435 
	`__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/stdlib-bsearch.h

19 
__exã∫_ölöe
 *

20 
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

21 
__com∑r_‚_t
 
__com∑r
)

23 
size_t
 
__l
, 
__u
, 
__idx
;

24 c⁄° *
__p
;

25 
__com∑ris⁄
;

27 
__l
 = 0;

28 
__u
 = 
__nmemb
;

29 
__l
 < 
__u
)

31 
__idx
 = (
__l
 + 
__u
) / 2;

32 
__p
 = (c⁄° *Ë(((c⁄° *Ë
__ba£
Ë+ (
__idx
 * 
__size
));

33 
__com∑ris⁄
 = (*
__com∑r
Ë(
__key
, 
__p
);

34 i‡(
__com∑ris⁄
 < 0)

35 
__u
 = 
__idx
;

36 i‡(
__com∑ris⁄
 > 0)

37 
__l
 = 
__idx
 + 1;

40 #i‡
	`__GNUC_PREREQ
(4, 6)

41 #¥agm®
GCC
 
dügno°ic
 
push


42 #¥agm®
GCC
 
dügno°ic
 
ign‹ed
 "-Wcast-qual"

44  (*Ë
__p
;

45 #i‡
	`__GNUC_PREREQ
(4, 6)

46 #¥agm®
GCC
 
dügno°ic
 
p›


51  
NULL
;

52 
	}
}

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__exã∫_ölöe
 

25 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

27  
	`°πod
 (
__≈å
, (**Ë
NULL
);

28 
	}
}

	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 #ifde‡
__LDBL_COMPAT


25 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
__°πoõì128
)

31 #ifde‡
__USE_GNU


32 #ifde‡
__LDBL_COMPAT


33 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

35 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
__°πoõì128_l
)

39 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

40 #ifde‡
__LDBL_COMPAT


41 
	$__LDBL_REDIR1_DECL
 (
°r‰oml
, 
°r‰omd
)

43 
	$__LDBL_REDIR1_DECL
 (
°r‰oml
, 
__°r‰omõì128
)

47 #ifde‡
__USE_MISC


48 #i‡
deföed
 
__LDBL_COMPAT


49 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

50 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

51 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

52 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

53 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

54 #ñi‡
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

55 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
__qecvtõì128
)

56 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
__qfcvtõì128
)

57 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
__qgcvtõì128
)

58 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
__qecvtõì128_r
)

59 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
__qfcvtõì128_r
)

61 #îr‹ 
bôs
/
°dlib
-
ldbl
.
h
 
ö˛uded
 
whí
 
no
Üdb»
ªdúe˘i⁄s
 
¨e
 
ªquúed
.

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 
size_t
 
sz
 = 
	`__glibc_objsize
 (
__ªsﬁved
);

41 i‡(
sz
 =(
size_t
) -1)

42  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

44 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


45 i‡(
	`__glibc_unß„_Àn
 (
PATH_MAX
,  (), 
sz
))

46  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
sz
);

48  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
sz
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2))

54 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__f‹tify_fun˘i⁄
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67  
	`__glibc_f‹tify
 (
±¢ame_r
, 
__buÊí
,  (),

68 
	`__glibc_objsize
 (
__buf
),

69 
__fd
, 
__buf
, 
__buÊí
);

70 
	}
}

73 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

74 
__THROW
 
__wur
;

75 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

76 
w˘omb
Ë
__wur
;

78 
__f‹tify_fun˘i⁄
 
__wur
 

79 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

84 
	#__STDLIB_MB_LEN_MAX
 16

	)

85 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


88 i‡(
	`__glibc_objsize
 (
__s
Ë!(
size_t
) -1

89 && 
__STDLIB_MB_LEN_MAX
 > 
	`__glibc_objsize
 (
__s
))

90  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__glibc_objsize
 (__s));

91  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

92 
	}
}

95 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

96 c⁄° *
__ª°ri˘
 
__§c
,

97 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW


98 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3)Ë__©å_ac˚s†((
__ªad_⁄ly__
, 2));

99 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

100 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

101 c⁄° *
__ª°ri˘
 
__§c
,

102 
size_t
 
__Àn
), 
mb°owcs
)

103 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3)Ë__©å_ac˚s†((
__ªad_⁄ly__
, 2));

104 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

105 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

106 c⁄° *
__ª°ri˘
 
__§c
,

107 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

108 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

111 
__f‹tify_fun˘i⁄
 
size_t


112 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

113 
size_t
 
__Àn
))

115  
	`__glibc_f‹tify_n
 (
mb°owcs
, 
__Àn
,  (
wch¨_t
),

116 
	`__glibc_objsize
 (
__d°
),

117 
__d°
, 
__§c
, 
__Àn
);

118 
	}
}

121 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

122 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

123 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW


124 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3)Ë__©å_ac˚s†((
__ªad_⁄ly__
, 2));

125 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

126 (*
__ª°ri˘
 
__d°
,

127 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

128 
size_t
 
__Àn
), 
wc°ombs
)

129 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3)Ë__©å_ac˚s†((
__ªad_⁄ly__
, 2));

130 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

131 (*
__ª°ri˘
 
__d°
,

132 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

134 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

136 
__f‹tify_fun˘i⁄
 
size_t


137 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

138 
size_t
 
__Àn
))

140  
	`__glibc_f‹tify
 (
wc°ombs
, 
__Àn
,  (),

141 
	`__glibc_objsize
 (
__d°
),

142 
__d°
, 
__§c
, 
__Àn
);

143 
	}
}

	@/usr/include/bits/string_fortified.h

18 #i‚de‡
_BITS_STRING_FORTIFIED_H


19 
	#_BITS_STRING_FORTIFIED_H
 1

	)

21 #i‚de‡
_STRING_H


25 
__f‹tify_fun˘i⁄
 *

26 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

27 
size_t
 
__Àn
))

29  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
,

30 
	`__glibc_objsize0
 (
__de°
));

31 
	}
}

33 
__f‹tify_fun˘i⁄
 *

34 
__NTH
 (
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
))

36  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
,

37 
	`__glibc_objsize0
 (
__de°
));

38 
	}
}

40 #ifde‡
__USE_GNU


41 
__f‹tify_fun˘i⁄
 *

42 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__Àn
))

45  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
,

46 
	`__glibc_objsize0
 (
__de°
));

47 
	}
}

56 
__f‹tify_fun˘i⁄
 *

57 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

59  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
,

60 
	`__glibc_objsize0
 (
__de°
));

61 
	}
}

63 #ifde‡
__USE_MISC


64 
	~<bôs/°rögs_f‹tifõd.h
>

66 
	$__ex∂icô_bzîo_chk
 (*
__de°
, 
size_t
 
__Àn
, size_à
__de°Àn
)

67 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2);

69 
__f‹tify_fun˘i⁄
 

70 
	`__NTH
 (
	$ex∂icô_bzîo
 (*
__de°
, 
size_t
 
__Àn
))

72 
	`__ex∂icô_bzîo_chk
 (
__de°
, 
__Àn
, 
	`__glibc_objsize0
 (__dest));

73 
	}
}

76 
__f‹tify_fun˘i⁄
 *

77 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

79  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__glibc_objsize
 (__dest));

80 
	}
}

82 #ifde‡
__USE_XOPEN2K8


83 
__f‹tify_fun˘i⁄
 *

84 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

86  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__glibc_objsize
 (__dest));

87 
	}
}

91 
__f‹tify_fun˘i⁄
 *

92 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

93 
size_t
 
__Àn
))

95  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
,

96 
	`__glibc_objsize
 (
__de°
));

97 
	}
}

99 #ifde‡
__USE_XOPEN2K8


100 #i‡
__GNUC_PREREQ
 (4, 7Ë|| 
__glibc_˛™g_¥îeq
 (2, 6)

101 
__f‹tify_fun˘i⁄
 *

102 
__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

104  
	`__buûtö___°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
,

105 
	`__glibc_objsize
 (
__de°
));

106 
	}
}

108 *
	$__°≤˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

109 
size_t
 
__de°Àn
Ë
__THROW


110 
	`__f‹tifõd_©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3))

111 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2));

112 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
, c⁄° *
__§c
,

113 
size_t
 
__n
), 
°≤˝y
);

115 
__f‹tify_fun˘i⁄
 *

116 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

118 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

119 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿> 
	`__bos
 (
__de°
)))

120  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

121  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

122 
	}
}

127 
__f‹tify_fun˘i⁄
 *

128 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

130  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__glibc_objsize
 (__dest));

131 
	}
}

134 
__f‹tify_fun˘i⁄
 *

135 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

136 
size_t
 
__Àn
))

138  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
,

139 
	`__glibc_objsize
 (
__de°
));

140 
	}
}

	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/timesize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 
__öt8_t
 
	t__öt_Àa°8_t
;

53 
__uöt8_t
 
	t__uöt_Àa°8_t
;

54 
__öt16_t
 
	t__öt_Àa°16_t
;

55 
__uöt16_t
 
	t__uöt_Àa°16_t
;

56 
__öt32_t
 
	t__öt_Àa°32_t
;

57 
__uöt32_t
 
	t__uöt_Àa°32_t
;

58 
__öt64_t
 
	t__öt_Àa°64_t
;

59 
__uöt64_t
 
	t__uöt_Àa°64_t
;

62 #i‡
__WORDSIZE
 == 64

63 
	t__quad_t
;

64 
	t__u_quad_t
;

66 
__exãnsi⁄__
 
	t__quad_t
;

67 
__exãnsi⁄__
 
	t__u_quad_t
;

71 #i‡
__WORDSIZE
 == 64

72 
	t__ötmax_t
;

73 
	t__uötmax_t
;

75 
__exãnsi⁄__
 
	t__ötmax_t
;

76 
__exãnsi⁄__
 
	t__uötmax_t
;

109 
	#__S16_TYPE
 

	)

110 
	#__U16_TYPE
 

	)

111 
	#__S32_TYPE
 

	)

112 
	#__U32_TYPE
 

	)

113 
	#__SLONGWORD_TYPE
 

	)

114 
	#__ULONGWORD_TYPE
 

	)

115 #i‡
__WORDSIZE
 == 32

116 
	#__SQUAD_TYPE
 
__öt64_t


	)

117 
	#__UQUAD_TYPE
 
__uöt64_t


	)

118 
	#__SWORD_TYPE
 

	)

119 
	#__UWORD_TYPE
 

	)

120 
	#__SLONG32_TYPE
 

	)

121 
	#__ULONG32_TYPE
 

	)

122 
	#__S64_TYPE
 
__öt64_t


	)

123 
	#__U64_TYPE
 
__uöt64_t


	)

126 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

127 #ñi‡
__WORDSIZE
 == 64

128 
	t__SQUAD_TYPE
 

	)

129 
	t__UQUAD_TYPE
 

	)

130 
	t__SWORD_TYPE
 

	)

131 
	t__UWORD_TYPE
 

	)

132 
	t__SLONG32_TYPE
 

	)

133 
	t__ULONG32_TYPE
 

	)

134 
	t__S64_TYPE
 

	)

135 
	t__U64_TYPE
 

	)

137 
	t__STD_TYPE
 

	)

141 
	~<bôs/ty≥sizes.h
>

142 
	~<bôs/time64.h
>

145 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

146 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

147 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

148 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

149 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

150 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

151 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

152 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

153 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

154 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

155 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

156 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

157 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

158 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

159 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

160 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

161 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

162 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

163 
__STD_TYPE
 
__SUSECONDS64_T_TYPE
 
	g__su£c⁄ds64_t
;

165 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

166 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

169 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

172 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

175 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

180 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

181 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

184 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

185 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

188 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

189 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

192 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

194 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

197 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

199 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

203 
__off64_t
 
	t__loff_t
;

204 *
	t__ˇddr_t
;

207 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

210 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

215 
	t__sig_©omic_t
;

220 #i‡
__TIMESIZE
 =64 && 
deföed
 
__LIBC


221 
	#__time64_t
 
__time_t


	)

222 #ñi‡
__TIMESIZE
 != 64

223 
__STD_TYPE
 
__TIME64_T_TYPE
 
	g__time64_t
;

226 #unde‡
__STD_TYPE


	@/usr/include/bits/types/locale_t.h

19 #i‚de‡
_BITS_TYPES_LOCALE_T_H


20 
	#_BITS_TYPES_LOCALE_T_H
 1

	)

22 
	~<bôs/ty≥s/__loˇÀ_t.h
>

24 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

36 
	#__WNOTHREAD
 0x20000000

	)

38 
	#__WALL
 0x40000000

	)

39 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

126 #unde‡
__USE_ISOC11


127 #unde‡
__USE_ISOC99


128 #unde‡
__USE_ISOC95


129 #unde‡
__USE_ISOCXX11


130 #unde‡
__USE_POSIX


131 #unde‡
__USE_POSIX2


132 #unde‡
__USE_POSIX199309


133 #unde‡
__USE_POSIX199506


134 #unde‡
__USE_XOPEN


135 #unde‡
__USE_XOPEN_EXTENDED


136 #unde‡
__USE_UNIX98


137 #unde‡
__USE_XOPEN2K


138 #unde‡
__USE_XOPEN2KXSI


139 #unde‡
__USE_XOPEN2K8


140 #unde‡
__USE_XOPEN2K8XSI


141 #unde‡
__USE_LARGEFILE


142 #unde‡
__USE_LARGEFILE64


143 #unde‡
__USE_FILE_OFFSET64


144 #unde‡
__USE_MISC


145 #unde‡
__USE_ATFILE


146 #unde‡
__USE_DYNAMIC_STACK_SIZE


147 #unde‡
__USE_GNU


148 #unde‡
__USE_FORTIFY_LEVEL


149 #unde‡
__KERNEL_STRICT_NAMES


150 #unde‡
__GLIBC_USE_ISOC2X


151 #unde‡
__GLIBC_USE_DEPRECATED_GETS


152 #unde‡
__GLIBC_USE_DEPRECATED_SCANF


156 #i‚de‡
_LOOSE_KERNEL_NAMES


157 
	#__KERNEL_STRICT_NAMES


	)

167 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


168 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

169 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

171 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

178 #i‡
deföed
 
__˛™g_maj‹__
 && deföed 
__˛™g_mö‹__


179 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
) \

180 ((
__˛™g_maj‹__
 << 16Ë+ 
__˛™g_mö‹__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

182 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
Ë0

	)

186 
	#__GLIBC_USE
(
F
Ë
__GLIBC_USE_
 ## 
	)
F

192 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

193 && !
deföed
 
	g_DEFAULT_SOURCE


195 #unde‡
_DEFAULT_SOURCE


196 
	#_DEFAULT_SOURCE
 1

	)

200 #ifde‡
_GNU_SOURCE


201 #unde‡
_ISOC95_SOURCE


202 
	#_ISOC95_SOURCE
 1

	)

203 #unde‡
_ISOC99_SOURCE


204 
	#_ISOC99_SOURCE
 1

	)

205 #unde‡
_ISOC11_SOURCE


206 
	#_ISOC11_SOURCE
 1

	)

207 #unde‡
_ISOC2X_SOURCE


208 
	#_ISOC2X_SOURCE
 1

	)

209 #unde‡
_POSIX_SOURCE


210 
	#_POSIX_SOURCE
 1

	)

211 #unde‡
_POSIX_C_SOURCE


212 
	#_POSIX_C_SOURCE
 200809L

	)

213 #unde‡
_XOPEN_SOURCE


214 
	#_XOPEN_SOURCE
 700

	)

215 #unde‡
_XOPEN_SOURCE_EXTENDED


216 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

217 #unde‡
_LARGEFILE64_SOURCE


218 
	#_LARGEFILE64_SOURCE
 1

	)

219 #unde‡
_DEFAULT_SOURCE


220 
	#_DEFAULT_SOURCE
 1

	)

221 #unde‡
_ATFILE_SOURCE


222 
	#_ATFILE_SOURCE
 1

	)

223 #unde‡
_DYNAMIC_STACK_SIZE_SOURCE


224 
	#_DYNAMIC_STACK_SIZE_SOURCE
 1

	)

229 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

230 || (!
deföed
 
	g__STRICT_ANSI__
 \

231 && !
deföed
 
	g_ISOC99_SOURCE
 && !deföed 
	g_ISOC11_SOURCE
 \

232 && !
deföed
 
	g_ISOC2X_SOURCE
 \

233 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

234 && !
deföed
 
	g_XOPEN_SOURCE
))

235 #unde‡
_DEFAULT_SOURCE


236 
	#_DEFAULT_SOURCE
 1

	)

240 #i‡(
deföed
 
_ISOC2X_SOURCE
 \

241 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ > 201710L))

242 
	#__GLIBC_USE_ISOC2X
 1

	)

244 
	#__GLIBC_USE_ISOC2X
 0

	)

248 #i‡(
deföed
 
_ISOC11_SOURCE
 || deföed 
_ISOC2X_SOURCE
 \

249 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

250 
	#__USE_ISOC11
 1

	)

254 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

255 || 
deföed
 
_ISOC2X_SOURCE
 \

256 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

257 
	#__USE_ISOC99
 1

	)

261 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

262 || 
deföed
 
_ISOC2X_SOURCE
 \

263 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

264 
	#__USE_ISOC95
 1

	)

267 #ifde‡
__˝lu•lus


269 #i‡
__˝lu•lus
 >= 201703L

270 
	#__USE_ISOC11
 1

	)

274 #i‡
__˝lu•lus
 >201103L || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__


275 
	#__USE_ISOCXX11
 1

	)

276 
	#__USE_ISOC99
 1

	)

283 #ifde‡
_DEFAULT_SOURCE


284 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


285 
	#__USE_POSIX_IMPLICITLY
 1

	)

287 #unde‡
_POSIX_SOURCE


288 
	#_POSIX_SOURCE
 1

	)

289 #unde‡
_POSIX_C_SOURCE


290 
	#_POSIX_C_SOURCE
 200809L

	)

293 #i‡((!
deföed
 
__STRICT_ANSI__
 \

294 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

295 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

296 
	#_POSIX_SOURCE
 1

	)

297 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

298 
	#_POSIX_C_SOURCE
 2

	)

299 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

300 
	#_POSIX_C_SOURCE
 199506L

	)

301 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

302 
	#_POSIX_C_SOURCE
 200112L

	)

304 
	#_POSIX_C_SOURCE
 200809L

	)

306 
	#__USE_POSIX_IMPLICITLY
 1

	)

315 #i‡((!
deföed
 
_POSIX_C_SOURCE
 || (_POSIX_C_SOURCE - 0) < 199506L) \

316 && (
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE
))

317 
	#_POSIX_SOURCE
 1

	)

318 #unde‡
_POSIX_C_SOURCE


319 
	#_POSIX_C_SOURCE
 199506L

	)

322 #i‡(
deföed
 
_POSIX_SOURCE
 \

323 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

324 || 
deföed
 
_XOPEN_SOURCE
)

325 
	#__USE_POSIX
 1

	)

328 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


329 
	#__USE_POSIX2
 1

	)

332 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

333 
	#__USE_POSIX199309
 1

	)

336 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

337 
	#__USE_POSIX199506
 1

	)

340 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

341 
	#__USE_XOPEN2K
 1

	)

342 #unde‡
__USE_ISOC95


343 
	#__USE_ISOC95
 1

	)

344 #unde‡
__USE_ISOC99


345 
	#__USE_ISOC99
 1

	)

348 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

349 
	#__USE_XOPEN2K8
 1

	)

350 #unde‡
_ATFILE_SOURCE


351 
	#_ATFILE_SOURCE
 1

	)

354 #ifdef 
_XOPEN_SOURCE


355 
	#__USE_XOPEN
 1

	)

356 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

357 
	#__USE_XOPEN_EXTENDED
 1

	)

358 
	#__USE_UNIX98
 1

	)

359 #unde‡
_LARGEFILE_SOURCE


360 
	#_LARGEFILE_SOURCE
 1

	)

361 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

362 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

363 
	#__USE_XOPEN2K8
 1

	)

364 
	#__USE_XOPEN2K8XSI
 1

	)

366 
	#__USE_XOPEN2K
 1

	)

367 
	#__USE_XOPEN2KXSI
 1

	)

368 #unde‡
__USE_ISOC95


369 
	#__USE_ISOC95
 1

	)

370 #unde‡
__USE_ISOC99


371 
	#__USE_ISOC99
 1

	)

374 #ifde‡
_XOPEN_SOURCE_EXTENDED


375 
	#__USE_XOPEN_EXTENDED
 1

	)

380 #ifde‡
_LARGEFILE_SOURCE


381 
	#__USE_LARGEFILE
 1

	)

384 #ifde‡
_LARGEFILE64_SOURCE


385 
	#__USE_LARGEFILE64
 1

	)

388 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

389 
	#__USE_FILE_OFFSET64
 1

	)

392 
	~<„©uªs-time64.h
>

394 #i‡
deföed
 
_DEFAULT_SOURCE


395 
	#__USE_MISC
 1

	)

398 #ifdef 
_ATFILE_SOURCE


399 
	#__USE_ATFILE
 1

	)

402 #ifdef 
_DYNAMIC_STACK_SIZE_SOURCE


403 
	#__USE_DYNAMIC_STACK_SIZE
 1

	)

406 #ifdef 
_GNU_SOURCE


407 
	#__USE_GNU
 1

	)

410 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0

411 #i‡!
deföed
 
__OPTIMIZE__
 || __OPTIMIZE__ <= 0

412 #ñi‡!
__GNUC_PREREQ
 (4, 1)

413 #ñi‡
_FORTIFY_SOURCE
 > 2 && (
__glibc_˛™g_¥îeq
 (9, 0) \

414 || 
	$__GNUC_PREREQ
 (12, 0))

416 #i‡
_FORTIFY_SOURCE
 > 3

418 
	#__USE_FORTIFY_LEVEL
 3

	)

419 #ñi‡
_FORTIFY_SOURCE
 > 1

420 #i‡
_FORTIFY_SOURCE
 > 2

422 
	#__USE_FORTIFY_LEVEL
 2

	)

424 
	#__USE_FORTIFY_LEVEL
 1

	)

427 #i‚de‡
__USE_FORTIFY_LEVEL


428 
	#__USE_FORTIFY_LEVEL
 0

	)

435 #i‡
deföed
 
__˝lu•lus
 ? __˝lu•lu†>201402L : deföed 
__USE_ISOC11


436 
	#__GLIBC_USE_DEPRECATED_GETS
 0

	)

438 
	#__GLIBC_USE_DEPRECATED_GETS
 1

	)

453 #i‡(
deföed
 
__USE_GNU
 \

454 && (
deföed
 
__˝lu•lus
 \

455 ? (
__˝lu•lus
 < 201103L && !
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
) \

456 : (!
deföed
 
__STDC_VERSION__
 || __STDC_VERSION__ < 199901L)))

457 
	#__GLIBC_USE_DEPRECATED_SCANF
 1

	)

459 
	#__GLIBC_USE_DEPRECATED_SCANF
 0

	)

464 
	~<°dc-¥edef.h
>

472 #unde‡
__GNU_LIBRARY__


473 
	#__GNU_LIBRARY__
 6

	)

477 
	#__GLIBC__
 2

	)

478 
	#__GLIBC_MINOR__
 35

	)

480 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

481 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

484 #i‚de‡
__ASSEMBLER__


485 #i‚de‡
_SYS_CDEFS_H


486 
	~<sys/cdefs.h
>

491 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


492 
	#__USE_LARGEFILE
 1

	)

493 
	#__USE_LARGEFILE64
 1

	)

499 #i‡
	`__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

500 && !
deföed
 
__OPTIMIZE_SIZE__
 && !deföed 
__NO_INLINE__
 \

501 && 
deföed
 
__exã∫_ölöe


502 
	#__USE_EXTERN_INLINES
 1

	)

510 
	~<gnu/°ubs.h
>

	@/usr/include/strings.h

18 #i‚def 
_STRINGS_H


19 
	#_STRINGS_H
 1

	)

21 
	~<„©uªs.h
>

22 
	#__√ed_size_t


	)

23 
	~<°ddef.h
>

26 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

27 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

30 
	g__BEGIN_DECLS


32 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


34 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

35 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

38 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

39 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

42 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

45 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


48 *
	`ödex
 (*
__s
, 
__c
)

49 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

50 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

51 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

53 #i‡
deföed
 
__OPTIMIZE__


54 
__exã∫_Æways_ölöe
 *

55 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


57  
	`__buûtö_ödex
 (
__s
, 
__c
);

60 
__exã∫_Æways_ölöe
 const *

61 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


63  
	`__buûtö_ödex
 (
__s
, 
__c
);

66 
	}
}

68 *
	$ödex
 (c⁄° *
__s
, 
__c
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

73 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


76 *
	`rödex
 (*
__s
, 
__c
)

77 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

79 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #i‡
deföed
 
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


85  
	`__buûtö_rödex
 (
__s
, 
__c
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


91  
	`__buûtö_rödex
 (
__s
, 
__c
);

94 
	}
}

96 *
	$rödex
 (c⁄° *
__s
, 
__c
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

101 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


104 
	$ffs
 (
__i
Ë
__THROW
 
__©åibuã_c⁄°__
;

109 #ifdef 
__USE_MISC


110 
	$ff¶
 (
__l
Ë
__THROW
 
__©åibuã_c⁄°__
;

111 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

112 
__THROW
 
__©åibuã_c⁄°__
;

116 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

117 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

120 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

123 #ifdef 
__USE_XOPEN2K8


125 
	~<bôs/ty≥s/loˇÀ_t.h
>

128 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__loc
)

129 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

133 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

134 
size_t
 
__n
, 
loˇÀ_t
 
__loc
)

135 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

138 
__END_DECLS


140 #i‡
	`__GNUC_PREREQ
 (3,4Ë&& 
__USE_FORTIFY_LEVEL
 > 0 \

141 && 
deföed
 
__f‹tify_fun˘i⁄


143 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


144 
	~<bôs/°rögs_f‹tifõd.h
>

	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_MISC


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

42 
__loff_t
 
	tloff_t
;

45 #i‚de‡
__öo_t_deföed


46 #i‚de‡
__USE_FILE_OFFSET64


47 
__öo_t
 
	töo_t
;

49 
__öo64_t
 
	töo_t
;

51 
	#__öo_t_deföed


	)

53 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


54 
__öo64_t
 
	töo64_t
;

55 
	#__öo64_t_deföed


	)

58 #i‚de‡
__dev_t_deföed


59 
__dev_t
 
	tdev_t
;

60 
	#__dev_t_deföed


	)

63 #i‚de‡
__gid_t_deföed


64 
__gid_t
 
	tgid_t
;

65 
	#__gid_t_deföed


	)

68 #i‚de‡
__mode_t_deföed


69 
__mode_t
 
	tmode_t
;

70 
	#__mode_t_deföed


	)

73 #i‚de‡
__∆ök_t_deföed


74 
__∆ök_t
 
	t∆ök_t
;

75 
	#__∆ök_t_deföed


	)

78 #i‚de‡
__uid_t_deföed


79 
__uid_t
 
	tuid_t
;

80 
	#__uid_t_deföed


	)

83 #i‚de‡
__off_t_deföed


84 #i‚de‡
__USE_FILE_OFFSET64


85 
__off_t
 
	toff_t
;

87 
__off64_t
 
	toff_t
;

89 
	#__off_t_deföed


	)

91 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


92 
__off64_t
 
	toff64_t
;

93 
	#__off64_t_deföed


	)

96 #i‚de‡
__pid_t_deföed


97 
__pid_t
 
	tpid_t
;

98 
	#__pid_t_deföed


	)

101 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

102 && !
deföed
 
__id_t_deföed


103 
__id_t
 
	tid_t
;

104 
	#__id_t_deföed


	)

107 #i‚de‡
__ssize_t_deföed


108 
__ssize_t
 
	tssize_t
;

109 
	#__ssize_t_deföed


	)

112 #ifdef 
__USE_MISC


113 #i‚de‡
__daddr_t_deföed


114 
__daddr_t
 
	tdaddr_t
;

115 
__ˇddr_t
 
	tˇddr_t
;

116 
	#__daddr_t_deföed


	)

120 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


121 
__key_t
 
	tkey_t
;

122 
	#__key_t_deföed


	)

125 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


126 
	~<bôs/ty≥s/˛ock_t.h
>

128 
	~<bôs/ty≥s/˛ockid_t.h
>

129 
	~<bôs/ty≥s/time_t.h
>

130 
	~<bôs/ty≥s/timî_t.h
>

132 #ifde‡
__USE_XOPEN


133 #i‚de‡
__u£c⁄ds_t_deföed


134 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

135 
	#__u£c⁄ds_t_deföed


	)

137 #i‚de‡
__su£c⁄ds_t_deföed


138 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

139 
	#__su£c⁄ds_t_deföed


	)

143 
	#__√ed_size_t


	)

144 
	~<°ddef.h
>

146 #ifde‡
__USE_MISC


148 
	tul⁄g
;

149 
	tush‹t
;

150 
	tuöt
;

155 
	~<bôs/°döt-öä.h
>

158 
__uöt8_t
 
	tu_öt8_t
;

159 
__uöt16_t
 
	tu_öt16_t
;

160 
__uöt32_t
 
	tu_öt32_t
;

161 
__uöt64_t
 
	tu_öt64_t
;

163 #i‡
__GNUC_PREREQ
 (2, 7)

164 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

166 
	tªgi°î_t
;

171 
	#__BIT_TYPES_DEFINED__
 1

	)

174 #ifdef 
__USE_MISC


176 
	~<ídün.h
>

179 
	~<sys/£À˘.h
>

183 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

184 && !
deföed
 
__blksize_t_deföed


185 
__blksize_t
 
	tblksize_t
;

186 
	#__blksize_t_deföed


	)

190 #i‚de‡
__USE_FILE_OFFSET64


191 #i‚de‡
__blk˙t_t_deföed


192 
__blk˙t_t
 
	tblk˙t_t
;

193 
	#__blk˙t_t_deföed


	)

195 #i‚de‡
__fsblk˙t_t_deföed


196 
__fsblk˙t_t
 
	tfsblk˙t_t
;

197 
	#__fsblk˙t_t_deföed


	)

199 #i‚de‡
__fsfû˙t_t_deföed


200 
__fsfû˙t_t
 
	tfsfû˙t_t
;

201 
	#__fsfû˙t_t_deföed


	)

204 #i‚de‡
__blk˙t_t_deföed


205 
__blk˙t64_t
 
	tblk˙t_t
;

206 
	#__blk˙t_t_deföed


	)

208 #i‚de‡
__fsblk˙t_t_deföed


209 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

210 
	#__fsblk˙t_t_deföed


	)

212 #i‚de‡
__fsfû˙t_t_deföed


213 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

214 
	#__fsfû˙t_t_deföed


	)

218 #ifde‡
__USE_LARGEFILE64


219 
__blk˙t64_t
 
	tblk˙t64_t
;

220 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

221 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

226 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


227 
	~<bôs/±hªadty≥s.h
>

230 
	g__END_DECLS


	@/usr/include/bits/floatn-common.h

20 #i‚de‡
_BITS_FLOATN_COMMON_H


21 
	#_BITS_FLOATN_COMMON_H


	)

23 
	~<„©uªs.h
>

24 
	~<bôs/l⁄g-doubÀ.h
>

34 
	#__HAVE_FLOAT16
 0

	)

35 
	#__HAVE_FLOAT32
 1

	)

36 
	#__HAVE_FLOAT64
 1

	)

37 
	#__HAVE_FLOAT32X
 1

	)

38 
	#__HAVE_FLOAT128X
 0

	)

52 
	#__HAVE_DISTINCT_FLOAT16
 
__HAVE_FLOAT16


	)

53 
	#__HAVE_DISTINCT_FLOAT32
 0

	)

54 
	#__HAVE_DISTINCT_FLOAT64
 0

	)

55 
	#__HAVE_DISTINCT_FLOAT32X
 0

	)

56 
	#__HAVE_DISTINCT_FLOAT64X
 0

	)

57 
	#__HAVE_DISTINCT_FLOAT128X
 
__HAVE_FLOAT128X


	)

63 
	#__HAVE_FLOAT128_UNLIKE_LDBL
 (
__HAVE_DISTINCT_FLOAT128
 \

64 && 
__LDBL_MANT_DIG__
 !113)

	)

69 #i‡
__GNUC_PREREQ
 (7, 0Ë&& !
deföed
 
__˝lu•lus


70 
	#__HAVE_FLOATN_NOT_TYPEDEF
 1

	)

72 
	#__HAVE_FLOATN_NOT_TYPEDEF
 0

	)

75 #i‚de‡
__ASSEMBLER__


80 #i‡
__HAVE_FLOAT16


81 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


83 
	#__f16
(
x
Ë((
_Flﬂt16
Ëx##
f
)

	)

85 
	#__f16
(
x
Ëx##
f16


	)

89 #i‡
__HAVE_FLOAT32


90 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


91 
	#__f32
(
x
Ëx##
f


	)

93 
	#__f32
(
x
Ëx##
f32


	)

97 #i‡
__HAVE_FLOAT64


98 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


99 #ifde‡
__NO_LONG_DOUBLE_MATH


100 
	#__f64
(
x
Ëx##
l


	)

102 
	#__f64
(
x
Ë
	)
x

105 
	#__f64
(
x
Ëx##
f64


	)

109 #i‡
__HAVE_FLOAT32X


110 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


111 
	#__f32x
(
x
Ë
	)
x

113 
	#__f32x
(
x
Ëx##
f32x


	)

117 #i‡
__HAVE_FLOAT64X


118 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


119 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


120 
	#__f64x
(
x
Ëx##
l


	)

122 
	#__f64x
(
x
Ë
	`__f128
 (x)

	)

125 
	#__f64x
(
x
Ëx##
f64x


	)

129 #i‡
__HAVE_FLOAT128X


130 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


133 
	#__f128x
(
x
Ëx##
f128x


	)

138 #i‡
__HAVE_FLOAT16


139 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


140 
_Com∂ex
 
	t__cÊﬂt16
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HC__
)));

141 
	#__CFLOAT16
 
__cÊﬂt16


	)

143 
	#__CFLOAT16
 
_Com∂ex
 
_Flﬂt16


	)

147 #i‡
__HAVE_FLOAT32


148 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


149 
	#__CFLOAT32
 
_Com∂ex
 

	)

151 
	#__CFLOAT32
 
_Com∂ex
 
_Flﬂt32


	)

155 #i‡
__HAVE_FLOAT64


156 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


157 #ifde‡
__NO_LONG_DOUBLE_MATH


158 
	#__CFLOAT64
 
_Com∂ex
 

	)

160 
	#__CFLOAT64
 
_Com∂ex
 

	)

163 
	#__CFLOAT64
 
_Com∂ex
 
_Flﬂt64


	)

167 #i‡
__HAVE_FLOAT32X


168 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


169 
	#__CFLOAT32X
 
_Com∂ex
 

	)

171 
	#__CFLOAT32X
 
_Com∂ex
 
_Flﬂt32x


	)

175 #i‡
__HAVE_FLOAT64X


176 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


177 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


178 
	#__CFLOAT64X
 
_Com∂ex
 

	)

180 
	#__CFLOAT64X
 
__CFLOAT128


	)

183 
	#__CFLOAT64X
 
_Com∂ex
 
_Flﬂt64x


	)

187 #i‡
__HAVE_FLOAT128X


188 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


191 
	#__CFLOAT128X
 
_Com∂ex
 
_Flﬂt128x


	)

196 #i‡
__HAVE_FLOAT16


198 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


199 
	t_Flﬂt16
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HF__
)));

202 #i‡!
__GNUC_PREREQ
 (7, 0)

203 
	#__buûtö_huge_vÆf16
(Ë((
_Flﬂt16
Ë
	`__buûtö_huge_vÆ
 ())

	)

204 
	#__buûtö_öff16
(Ë((
_Flﬂt16
Ë
	`__buûtö_öf
 ())

	)

205 
	#__buûtö_«nf16
(
x
Ë((
_Flﬂt16
Ë
	`__buûtö_«n
 (x))

	)

206 
	#__buûtö_«nsf16
(
x
Ë((
_Flﬂt16
Ë
	`__buûtö_«ns
 (x))

	)

211 #i‡
__HAVE_FLOAT32


213 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


214 
	t_Flﬂt32
;

217 #i‡!
__GNUC_PREREQ
 (7, 0)

218 
	#__buûtö_huge_vÆf32
(Ë(
	`__buûtö_huge_vÆf
 ())

	)

219 
	#__buûtö_öff32
(Ë(
	`__buûtö_öff
 ())

	)

220 
	#__buûtö_«nf32
(
x
Ë(
	`__buûtö_«nf
 (x))

	)

221 
	#__buûtö_«nsf32
(
x
Ë(
	`__buûtö_«nsf
 (x))

	)

226 #i‡
__HAVE_FLOAT64


235 #ifde‡
__NO_LONG_DOUBLE_MATH


237 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


238 
	t_Flﬂt64
;

241 #i‡!
__GNUC_PREREQ
 (7, 0)

242 
	#__buûtö_huge_vÆf64
(Ë(
	`__buûtö_huge_vÆl
 ())

	)

243 
	#__buûtö_öff64
(Ë(
	`__buûtö_öÊ
 ())

	)

244 
	#__buûtö_«nf64
(
x
Ë(
	`__buûtö_«∆
 (x))

	)

245 
	#__buûtö_«nsf64
(
x
Ë(
	`__buûtö_«n¶
 (x))

	)

250 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


251 
	t_Flﬂt64
;

254 #i‡!
__GNUC_PREREQ
 (7, 0)

255 
	#__buûtö_huge_vÆf64
(Ë(
	`__buûtö_huge_vÆ
 ())

	)

256 
	#__buûtö_öff64
(Ë(
	`__buûtö_öf
 ())

	)

257 
	#__buûtö_«nf64
(
x
Ë(
	`__buûtö_«n
 (x))

	)

258 
	#__buûtö_«nsf64
(
x
Ë(
	`__buûtö_«ns
 (x))

	)

265 #i‡
__HAVE_FLOAT32X


267 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


268 
	t_Flﬂt32x
;

271 #i‡!
__GNUC_PREREQ
 (7, 0)

272 
	#__buûtö_huge_vÆf32x
(Ë(
	`__buûtö_huge_vÆ
 ())

	)

273 
	#__buûtö_öff32x
(Ë(
	`__buûtö_öf
 ())

	)

274 
	#__buûtö_«nf32x
(
x
Ë(
	`__buûtö_«n
 (x))

	)

275 
	#__buûtö_«nsf32x
(
x
Ë(
	`__buûtö_«ns
 (x))

	)

280 #i‡
__HAVE_FLOAT64X


282 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


284 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


285 
	t_Flﬂt64x
;

288 #i‡!
__GNUC_PREREQ
 (7, 0)

289 
	#__buûtö_huge_vÆf64x
(Ë(
	`__buûtö_huge_vÆl
 ())

	)

290 
	#__buûtö_öff64x
(Ë(
	`__buûtö_öÊ
 ())

	)

291 
	#__buûtö_«nf64x
(
x
Ë(
	`__buûtö_«∆
 (x))

	)

292 
	#__buûtö_«nsf64x
(
x
Ë(
	`__buûtö_«n¶
 (x))

	)

297 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


298 
_Flﬂt128
 
	t_Flﬂt64x
;

301 #i‡!
__GNUC_PREREQ
 (7, 0)

302 
	#__buûtö_huge_vÆf64x
(Ë(
	`__buûtö_huge_vÆf128
 ())

	)

303 
	#__buûtö_öff64x
(Ë(
	`__buûtö_öff128
 ())

	)

304 
	#__buûtö_«nf64x
(
x
Ë(
	`__buûtö_«nf128
 (x))

	)

305 
	#__buûtö_«nsf64x
(
x
Ë(
	`__buûtö_«nsf128
 (x))

	)

312 #i‡
__HAVE_FLOAT128X


314 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


318 #i‡!
__GNUC_PREREQ
 (7, 0)

319 
	#__buûtö_huge_vÆf128x
(Ë((
_Flﬂt128x
Ë
	`__buûtö_huge_vÆ
 ())

	)

320 
	#__buûtö_öff128x
(Ë((
_Flﬂt128x
Ë
	`__buûtö_öf
 ())

	)

321 
	#__buûtö_«nf128x
(
x
Ë((
_Flﬂt128x
Ë
	`__buûtö_«n
 (x))

	)

322 
	#__buûtö_«nsf128x
(
x
Ë((
_Flﬂt128x
Ë
	`__buûtö_«ns
 (x))

	)

	@/usr/include/bits/libm-simd-decl-stubs.h

19 #i‚de‡
_MATH_H


33 #i‚de‡
_BITS_LIBM_SIMD_DECL_STUBS_H


34 
	#_BITS_LIBM_SIMD_DECL_STUBS_H
 1

	)

36 
	#__DECL_SIMD_cos


	)

37 
	#__DECL_SIMD_cosf


	)

38 
	#__DECL_SIMD_co¶


	)

39 
	#__DECL_SIMD_cosf16


	)

40 
	#__DECL_SIMD_cosf32


	)

41 
	#__DECL_SIMD_cosf64


	)

42 
	#__DECL_SIMD_cosf128


	)

43 
	#__DECL_SIMD_cosf32x


	)

44 
	#__DECL_SIMD_cosf64x


	)

45 
	#__DECL_SIMD_cosf128x


	)

47 
	#__DECL_SIMD_sö


	)

48 
	#__DECL_SIMD_söf


	)

49 
	#__DECL_SIMD_söl


	)

50 
	#__DECL_SIMD_söf16


	)

51 
	#__DECL_SIMD_söf32


	)

52 
	#__DECL_SIMD_söf64


	)

53 
	#__DECL_SIMD_söf128


	)

54 
	#__DECL_SIMD_söf32x


	)

55 
	#__DECL_SIMD_söf64x


	)

56 
	#__DECL_SIMD_söf128x


	)

58 
	#__DECL_SIMD_söcos


	)

59 
	#__DECL_SIMD_söcosf


	)

60 
	#__DECL_SIMD_söco¶


	)

61 
	#__DECL_SIMD_söcosf16


	)

62 
	#__DECL_SIMD_söcosf32


	)

63 
	#__DECL_SIMD_söcosf64


	)

64 
	#__DECL_SIMD_söcosf128


	)

65 
	#__DECL_SIMD_söcosf32x


	)

66 
	#__DECL_SIMD_söcosf64x


	)

67 
	#__DECL_SIMD_söcosf128x


	)

69 
	#__DECL_SIMD_log


	)

70 
	#__DECL_SIMD_logf


	)

71 
	#__DECL_SIMD_logl


	)

72 
	#__DECL_SIMD_logf16


	)

73 
	#__DECL_SIMD_logf32


	)

74 
	#__DECL_SIMD_logf64


	)

75 
	#__DECL_SIMD_logf128


	)

76 
	#__DECL_SIMD_logf32x


	)

77 
	#__DECL_SIMD_logf64x


	)

78 
	#__DECL_SIMD_logf128x


	)

80 
	#__DECL_SIMD_exp


	)

81 
	#__DECL_SIMD_expf


	)

82 
	#__DECL_SIMD_ex∂


	)

83 
	#__DECL_SIMD_expf16


	)

84 
	#__DECL_SIMD_expf32


	)

85 
	#__DECL_SIMD_expf64


	)

86 
	#__DECL_SIMD_expf128


	)

87 
	#__DECL_SIMD_expf32x


	)

88 
	#__DECL_SIMD_expf64x


	)

89 
	#__DECL_SIMD_expf128x


	)

91 
	#__DECL_SIMD_pow


	)

92 
	#__DECL_SIMD_powf


	)

93 
	#__DECL_SIMD_powl


	)

94 
	#__DECL_SIMD_powf16


	)

95 
	#__DECL_SIMD_powf32


	)

96 
	#__DECL_SIMD_powf64


	)

97 
	#__DECL_SIMD_powf128


	)

98 
	#__DECL_SIMD_powf32x


	)

99 
	#__DECL_SIMD_powf64x


	)

100 
	#__DECL_SIMD_powf128x


	)

102 
	#__DECL_SIMD_acos


	)

103 
	#__DECL_SIMD_acosf


	)

104 
	#__DECL_SIMD_aco¶


	)

105 
	#__DECL_SIMD_acosf16


	)

106 
	#__DECL_SIMD_acosf32


	)

107 
	#__DECL_SIMD_acosf64


	)

108 
	#__DECL_SIMD_acosf128


	)

109 
	#__DECL_SIMD_acosf32x


	)

110 
	#__DECL_SIMD_acosf64x


	)

111 
	#__DECL_SIMD_acosf128x


	)

113 
	#__DECL_SIMD_©™


	)

114 
	#__DECL_SIMD_©™f


	)

115 
	#__DECL_SIMD_©™l


	)

116 
	#__DECL_SIMD_©™f16


	)

117 
	#__DECL_SIMD_©™f32


	)

118 
	#__DECL_SIMD_©™f64


	)

119 
	#__DECL_SIMD_©™f128


	)

120 
	#__DECL_SIMD_©™f32x


	)

121 
	#__DECL_SIMD_©™f64x


	)

122 
	#__DECL_SIMD_©™f128x


	)

124 
	#__DECL_SIMD_asö


	)

125 
	#__DECL_SIMD_asöf


	)

126 
	#__DECL_SIMD_asöl


	)

127 
	#__DECL_SIMD_asöf16


	)

128 
	#__DECL_SIMD_asöf32


	)

129 
	#__DECL_SIMD_asöf64


	)

130 
	#__DECL_SIMD_asöf128


	)

131 
	#__DECL_SIMD_asöf32x


	)

132 
	#__DECL_SIMD_asöf64x


	)

133 
	#__DECL_SIMD_asöf128x


	)

135 
	#__DECL_SIMD_hypŸ


	)

136 
	#__DECL_SIMD_hypŸf


	)

137 
	#__DECL_SIMD_hypŸl


	)

138 
	#__DECL_SIMD_hypŸf16


	)

139 
	#__DECL_SIMD_hypŸf32


	)

140 
	#__DECL_SIMD_hypŸf64


	)

141 
	#__DECL_SIMD_hypŸf128


	)

142 
	#__DECL_SIMD_hypŸf32x


	)

143 
	#__DECL_SIMD_hypŸf64x


	)

144 
	#__DECL_SIMD_hypŸf128x


	)

146 
	#__DECL_SIMD_exp2


	)

147 
	#__DECL_SIMD_exp2f


	)

148 
	#__DECL_SIMD_exp2l


	)

149 
	#__DECL_SIMD_exp2f16


	)

150 
	#__DECL_SIMD_exp2f32


	)

151 
	#__DECL_SIMD_exp2f64


	)

152 
	#__DECL_SIMD_exp2f128


	)

153 
	#__DECL_SIMD_exp2f32x


	)

154 
	#__DECL_SIMD_exp2f64x


	)

155 
	#__DECL_SIMD_exp2f128x


	)

157 
	#__DECL_SIMD_exp10


	)

158 
	#__DECL_SIMD_exp10f


	)

159 
	#__DECL_SIMD_exp10l


	)

160 
	#__DECL_SIMD_exp10f16


	)

161 
	#__DECL_SIMD_exp10f32


	)

162 
	#__DECL_SIMD_exp10f64


	)

163 
	#__DECL_SIMD_exp10f128


	)

164 
	#__DECL_SIMD_exp10f32x


	)

165 
	#__DECL_SIMD_exp10f64x


	)

166 
	#__DECL_SIMD_exp10f128x


	)

168 
	#__DECL_SIMD_cosh


	)

169 
	#__DECL_SIMD_coshf


	)

170 
	#__DECL_SIMD_coshl


	)

171 
	#__DECL_SIMD_coshf16


	)

172 
	#__DECL_SIMD_coshf32


	)

173 
	#__DECL_SIMD_coshf64


	)

174 
	#__DECL_SIMD_coshf128


	)

175 
	#__DECL_SIMD_coshf32x


	)

176 
	#__DECL_SIMD_coshf64x


	)

177 
	#__DECL_SIMD_coshf128x


	)

179 
	#__DECL_SIMD_expm1


	)

180 
	#__DECL_SIMD_expm1f


	)

181 
	#__DECL_SIMD_expm1l


	)

182 
	#__DECL_SIMD_expm1f16


	)

183 
	#__DECL_SIMD_expm1f32


	)

184 
	#__DECL_SIMD_expm1f64


	)

185 
	#__DECL_SIMD_expm1f128


	)

186 
	#__DECL_SIMD_expm1f32x


	)

187 
	#__DECL_SIMD_expm1f64x


	)

188 
	#__DECL_SIMD_expm1f128x


	)

190 
	#__DECL_SIMD_söh


	)

191 
	#__DECL_SIMD_söhf


	)

192 
	#__DECL_SIMD_söhl


	)

193 
	#__DECL_SIMD_söhf16


	)

194 
	#__DECL_SIMD_söhf32


	)

195 
	#__DECL_SIMD_söhf64


	)

196 
	#__DECL_SIMD_söhf128


	)

197 
	#__DECL_SIMD_söhf32x


	)

198 
	#__DECL_SIMD_söhf64x


	)

199 
	#__DECL_SIMD_söhf128x


	)

201 
	#__DECL_SIMD_cbπ


	)

202 
	#__DECL_SIMD_cbπf


	)

203 
	#__DECL_SIMD_cbπl


	)

204 
	#__DECL_SIMD_cbπf16


	)

205 
	#__DECL_SIMD_cbπf32


	)

206 
	#__DECL_SIMD_cbπf64


	)

207 
	#__DECL_SIMD_cbπf128


	)

208 
	#__DECL_SIMD_cbπf32x


	)

209 
	#__DECL_SIMD_cbπf64x


	)

210 
	#__DECL_SIMD_cbπf128x


	)

212 
	#__DECL_SIMD_©™2


	)

213 
	#__DECL_SIMD_©™2f


	)

214 
	#__DECL_SIMD_©™2l


	)

215 
	#__DECL_SIMD_©™2f16


	)

216 
	#__DECL_SIMD_©™2f32


	)

217 
	#__DECL_SIMD_©™2f64


	)

218 
	#__DECL_SIMD_©™2f128


	)

219 
	#__DECL_SIMD_©™2f32x


	)

220 
	#__DECL_SIMD_©™2f64x


	)

221 
	#__DECL_SIMD_©™2f128x


	)

223 
	#__DECL_SIMD_log10


	)

224 
	#__DECL_SIMD_log10f


	)

225 
	#__DECL_SIMD_log10l


	)

226 
	#__DECL_SIMD_log10f16


	)

227 
	#__DECL_SIMD_log10f32


	)

228 
	#__DECL_SIMD_log10f64


	)

229 
	#__DECL_SIMD_log10f128


	)

230 
	#__DECL_SIMD_log10f32x


	)

231 
	#__DECL_SIMD_log10f64x


	)

232 
	#__DECL_SIMD_log10f128x


	)

234 
	#__DECL_SIMD_log2


	)

235 
	#__DECL_SIMD_log2f


	)

236 
	#__DECL_SIMD_log2l


	)

237 
	#__DECL_SIMD_log2f16


	)

238 
	#__DECL_SIMD_log2f32


	)

239 
	#__DECL_SIMD_log2f64


	)

240 
	#__DECL_SIMD_log2f128


	)

241 
	#__DECL_SIMD_log2f32x


	)

242 
	#__DECL_SIMD_log2f64x


	)

243 
	#__DECL_SIMD_log2f128x


	)

245 
	#__DECL_SIMD_log1p


	)

246 
	#__DECL_SIMD_log1pf


	)

247 
	#__DECL_SIMD_log1∂


	)

248 
	#__DECL_SIMD_log1pf16


	)

249 
	#__DECL_SIMD_log1pf32


	)

250 
	#__DECL_SIMD_log1pf64


	)

251 
	#__DECL_SIMD_log1pf128


	)

252 
	#__DECL_SIMD_log1pf32x


	)

253 
	#__DECL_SIMD_log1pf64x


	)

254 
	#__DECL_SIMD_log1pf128x


	)

256 
	#__DECL_SIMD_©™h


	)

257 
	#__DECL_SIMD_©™hf


	)

258 
	#__DECL_SIMD_©™hl


	)

259 
	#__DECL_SIMD_©™hf16


	)

260 
	#__DECL_SIMD_©™hf32


	)

261 
	#__DECL_SIMD_©™hf64


	)

262 
	#__DECL_SIMD_©™hf128


	)

263 
	#__DECL_SIMD_©™hf32x


	)

264 
	#__DECL_SIMD_©™hf64x


	)

265 
	#__DECL_SIMD_©™hf128x


	)

267 
	#__DECL_SIMD_acosh


	)

268 
	#__DECL_SIMD_acoshf


	)

269 
	#__DECL_SIMD_acoshl


	)

270 
	#__DECL_SIMD_acoshf16


	)

271 
	#__DECL_SIMD_acoshf32


	)

272 
	#__DECL_SIMD_acoshf64


	)

273 
	#__DECL_SIMD_acoshf128


	)

274 
	#__DECL_SIMD_acoshf32x


	)

275 
	#__DECL_SIMD_acoshf64x


	)

276 
	#__DECL_SIMD_acoshf128x


	)

278 
	#__DECL_SIMD_îf


	)

279 
	#__DECL_SIMD_îff


	)

280 
	#__DECL_SIMD_îÊ


	)

281 
	#__DECL_SIMD_îff16


	)

282 
	#__DECL_SIMD_îff32


	)

283 
	#__DECL_SIMD_îff64


	)

284 
	#__DECL_SIMD_îff128


	)

285 
	#__DECL_SIMD_îff32x


	)

286 
	#__DECL_SIMD_îff64x


	)

287 
	#__DECL_SIMD_îff128x


	)

289 
	#__DECL_SIMD_ènh


	)

290 
	#__DECL_SIMD_ènhf


	)

291 
	#__DECL_SIMD_ènhl


	)

292 
	#__DECL_SIMD_ènhf16


	)

293 
	#__DECL_SIMD_ènhf32


	)

294 
	#__DECL_SIMD_ènhf64


	)

295 
	#__DECL_SIMD_ènhf128


	)

296 
	#__DECL_SIMD_ènhf32x


	)

297 
	#__DECL_SIMD_ènhf64x


	)

298 
	#__DECL_SIMD_ènhf128x


	)

300 
	#__DECL_SIMD_asöh


	)

301 
	#__DECL_SIMD_asöhf


	)

302 
	#__DECL_SIMD_asöhl


	)

303 
	#__DECL_SIMD_asöhf16


	)

304 
	#__DECL_SIMD_asöhf32


	)

305 
	#__DECL_SIMD_asöhf64


	)

306 
	#__DECL_SIMD_asöhf128


	)

307 
	#__DECL_SIMD_asöhf32x


	)

308 
	#__DECL_SIMD_asöhf64x


	)

309 
	#__DECL_SIMD_asöhf128x


	)

311 
	#__DECL_SIMD_îfc


	)

312 
	#__DECL_SIMD_îfcf


	)

313 
	#__DECL_SIMD_îf˛


	)

314 
	#__DECL_SIMD_îfcf16


	)

315 
	#__DECL_SIMD_îfcf32


	)

316 
	#__DECL_SIMD_îfcf64


	)

317 
	#__DECL_SIMD_îfcf128


	)

318 
	#__DECL_SIMD_îfcf32x


	)

319 
	#__DECL_SIMD_îfcf64x


	)

320 
	#__DECL_SIMD_îfcf128x


	)

322 
	#__DECL_SIMD_èn


	)

323 
	#__DECL_SIMD_ènf


	)

324 
	#__DECL_SIMD_è∆


	)

325 
	#__DECL_SIMD_ènf16


	)

326 
	#__DECL_SIMD_ènf32


	)

327 
	#__DECL_SIMD_ènf64


	)

328 
	#__DECL_SIMD_ènf128


	)

329 
	#__DECL_SIMD_ènf32x


	)

330 
	#__DECL_SIMD_ènf64x


	)

331 
	#__DECL_SIMD_ènf128x


	)

	@/usr/include/bits/pthreadtypes.h

19 #i‚de‡
_BITS_PTHREADTYPES_COMMON_H


20 
	#_BITS_PTHREADTYPES_COMMON_H
 1

	)

23 
	~<bôs/thªad-sh¨ed-ty≥s.h
>

27 
	t±hªad_t
;

34 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

35 
	m__Æign
;

36 } 
	t±hªad_muãx©å_t
;

43 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

44 
	m__Æign
;

45 } 
	t±hªad_c⁄d©å_t
;

49 
	t±hªad_key_t
;

53 
	t__ONCE_ALIGNMENT
 
	t±hªad_⁄˚_t
;

56 
	u±hªad_©å_t


58 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

59 
	m__Æign
;

61 #i‚de‡
__have_±hªad_©å_t


62 
±hªad_©å_t
 
	t±hªad_©å_t
;

63 
	#__have_±hªad_©å_t
 1

	)

69 
__±hªad_muãx_s
 
	m__d©a
;

70 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

71 
	m__Æign
;

72 } 
	t±hªad_muãx_t
;

77 
__±hªad_c⁄d_s
 
	m__d©a
;

78 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

79 
__exãnsi⁄__
 
	m__Æign
;

80 } 
	t±hªad_c⁄d_t
;

83 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


88 
__±hªad_rwlock_¨ch_t
 
	m__d©a
;

89 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

90 
	m__Æign
;

91 } 
	t±hªad_rwlock_t
;

95 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

96 
	m__Æign
;

97 } 
	t±hªad_rwlock©å_t
;

101 #ifde‡
__USE_XOPEN2K


103 vﬁ©ûê
	t±hªad_•ölock_t
;

110 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

111 
	m__Æign
;

112 } 
	t±hªad_b¨rõr_t
;

116 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

117 
	m__Æign
;

118 } 
	t±hªad_b¨rõøâr_t
;

	@/usr/include/bits/stdint-intn.h

19 #i‚de‡
_BITS_STDINT_INTN_H


20 
	#_BITS_STDINT_INTN_H
 1

	)

22 
	~<bôs/ty≥s.h
>

24 
__öt8_t
 
	töt8_t
;

25 
__öt16_t
 
	töt16_t
;

26 
__öt32_t
 
	töt32_t
;

27 
__öt64_t
 
	töt64_t
;

	@/usr/include/bits/strings_fortified.h

19 #i‚de‡
__STRINGS_FORTIFIED


20 
	#__STRINGS_FORTIFIED
 1

	)

22 
__f‹tify_fun˘i⁄
 

23 
__NTH
 (
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__Àn
))

25 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
,

26 
	`__glibc_objsize0
 (
__de°
));

27 
	}
}

29 
__f‹tify_fun˘i⁄
 

30 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

32 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
,

33 
	`__glibc_objsize0
 (
__de°
));

34 
	}
}

	@/usr/include/bits/time64.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TIME64_H


24 
	#_BITS_TIME64_H
 1

	)

28 #i‡
__TIMESIZE
 == 64

30 
	#__TIME64_T_TYPE
 
__TIME_T_TYPE


	)

33 
	#__TIME64_T_TYPE
 
__SQUAD_TYPE


	)

	@/usr/include/bits/timesize.h

19 
	~<bôs/w‹dsize.h
>

21 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


23 
	#__TIMESIZE
 64

	)

26 
	#__TIMESIZE
 
__WORDSIZE


	)

	@/usr/include/bits/types/__locale_t.h

19 #i‚de‡
_BITS_TYPES___LOCALE_T_H


20 
	#_BITS_TYPES___LOCALE_T_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

41 
__loˇÀ_°ru˘
 *
	t__loˇÀ_t
;

	@/usr/include/bits/types/clock_t.h

1 #i‚de‡
__˛ock_t_deföed


2 
	#__˛ock_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__˛ock_t
 
	t˛ock_t
;

	@/usr/include/bits/types/clockid_t.h

1 #i‚de‡
__˛ockid_t_deföed


2 
	#__˛ockid_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__˛ockid_t
 
	t˛ockid_t
;

	@/usr/include/bits/types/time_t.h

1 #i‚de‡
__time_t_deföed


2 
	#__time_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 #ifde‡
__USE_TIME_BITS64


8 
__time64_t
 
	ttime_t
;

10 
__time_t
 
	ttime_t
;

	@/usr/include/bits/types/timer_t.h

1 #i‚de‡
__timî_t_deföed


2 
	#__timî_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__timî_t
 
	ttimî_t
;

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__SUSECONDS64_T_TYPE
 
__SQUAD_TYPE


	)

68 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

69 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

70 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

71 
	#__TIMER_T_TYPE
 *

	)

72 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

73 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

74 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

75 
	#__CPU_MASK_TYPE
 
__SYSCALL_ULONG_TYPE


	)

77 #ifde‡
__x86_64__


81 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

84 
	#__INO_T_MATCHES_INO64_T
 1

	)

87 
	#__RLIM_T_MATCHES_RLIM64_T
 1

	)

90 
	#__STATFS_MATCHES_STATFS64
 1

	)

93 
	#__KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64
 1

	)

95 
	#__RLIM_T_MATCHES_RLIM64_T
 0

	)

97 
	#__STATFS_MATCHES_STATFS64
 0

	)

99 
	#__KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64
 0

	)

103 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

7 
	#__WORDSIZE32_SIZE_ULONG
 0

	)

8 
	#__WORDSIZE32_PTRDIFF_LONG
 0

	)

11 #ifde‡
__x86_64__


12 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

14 
	#__SYSCALL_WORDSIZE
 64

	)

16 
	#__WORDSIZE_TIME64_COMPAT32
 0

	)

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

24 
	~<bôs/ídün.h
>

26 #ifde‡
__USE_MISC


27 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

28 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

29 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

30 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

33 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


35 
	~<bôs/byãsw≠.h
>

36 
	~<bôs/uöä-idítôy.h
>

38 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


39 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

40 
	#htﬁe16
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

41 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

42 
	#À16toh
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

44 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

45 
	#htﬁe32
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

46 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

47 
	#À32toh
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

49 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

50 
	#htﬁe64
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

51 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

52 
	#À64toh
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

55 
	#htobe16
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

56 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

57 
	#be16toh
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

58 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

60 
	#htobe32
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

61 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

62 
	#be32toh
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

63 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

65 
	#htobe64
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

66 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

67 
	#be64toh
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

68 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features-time64.h

20 
	~<bôs/w‹dsize.h
>

21 
	~<bôs/timesize.h
>

23 #i‡
deföed
 
_TIME_BITS


24 #i‡
_TIME_BITS
 == 64

25 #i‡! 
deföed
 (
_FILE_OFFSET_BITS
) || _FILE_OFFSET_BITS != 64

27 #ñi‡
__TIMESIZE
 == 32

28 
	#__USE_TIME_BITS64
 1

	)

30 #ñi‡
_TIME_BITS
 == 32

31 #i‡
__TIMESIZE
 > 32

35 #îr‹ 
InvÆid
 
_TIME_BITS
 
vÆue
 (
ˇn
 
⁄ly
 
be
 32 
‹
 64-
bô
)

	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

39 
	#__STDC_IEC_60559_BFP__
 201404L

	)

42 
	#__STDC_IEC_559__
 1

	)

43 
	#__STDC_IEC_60559_BFP__
 201404L

	)

46 #ifde‡
__GCC_IEC_559_COMPLEX


47 #i‡
__GCC_IEC_559_COMPLEX
 > 0

48 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_60559_COMPLEX__
 201404L

	)

52 
	#__STDC_IEC_559_COMPLEX__
 1

	)

53 
	#__STDC_IEC_60559_COMPLEX__
 201404L

	)

62 
	#__STDC_ISO_10646__
 201706L

	)

	@/usr/include/sys/cdefs.h

19 #i‚def 
_SYS_CDEFS_H


20 
	#_SYS_CDEFS_H
 1

	)

23 #i‚de‡
_FEATURES_H


24 
	~<„©uªs.h
>

30 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


35 #unde‡
__P


36 #unde‡
__PMT


42 #i‡(
deföed
 
__has_©åibuã
 \

43 && (!
deföed
 
	g__˛™g_mö‹__
 \

44 || 3 < 
	g__˛™g_maj‹__
 + (5 <
__˛™g_mö‹__
)))

45 
	#__glibc_has_©åibuã
(
©å
Ë
	`__has_©åibuã
 (©å)

	)

47 
	#__glibc_has_©åibuã
(
©å
Ë0

	)

49 #ifde‡
__has_buûtö


50 
	#__glibc_has_buûtö
(
«me
Ë
	`__has_buûtö
 («me)

	)

52 
	#__glibc_has_buûtö
(
«me
Ë0

	)

54 #ifde‡
__has_exãnsi⁄


55 
	#__glibc_has_exãnsi⁄
(
ext
Ë
	`__has_exãnsi⁄
 (ext)

	)

57 
	#__glibc_has_exãnsi⁄
(
ext
Ë0

	)

60 #i‡
deföed
 
__GNUC__
 || deföed 
__˛™g__


64 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


65 
	#__LEAF
 , 
__Àaf__


	)

66 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

68 
	#__LEAF


	)

69 
	#__LEAF_ATTR


	)

77 #i‡!
deföed
 
__˝lu•lus
 \

78 && (
__GNUC_PREREQ
 (3, 4Ë|| 
	$__glibc_has_©åibuã
 (
__nŸhrow__
))

79 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

80 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

81 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

82 
	#__NTHNL
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

84 #i‡
deföed
 
__˝lu•lus
 && (
	`__GNUC_PREREQ
 (2,8Ë|| 
__˛™g_maj‹
 >= 4)

85 #i‡
__˝lu•lus
 >= 201103L

86 
	#__THROW
 
	`n€x˚±
 (
åue
)

	)

88 
	#__THROW
 
	`throw
 ()

	)

90 
	#__THROWNL
 
__THROW


	)

91 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
__THROW


	)

92 
	#__NTHNL
(
f˘
Ëf˘ 
__THROW


	)

94 
	#__THROW


	)

95 
	#__THROWNL


	)

96 
	#__NTH
(
f˘
Ë
	)
fct

97 
	#__NTHNL
(
f˘
Ë
	)
fct

103 #i‡(
deföed
 
__˝lu•lus
 \

104 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

105 
	#__ölöe
 
ölöe


	)

107 
	#__ölöe


	)

110 
	#__THROW


	)

111 
	#__THROWNL


	)

112 
	#__NTH
(
f˘
Ë
	)
fct

118 
	#__P
(
¨gs
Ë
	)
args

119 
	#__PMT
(
¨gs
Ë
	)
args

124 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

125 
	#__STRING
(
x
Ë#x

	)

128 
	#__±r_t
 *

	)

132 #ifdef 
__˝lu•lus


133 
	#__BEGIN_DECLS
 "C" {

	)

134 
	#__END_DECLS
 
	}

	)
}

136 
	#__BEGIN_DECLS


	)

137 
	#__END_DECLS


	)

142 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

143 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

146 #i‡
__USE_FORTIFY_LEVEL
 =3 && (
__glibc_˛™g_¥îeq
 (9, 0) \

147 || 
	$__GNUC_PREREQ
 (12, 0))

148 
	#__glibc_objsize0
(
__o
Ë
	`__buûtö_dy«mic_obje˘_size
 (__o, 0)

	)

149 
	#__glibc_objsize
(
__o
Ë
	`__buûtö_dy«mic_obje˘_size
 (__o, 1)

	)

151 
	#__glibc_objsize0
(
__o
Ë
	`__bos0
 (__o)

	)

152 
	#__glibc_objsize
(
__o
Ë
	`__bos
 (__o)

	)

159 
	#__glibc_ß„_Àn_c⁄d
(
__l
, 
__s
, 
__osz
Ë((__lË<(__oszË/ (__s))

	)

160 
	#__glibc_unsig√d_‹_posôive
(
__l
) \

161 ((
	`__ty≥of
 (
__l
)) 0 < (__typeof (__l)) -1 \

162 || (
	`__buûtö_c⁄°™t_p
 (
__l
Ë&& (__lË> 0))

	)

167 
	#__glibc_ß„_‹_unknown_Àn
(
__l
, 
__s
, 
__osz
) \

168 (
	`__glibc_unsig√d_‹_posôive
 (
__l
) \

169 && 
	`__buûtö_c⁄°™t_p
 (
	`__glibc_ß„_Àn_c⁄d
 ((
__SIZE_TYPE__
Ë(
__l
), \

170 
__s
, 
__osz
)) \

171 && 
	`__glibc_ß„_Àn_c⁄d
 ((
__SIZE_TYPE__
Ë(
__l
), 
__s
, 
__osz
))

	)

176 
	#__glibc_unß„_Àn
(
__l
, 
__s
, 
__osz
) \

177 (
	`__glibc_unsig√d_‹_posôive
 (
__l
) \

178 && 
	`__buûtö_c⁄°™t_p
 (
	`__glibc_ß„_Àn_c⁄d
 ((
__SIZE_TYPE__
Ë(
__l
), \

179 
__s
, 
__osz
)) \

180 && !
	`__glibc_ß„_Àn_c⁄d
 ((
__SIZE_TYPE__
Ë(
__l
), 
__s
, 
__osz
))

	)

185 
	#__glibc_f‹tify
(
f
, 
__l
, 
__s
, 
__osz
, ...) \

186 (
	`__glibc_ß„_‹_unknown_Àn
 (
__l
, 
__s
, 
__osz
) \

187 ? 
__
 ## 
f
 ## 
	`_Æüs
 (
__VA_ARGS__
) \

188 : (
	`__glibc_unß„_Àn
 (
__l
, 
__s
, 
__osz
) \

189 ? 
__
 ## 
f
 ## 
	`_chk_w¨n
 (
__VA_ARGS__
, 
__osz
) \

190 : 
__
 ## 
f
 ## 
	`_chk
 (
__VA_ARGS__
, 
__osz
))) \

191 

	)

195 
	#__glibc_f‹tify_n
(
f
, 
__l
, 
__s
, 
__osz
, ...) \

196 (
	`__glibc_ß„_‹_unknown_Àn
 (
__l
, 
__s
, 
__osz
) \

197 ? 
__
 ## 
f
 ## 
	`_Æüs
 (
__VA_ARGS__
) \

198 : (
	`__glibc_unß„_Àn
 (
__l
, 
__s
, 
__osz
) \

199 ? 
__
 ## 
f
 ## 
	`_chk_w¨n
 (
__VA_ARGS__
, (
__osz
Ë/ (
__s
)) \

200 : 
__
 ## 
f
 ## 
	`_chk
 (
__VA_ARGS__
, (
__osz
Ë/ (
__s
)))) \

201 

	)

202 #i‡
	`__GNUC_PREREQ
 (4,3)

203 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

204 
	#__îr‹de˛
(
«me
, 
msg
) \

205 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

207 
	#__w¨«âr
(
msg
)

	)

208 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

215 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >199901L && !deföed 
__HP_cc


216 
	#__Êex¨r
 []

	)

217 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

218 #ñi‡
	`__GNUC_PREREQ
 (2,97Ë|| 
deföed
 
__˛™g__


221 
	#__Êex¨r
 []

	)

222 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

223 #ñi‡
deföed
 
__GNUC__


226 
	#__Êex¨r
 [0]

	)

227 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

230 
	#__Êex¨r
 [1]

	)

231 
	#__glibc_c99_Êex¨r_avaûabÀ
 0

	)

245 #i‡(
deföed
 
__GNUC__
 && __GNUC__ >2Ë|| (
__˛™g_maj‹__
 >= 4)

247 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

248 #ifde‡
__˝lu•lus


249 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

250 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

251 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

252 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

254 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

255 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

256 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

257 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

259 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

260 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

273 #i‡!(
deföed
 
__GNUC__
 || deföed 
__˛™g__
)

274 
	#__©åibuã__
(
xyz
Ë

	)

280 #i‡
	`__GNUC_PREREQ
 (2,96Ë|| 
	`__glibc_has_©åibuã
 (
__mÆloc__
)

281 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

283 
	#__©åibuã_mÆloc__


	)

288 #i‡
	`__GNUC_PREREQ
 (4, 3)

289 
	#__©åibuã_Æloc_size__
(
∑øms
) \

290 
	`__©åibuã__
 ((
__Æloc_size__
 
∑øms
))

	)

292 
	#__©åibuã_Æloc_size__
(
∑øms
Ë

	)

297 #i‡
	`__GNUC_PREREQ
 (4, 9Ë|| 
	`__glibc_has_©åibuã
 (
__Æloc_Æign__
)

298 
	#__©åibuã_Æloc_Æign__
(
∑øm
) \

299 
	`__©åibuã__
 ((
__Æloc_Æign__
 
∑øm
))

	)

301 
	#__©åibuã_Æloc_Æign__
(
∑øm
Ë

	)

307 #i‡
	`__GNUC_PREREQ
 (2,96Ë|| 
	`__glibc_has_©åibuã
 (
__puª__
)

308 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

310 
	#__©åibuã_puª__


	)

314 #i‡
	`__GNUC_PREREQ
 (2,5Ë|| 
	`__glibc_has_©åibuã
 (
__c⁄°__
)

315 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

317 
	#__©åibuã_c⁄°__


	)

320 #i‡
	`__GNUC_PREREQ
 (2,7Ë|| 
	`__glibc_has_©åibuã
 (
__unu£d__
)

321 
	#__©åibuã_maybe_unu£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

323 
	#__©åibuã_maybe_unu£d__


	)

329 #i‡
	`__GNUC_PREREQ
 (3,1Ë|| 
	`__glibc_has_©åibuã
 (
__u£d__
)

330 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

331 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

333 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

334 
	#__©åibuã_noölöe__


	)

338 #i‡
	`__GNUC_PREREQ
 (3,2Ë|| 
	`__glibc_has_©åibuã
 (
__dïªˇãd__
)

339 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

341 
	#__©åibuã_dïªˇãd__


	)

347 #i‡
	`__GNUC_PREREQ
 (4,5) \

348 || 
	$__glibc_has_exãnsi⁄
 (
__©åibuã_dïªˇãd_wôh_mesßge__
)

349 
	#__©åibuã_dïªˇãd_msg__
(
msg
) \

350 
	`__©åibuã__
 ((
	`__dïªˇãd__
 (
msg
)))

	)

352 
	#__©åibuã_dïªˇãd_msg__
(
msg
Ë
__©åibuã_dïªˇãd__


	)

361 #i‡
	`__GNUC_PREREQ
 (2,8Ë|| 
	`__glibc_has_©åibuã
 (
__f‹m©_¨g__
)

362 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

364 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

371 #i‡
	`__GNUC_PREREQ
 (2,97Ë|| 
	`__glibc_has_©åibuã
 (
__f‹m©__
)

372 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

373 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

375 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

382 #i‚de‡
__©åibuã_n⁄nuŒ__


383 #i‡
	`__GNUC_PREREQ
 (3,3Ë|| 
	`__glibc_has_©åibuã
 (
__n⁄nuŒ__
)

384 
	#__©åibuã_n⁄nuŒ__
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

386 
	#__©åibuã_n⁄nuŒ__
(
∑øms
)

	)

389 #i‚de‡
__n⁄nuŒ


390 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã_n⁄nuŒ__
 (∑øms)

	)

395 #i‚de‡
__ªtu∫s_n⁄nuŒ


396 #i‡
	`__GNUC_PREREQ
 (4, 9Ë|| 
	`__glibc_has_©åibuã
 (
__ªtu∫s_n⁄nuŒ__
)

397 
	#__ªtu∫s_n⁄nuŒ
 
	`__©åibuã__
 ((
__ªtu∫s_n⁄nuŒ__
))

	)

399 
	#__ªtu∫s_n⁄nuŒ


	)

405 #i‡
	`__GNUC_PREREQ
 (3,4Ë|| 
	`__glibc_has_©åibuã
 (
__w¨n_unu£d_ªsu…__
)

406 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

407 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

408 #i‡
deföed
 
__USE_FORTIFY_LEVEL
 && __USE_FORTIFY_LEVEL > 0

409 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

412 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

414 #i‚de‡
__wur


415 
	#__wur


	)

419 #i‡
	`__GNUC_PREREQ
 (3,2Ë|| 
	`__glibc_has_©åibuã
 (
__Æways_ölöe__
)

423 #unde‡
__Æways_ölöe


424 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

426 #unde‡
__Æways_ölöe


427 
	#__Æways_ölöe
 
__ölöe


	)

432 #i‡
	`__GNUC_PREREQ
 (4,3Ë|| 
	`__glibc_has_©åibuã
 (
__¨tificül__
)

433 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

435 
	#__©åibuã_¨tificül__


	)

447 #i‡(!
deföed
 
__˝lu•lus
 || 
	`__GNUC_PREREQ
 (4,3) \

448 || (
deföed
 
__˛™g__
 && (deföed 
__GNUC_STDC_INLINE__
 \

449 || 
deföed
 
__GNUC_GNU_INLINE__
)))

450 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


451 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

452 
	#__exã∫_Æways_ölöe
 \

453 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

455 
	#__exã∫_ölöe
 
__ölöe


	)

456 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

460 #ifde‡
__exã∫_Æways_ölöe


461 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

466 #i‡
	`__GNUC_PREREQ
 (4,3)

467 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

468 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

475 #i‡!(
	`__GNUC_PREREQ
 (2,8Ë|| 
deföed
 
__˛™g__
)

476 
	#__exãnsi⁄__


	)

482 #i‡!(
	`__GNUC_PREREQ
 (2,92Ë|| 
__˛™g_maj‹__
 >= 3)

483 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

484 
	#__ª°ri˘
 
ª°ri˘


	)

486 
	#__ª°ri˘


	)

494 #i‡(
	`__GNUC_PREREQ
 (3,1Ë|| 
__˛™g_maj‹__
 >3Ë&& !
deföed
 
__˝lu•lus


495 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

497 #ifde‡
__GNUC__


498 
	#__ª°ri˘_¨r


	)

500 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

501 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

504 
	#__ª°ri˘_¨r


	)

509 #i‡(
__GNUC__
 >3Ë|| 
	`__glibc_has_buûtö
 (
__buûtö_ex≥˘
)

510 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 0)

	)

511 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 1)

	)

513 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

514 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

517 #i‡(!
deföed
 
_N‹ëu∫
 \

518 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

519 && !(
	`__GNUC_PREREQ
 (4,7) \

520 || (3 < 
__˛™g_maj‹__
 + (5 <
__˛™g_mö‹__
))))

521 #i‡
	`__GNUC_PREREQ
 (2,8)

522 
	#_N‹ëu∫
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

	)

524 
	#_N‹ëu∫


	)

528 #i‡
	`__GNUC_PREREQ
 (8, 0)

532 
	#__©åibuã_n⁄°rög__
 
	`__©åibuã__
 ((
__n⁄°rög__
))

	)

534 
	#__©åibuã_n⁄°rög__


	)

538 #unde‡
__©åibuã_c›y__


539 #i‡
	`__GNUC_PREREQ
 (9, 0)

542 
	#__©åibuã_c›y__
(
¨g
Ë
	`__©åibuã__
 ((
	`__c›y__
 (¨g)))

	)

544 
	#__©åibuã_c›y__
(
¨g
)

	)

547 #i‡(!
deföed
 
_Sètic_as£π
 && !deföed 
__˝lu•lus
 \

548 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

549 && (!(
	`__GNUC_PREREQ
 (4, 6Ë|| 
__˛™g_maj‹__
 >= 4) \

550 || 
deföed
 
__STRICT_ANSI__
))

551 
	#_Sètic_as£π
(
ex¥
, 
dügno°ic
) \

552 (*
	`__Sètic_as£π_fun˘i⁄
 ()) \

553 [!! (°ru˘ { 
__îr‹_if_√g©ive
: (
ex¥
Ë? 2 : -1; })]

	)

558 #i‚de‡
__GNULIB_CDEFS


559 
	~<bôs/w‹dsize.h
>

560 
	~<bôs/l⁄g-doubÀ.h
>

563 #i‡
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

564 #ifde‡
__REDIRECT


567 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë... 
unu£d__ldbl_ªdú


	)

568 
	#__LDBL_REDIR_DECL
(
«me
) \

569 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__" #«mê"õì128"));

	)

572 
	#__LDBL_REDIR2_DECL
(
«me
) \

573 
	`__ty≥of
 (
__
##
«me
) __##name \

574 
	`__asm
 (
	`__ASMNAME
 ("__" #«mê"õì128"));

	)

577 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë... 
unu£d__ldbl_ªdú1


	)

578 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

579 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

581 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

582 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

583 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

584 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__
##
Æüs
##
õì128
)

	)

587 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë... 
unu£d__ªdúe˘_ldbl


	)

588 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë... 
unu£d__ldbl_ªdú_¡h


	)

591 
	`_Sètic_as£π
 (0, "IEEE 128-bitsÜong doubleÑequiresÑedirection onÅhisÖlatform");

593 #ñi‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


594 
	#__LDBL_COMPAT
 1

	)

595 #ifde‡
__REDIRECT


596 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

597 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

598 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

599 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

600 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

601 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

602 
	#__LDBL_REDIR2_DECL
(
«me
) \

603 
	`__ty≥of
 (
__
##
«me
Ë__##«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl___" #«me));

	)

604 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

605 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

606 
	#__LDBL_REDIR_DECL
(
«me
) \

607 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

608 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

609 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

610 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

611 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

614 #i‡(!
deföed
 
__LDBL_COMPAT
 && 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 0) \

615 || !
deföed
 
__REDIRECT


616 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

617 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

618 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

619 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

620 
	#__LDBL_REDIR2_DECL
(
«me
)

	)

621 
	#__LDBL_REDIR_DECL
(
«me
)

	)

622 #ifde‡
__REDIRECT


623 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

624 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

625 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

634 #i‡
	`__GNUC_PREREQ
 (4,8Ë|| 
	`__glibc_˛™g_¥îeq
 (3,5)

635 
	#__glibc_ma¸o_w¨nög1
(
mesßge
Ë
	`_Pøgma
 (#mesßge)

	)

636 
	#__glibc_ma¸o_w¨nög
(
mesßge
) \

637 
	`__glibc_ma¸o_w¨nög1
 (
GCC
 
w¨nög
 
mesßge
)

	)

639 
	#__glibc_ma¸o_w¨nög
(
msg
)

	)

649 #i‡!
deföed
 
__˝lu•lus
 \

650 && (
	`__GNUC_PREREQ
 (4, 9) \

651 || 
	`__glibc_has_exãnsi⁄
 (
c_gíîic_£À˘i⁄s
) \

652 || (!
deföed
 
__GNUC__
 && deföed 
__STDC_VERSION__
 \

653 && 
__STDC_VERSION__
 >= 201112L))

654 
	#__HAVE_GENERIC_SELECTION
 1

	)

656 
	#__HAVE_GENERIC_SELECTION
 0

	)

659 #i‡
	`__GNUC_PREREQ
 (10, 0)

665 
	#__©å_ac˚ss
(
x
Ë
	`__©åibuã__
 ((
__ac˚ss__
 x))

	)

670 #i‡
__USE_FORTIFY_LEVEL
 == 3

671 
	#__f‹tifõd_©å_ac˚ss
(
a
, 
o
, 
s
Ë
	`__©åibuã__
 ((
	`__ac˚ss__
 (a, o)))

	)

673 
	#__f‹tifõd_©å_ac˚ss
(
a
, 
o
, 
s
Ë
	`__©å_ac˚ss
 (◊, o, s))

	)

675 #i‡
	`__GNUC_PREREQ
 (11, 0)

676 
	#__©å_ac˚ss_n⁄e
(
¨gno
Ë
	`__©åibuã__
 ((
	`__ac˚ss__
 (
__n⁄e__
,árgno)))

	)

678 
	#__©å_ac˚ss_n⁄e
(
¨gno
)

	)

681 
	#__f‹tifõd_©å_ac˚ss
(
a
, 
o
, 
s
)

	)

682 
	#__©å_ac˚ss
(
x
)

	)

683 
	#__©å_ac˚ss_n⁄e
(
¨gno
)

	)

686 #i‡
	`__GNUC_PREREQ
 (11, 0)

689 
	#__©å_dóŒoc
(
dóŒoc
, 
¨gno
) \

690 
	`__©åibuã__
 ((
	`__mÆloc__
 (
dóŒoc
, 
¨gno
)))

	)

691 
	#__©å_dóŒoc_‰ì
 
	`__©å_dóŒoc
 (
__buûtö_‰ì
, 1)

	)

693 
	#__©å_dóŒoc
(
dóŒoc
, 
¨gno
)

	)

694 
	#__©å_dóŒoc_‰ì


	)

699 #i‡
	`__GNUC_PREREQ
 (4, 1)

700 
	#__©åibuã_ªtu∫s_twi˚__
 
	`__©åibuã__
 ((
__ªtu∫s_twi˚__
))

	)

702 
	#__©åibuã_ªtu∫s_twi˚__


	)

	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/ty≥s/sig£t_t.h
>

36 
	~<bôs/ty≥s/time_t.h
>

37 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

38 #ifde‡
__USE_XOPEN2K


39 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

42 #i‚de‡
__su£c⁄ds_t_deföed


43 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

44 
	#__su£c⁄ds_t_deföed


	)

49 
	t__fd_mask
;

52 #unde‡
__NFDBITS


54 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

55 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

56 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë(1UL << ((dË% 
__NFDBITS
)))

	)

63 #ifde‡
__USE_XOPEN


64 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

65 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

67 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

68 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

70 } 
	tfd_£t
;

73 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

75 #ifde‡
__USE_MISC


77 
__fd_mask
 
	tfd_mask
;

80 
	#NFDBITS
 
__NFDBITS


	)

85 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

86 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

87 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

88 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

91 
	g__BEGIN_DECLS


101 #i‚de‡
__USE_TIME_BITS64


102 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

103 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

104 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

105 
timevÆ
 *
__ª°ri˘
 
__timeout
);

107 #ifde‡
__REDIRECT


108 
__REDIRECT
 (
£À˘
,

109 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
),

113 
__£À˘64
);

115 
	#£À˘
 
__£À˘64


	)

119 #ifde‡
__USE_XOPEN2K


126 #i‚de‡
__USE_TIME_BITS64


127 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

128 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

129 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

130 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

131 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

133 #ifde‡
__REDIRECT


134 
__REDIRECT
 (
p£À˘
,

135 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

136 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

137 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

138 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

139 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
),

140 
__p£À˘64
);

142 
	#p£À˘
 
__p£À˘64


	)

149 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


150 
	~<bôs/£À˘2.h
>

153 
	g__END_DECLS


	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	#__bsw≠_c⁄°™t_16
(
x
) \

31 ((
__uöt16_t
Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

33 
__ölöe
 
__uöt16_t


34 
	$__bsw≠_16
 (
__uöt16_t
 
__bsx
)

36 #i‡
	`__GNUC_PREREQ
 (4, 8)

37  
	`__buûtö_bsw≠16
 (
__bsx
);

39  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

41 
	}
}

44 
	#__bsw≠_c⁄°™t_32
(
x
) \

45 ((((
x
) & 0xff000000u) >> 24) | (((x) & 0x00ff0000u) >> 8) \

46 | (((
x
Ë& 0x0000ff00uË<< 8Ë| (((xË& 0x000000ffuË<< 24))

	)

48 
__ölöe
 
__uöt32_t


49 
	$__bsw≠_32
 (
__uöt32_t
 
__bsx
)

51 #i‡
	`__GNUC_PREREQ
 (4, 3)

52  
	`__buûtö_bsw≠32
 (
__bsx
);

54  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

56 
	}
}

59 
	#__bsw≠_c⁄°™t_64
(
x
) \

60 ((((
x
) & 0xff00000000000000ull) >> 56) \

61 | (((
x
) & 0x00ff000000000000ull) >> 40) \

62 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

63 | (((
x
) & 0x000000ff00000000ull) >> 8) \

64 | (((
x
) & 0x00000000ff000000ull) << 8) \

65 | (((
x
) & 0x0000000000ff0000ull) << 24) \

66 | (((
x
) & 0x000000000000ff00ull) << 40) \

67 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

69 
__exãnsi⁄__
 
__ölöe
 
__uöt64_t


70 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

72 #i‡
	`__GNUC_PREREQ
 (4, 3)

73  
	`__buûtö_bsw≠64
 (
__bsx
);

75  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

77 
	}
}

	@/usr/include/bits/endian.h

19 #i‚de‡
_BITS_ENDIAN_H


20 
	#_BITS_ENDIAN_H
 1

	)

30 
	#__LITTLE_ENDIAN
 1234

	)

31 
	#__BIG_ENDIAN
 4321

	)

32 
	#__PDP_ENDIAN
 3412

	)

35 
	~<bôs/ídü¬ess.h
>

39 #i‚de‡
__FLOAT_WORD_ORDER


40 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

43 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


44 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

45 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


46 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

	@/usr/include/bits/long-double.h

21 
	#__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 0

	)

	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


25 
	#__FD_ZERO
(
s
) \

27 
__i
; \

28 
fd_£t
 *
__¨r
 = (
s
); \

29 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

30 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

31 } 0)

	)

32 
	#__FD_SET
(
d
, 
s
) \

33 ((Ë(
	`__FDS_BITS
 (
s
)[
	`__FD_ELT
(
d
)] |
	`__FD_MASK
(d)))

	)

34 
	#__FD_CLR
(
d
, 
s
) \

35 ((Ë(
	`__FDS_BITS
 (
s
)[
	`__FD_ELT
(
d
)] &~
	`__FD_MASK
(d)))

	)

36 
	#__FD_ISSET
(
d
, 
s
) \

37 ((
	`__FDS_BITS
 (
s
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/thread-shared-types.h

19 #i‚de‡
_THREAD_SHARED_TYPES_H


20 
	#_THREAD_SHARED_TYPES_H
 1

	)

44 
	~<bôs/±hªadty≥s-¨ch.h
>

46 
	~<bôs/©omic_wide_cou¡î.h
>

51 
	s__±hªad_öã∫Æ_li°


53 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

54 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

55 } 
	t__±hªad_li°_t
;

57 
	s__±hªad_öã∫Æ_¶i°


59 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

60 } 
	t__±hªad_¶i°_t
;

76 
	~<bôs/°ru˘_muãx.h
>

89 
	~<bôs/°ru˘_rwlock.h
>

94 
	s__±hªad_c⁄d_s


96 
__©omic_wide_cou¡î
 
	m__w£q
;

97 
__©omic_wide_cou¡î
 
	m__g1_°¨t
;

98 
	m__g_ªfs
[2] 
	m__LOCK_ALIGNMENT
;

99 
	m__g_size
[2];

100 
	m__g1_‹ig_size
;

101 
	m__wªfs
;

102 
	m__g_sig«ls
[2];

105 
	t__tss_t
;

106 
	t__thrd_t
;

110 
__d©a
 
	m__ONCE_ALIGNMENT
;

111 } 
	t__⁄˚_Êag
;

113 
	#__ONCE_FLAG_INIT
 { 0 }

	)

	@/usr/include/bits/types/sigset_t.h

1 #i‚de‡
__sig£t_t_deföed


2 
	#__sig£t_t_deföed
 1

	)

4 
	~<bôs/ty≥s/__sig£t_t.h
>

7 
__sig£t_t
 
	tsig£t_t
;

	@/usr/include/bits/types/struct_timespec.h

2 #i‚de‡
_STRUCT_TIMESPEC


3 
	#_STRUCT_TIMESPEC
 1

	)

5 
	~<bôs/ty≥s.h
>

6 
	~<bôs/ídün.h
>

7 
	~<bôs/ty≥s/time_t.h
>

11 
	stime•ec


13 #ifde‡
__USE_TIME_BITS64


14 
__time64_t
 
	mtv_£c
;

16 
__time_t
 
	mtv_£c
;

18 #i‡
__WORDSIZE
 == 64 \

19 || (
deföed
 
	m__SYSCALL_WORDSIZE
 && __SYSCALL_WORDSIZE == 64) \

20 || (
__TIMESIZE
 =32 && !
deföed
 
__USE_TIME_BITS64
)

21 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

23 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


25 
	mtv_n£c
;

27 
	mtv_n£c
;

	@/usr/include/bits/types/struct_timeval.h

1 #i‚de‡
__timevÆ_deföed


2 
	#__timevÆ_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

8 
	stimevÆ


10 #ifde‡
__USE_TIME_BITS64


11 
__time64_t
 
	mtv_£c
;

12 
__su£c⁄ds64_t
 
	mtv_u£c
;

14 
__time_t
 
	mtv_£c
;

15 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/uintn-identity.h

19 #i‡!
deföed
 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_UINTN_IDENTITY_H


24 
	#_BITS_UINTN_IDENTITY_H
 1

	)

26 
	~<bôs/ty≥s.h
>

32 
__ölöe
 
__uöt16_t


33 
	$__uöt16_idítôy
 (
__uöt16_t
 
__x
)

35  
__x
;

36 
	}
}

38 
__ölöe
 
__uöt32_t


39 
	$__uöt32_idítôy
 (
__uöt32_t
 
__x
)

41  
__x
;

42 
	}
}

44 
__ölöe
 
__uöt64_t


45 
	$__uöt64_idítôy
 (
__uöt64_t
 
__x
)

47  
__x
;

48 
	}
}

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_chÊags


	)

11 
	#__°ub_fchÊags


	)

12 
	#__°ub_gây


	)

13 
	#__°ub_ªvoke


	)

14 
	#__°ub_£éogö


	)

15 
	#__°ub_sigªtu∫


	)

16 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___com∑t_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_fchÊags


	)

13 
	#__°ub_gây


	)

14 
	#__°ub_ªvoke


	)

15 
	#__°ub_£éogö


	)

16 
	#__°ub_sigªtu∫


	)

17 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-x32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___com∑t_bdÊush


	)

11 
	#__°ub___com∑t_¸óã_moduÀ


	)

12 
	#__°ub___com∑t_gë_kî√l_syms


	)

13 
	#__°ub___com∑t_nfs£rv˘l


	)

14 
	#__°ub___com∑t_quîy_moduÀ


	)

15 
	#__°ub___com∑t_u£lib


	)

16 
	#__°ub_chÊags


	)

17 
	#__°ub_fchÊags


	)

18 
	#__°ub_gây


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_°ty


	)

	@/usr/include/bits/atomic_wide_counter.h

19 #i‚de‡
_BITS_ATOMIC_WIDE_COUNTER_H


20 
	#_BITS_ATOMIC_WIDE_COUNTER_H


	)

27 
__exãnsi⁄__
 
	m__vÆue64
;

30 
	m__low
;

31 
	m__high
;

32 } 
	m__vÆue32
;

33 } 
	t__©omic_wide_cou¡î
;

	@/usr/include/bits/endianness.h

1 #i‚de‡
_BITS_ENDIANNESS_H


2 
	#_BITS_ENDIANNESS_H
 1

	)

4 #i‚de‡
_BITS_ENDIAN_H


9 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/pthreadtypes-arch.h

18 #i‚de‡
_BITS_PTHREADTYPES_ARCH_H


19 
	#_BITS_PTHREADTYPES_ARCH_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

28 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

30 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

31 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

32 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

36 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

37 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

38 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

39 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

41 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

42 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

43 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

44 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

45 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

47 
	#__LOCK_ALIGNMENT


	)

48 
	#__ONCE_ALIGNMENT


	)

50 #i‚de‡
__x86_64__


52 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/struct_mutex.h

19 #i‚de‡
_THREAD_MUTEX_INTERNAL_H


20 
	#_THREAD_MUTEX_INTERNAL_H
 1

	)

22 
	s__±hªad_muãx_s


24 
	m__lock
;

25 
	m__cou¡
;

26 
	m__ow√r
;

27 #ifde‡
__x86_64__


28 
	m__nu£rs
;

32 
	m__köd
;

33 #ifde‡
__x86_64__


34 
	m__•ös
;

35 
	m__ñisi⁄
;

36 
__±hªad_li°_t
 
	m__li°
;

37 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

39 
	m__nu£rs
;

40 
__exãnsi⁄__
 union

44 
	m__e•ös
;

45 
	m__ìlisi⁄
;

46 
	#__•ös
 
__ñisi⁄_d©a
.
__e•ös


	)

47 
	#__ñisi⁄
 
__ñisi⁄_d©a
.
__ìlisi⁄


	)

48 } 
	m__ñisi⁄_d©a
;

49 
__±hªad_¶i°_t
 
	m__li°
;

51 
	#__PTHREAD_MUTEX_HAVE_PREV
 0

	)

55 #ifde‡
__x86_64__


56 
	#__PTHREAD_MUTEX_INITIALIZER
(
__köd
) \

57 0, 0, 0, 0, 
__köd
, 0, 0, { 0, 0 }

	)

59 
	#__PTHREAD_MUTEX_INITIALIZER
(
__köd
) \

60 0, 0, 0, 
__köd
, 0, { { 0, 0 } }

	)

	@/usr/include/bits/struct_rwlock.h

20 #i‚de‡
_RWLOCK_INTERNAL_H


21 
	#_RWLOCK_INTERNAL_H


	)

23 
	s__±hªad_rwlock_¨ch_t


25 
	m__ªadîs
;

26 
	m__wrôîs
;

27 
	m__wΩha£_fuãx
;

28 
	m__wrôîs_fuãx
;

29 
	m__∑d3
;

30 
	m__∑d4
;

31 #ifde‡
__x86_64__


32 
	m__cur_wrôî
;

33 
	m__sh¨ed
;

34 sig√d 
	m__rwñisi⁄
;

35 #ifde‡ 
__ILP32__


36 
	m__∑d1
[3];

37 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0 }

	)

39 
	m__∑d1
[7];

40 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0, 0, 0, 0, 0 }

	)

42 
	m__∑d2
;

45 
	m__Êags
;

49 
	m__Êags
;

50 
	m__sh¨ed
;

51 sig√d 
	m__rwñisi⁄
;

52 
	m__∑d2
;

53 
	m__cur_wrôî
;

57 #ifde‡
__x86_64__


58 
	#__PTHREAD_RWLOCK_INITIALIZER
(
__Êags
) \

59 0, 0, 0, 0, 0, 0, 0, 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, 
__Êags


	)

61 
	#__PTHREAD_RWLOCK_INITIALIZER
(
__Êags
) \

62 0, 0, 0, 0, 0, 0, 
__Êags
, 0, 0, 0, 0

	)

	@/usr/include/bits/types/__sigset_t.h

1 #i‚de‡
____sig£t_t_deföed


2 
	#____sig£t_t_deföed


	)

4 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

7 
	m__vÆ
[
_SIGSET_NWORDS
];

8 } 
	t__sig£t_t
;

	@
1
.
1
/usr/include
79
2191
decode.cc
decode.h
exec_helper.cc
executor.cc
executor.h
main.cc
memory.cc
memory.h
mips.cc
mips.h
wb.cc
wb.h
../../common/syscall.h
/usr/include/assert.h
/usr/include/math.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/alloca.h
/usr/include/bits/floatn.h
/usr/include/bits/flt-eval-method.h
/usr/include/bits/fp-fast.h
/usr/include/bits/fp-logb.h
/usr/include/bits/iscanonical.h
/usr/include/bits/libc-header-start.h
/usr/include/bits/math-vector.h
/usr/include/bits/mathcalls-helper-functions.h
/usr/include/bits/mathcalls-narrow.h
/usr/include/bits/mathcalls.h
/usr/include/bits/stdlib-bsearch.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string_fortified.h
/usr/include/bits/types.h
/usr/include/bits/types/locale_t.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/features.h
/usr/include/strings.h
/usr/include/sys/types.h
/usr/include/bits/floatn-common.h
/usr/include/bits/libm-simd-decl-stubs.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/stdint-intn.h
/usr/include/bits/strings_fortified.h
/usr/include/bits/time64.h
/usr/include/bits/timesize.h
/usr/include/bits/types/__locale_t.h
/usr/include/bits/types/clock_t.h
/usr/include/bits/types/clockid_t.h
/usr/include/bits/types/time_t.h
/usr/include/bits/types/timer_t.h
/usr/include/bits/typesizes.h
/usr/include/bits/wordsize.h
/usr/include/endian.h
/usr/include/features-time64.h
/usr/include/gnu/stubs.h
/usr/include/stdc-predef.h
/usr/include/sys/cdefs.h
/usr/include/sys/select.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/long-double.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/thread-shared-types.h
/usr/include/bits/types/sigset_t.h
/usr/include/bits/types/struct_timespec.h
/usr/include/bits/types/struct_timeval.h
/usr/include/bits/uintn-identity.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/gnu/stubs-x32.h
/usr/include/bits/atomic_wide_counter.h
/usr/include/bits/endianness.h
/usr/include/bits/pthreadtypes-arch.h
/usr/include/bits/struct_mutex.h
/usr/include/bits/struct_rwlock.h
/usr/include/bits/types/__sigset_t.h
